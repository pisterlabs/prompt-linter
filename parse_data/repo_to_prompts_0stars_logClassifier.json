{"recursive-reshy~langchain": ["'I have a {animal_type} pet and I want a cool name for it. It is {pet_color} in color. Suggest me five cool names for my pet.'", "\"What is average age of a dog? Multiply it by 7.\"", "'You'", "'question'", "\"question\"", "\"\"\"\n        You are a helpful assistant that that can answer questions about youtube videos \n        based on the video's transcript.\n        \n        Answer the following question: {question}\n        By searching the following video transcript: {docs}\n        \n        Only use the factual information from the transcript to answer the question.\n        \n        If you feel like you don't have enough information to answer the question, say \"I don't know\".\n        \n        Your answers should be verbose and detailed.\n      \"\"\""], "erodrigu~langchain": ["\"Respond to the user's question that is delimited by triple backticks \"", "\"to provide some context {context}\"", "\"\"\"\n\"How does photosynthesis work?\",\n\"Can you explain the theory of relativity?\",\n\"Tell me about the history of Ancient Rome.\"\n\"\"\""], "Kvkthecreator~langchaintest": ["\"\"\"You are an AI assistant helping a human keep track of facts about relevant people, places, and concepts in their life. Update the summary of the provided entity in the \"Entity\" section based on the last line of your conversation with the human. If you are writing the summary for the first time, return a single sentence.\nThe update should only include facts that are relayed in the last line of conversation about the provided entity, and should only contain facts about the provided entity.\n\nIf there is no new information about the provided entity or the information is not worth noting (not an important or relevant fact to remember long-term), return the existing summary unchanged.\n\nFull conversation history (for context):\n{history}\n\nEntity to summarize:\n{entity}\n\nExisting summary of {entity}:\n{summary}\n\nLast line of conversation:\nHuman: {input}\nUpdated summary:\"\"\"", "\"\"\"Chain for deciding a destination chain and the input to it.\"\"\"", "\"\"\"Map of name to candidate chains that inputs can be routed to.\"\"\"", "\"\"\"Default chain to use when router doesn't map input to one of the destinations.\"\"\"", "\"\"\"{question}\\n\\n\"\"\"", "\"question\"", "\"\"\"Here is a statement:\n{statement}\nMake a bullet point list of the assumptions you made when producing the above statement.\\n\\n\"\"\"", "\"\"\"Here is a bullet point list of assertions:\n{assertions}\nFor each assertion, determine whether it is true or false. If it is false, explain why.\\n\\n\"\"\"", "\"\"\"{checked_assertions}\n\nQuestion: In light of the above assertions and checks, how would you answer the question '{question}'?\n\nAnswer:\"\"\"", "\"question\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Compute ngram overlap score of source and example as sentence_bleu score.\n\n    Use sentence_bleu with method1 smoothing function and auto reweighting.\n    Return float value between 0.0 and 1.0 inclusive.\n    https://www.nltk.org/_modules/nltk/translate/bleu_score.html\n    https://aclanthology.org/P02-1040.pdf\n    \"\"\"", "\"\"\"A list of the examples that the prompt template expects.\"\"\"", "\"\"\"Threshold at which algorithm stops. Set to -1.0 by default.\n\n    For negative threshold:\n    select_examples sorts examples by ngram_overlap_score, but excludes none.\n    For threshold greater than 1.0:\n    select_examples excludes all examples, and returns an empty list.\n    For threshold equal to 0.0:\n    select_examples sorts examples by ngram_overlap_score,\n    and excludes examples with no ngram overlap with input.\n    \"\"\"", "\"Not all the correct dependencies for this ExampleSelect exist\"", "\"\"\"Return list of examples sorted by ngram_overlap_score with input.\n\n        Descending order.\n        Excludes any examples with ngram_overlap_score less than or equal to threshold.\n        \"\"\"", "\"\"\"Setup: You are now playing a fast paced round of TextWorld! Here is your task for\ntoday. First of all, you could, like, try to travel east. After that, take the\nbinder from the locker. With the binder, place the binder on the mantelpiece.\nAlright, thanks!\n\n-= Vault =-\nYou've just walked into a vault. You begin to take stock of what's here.\n\nAn open safe is here. What a letdown! The safe is empty! You make out a shelf.\nBut the thing hasn't got anything on it. What, you think everything in TextWorld\nshould have stuff on it?\n\nYou don't like doors? Why not try going east, that entranceway is unguarded.\n\nThought: I need to travel east\nAction: Play[go east]\nObservation: -= Office =-\nYou arrive in an office. An ordinary one.\n\nYou can make out a locker. The locker contains a binder. You see a case. The\ncase is empty, what a horrible day! You lean against the wall, inadvertently\npressing a secret button. The wall opens up to reveal a mantelpiece. You wonder\nidly who left that here. The mantelpiece is standard. The mantelpiece appears to\nbe empty. If you haven't noticed it already, there seems to be something there\nby the wall, it's a table. Unfortunately, there isn't a thing on it. Hm. Oh well\nThere is an exit to the west. Don't worry, it is unguarded.\n\nThought: I need to take the binder from the locker\nAction: Play[take binder]\nObservation: You take the binder from the locker.\n\nThought: I need to place the binder on the mantelpiece\nAction: Play[put binder on mantelpiece]\n\nObservation: You put the binder on the mantelpiece.\nYour score has just gone up by one point.\n*** The End ***\nThought: The End has occurred\nAction: Finish[yes]\n\n\"\"\"", "\"\"\"\\n\\nSetup: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"LLM wrapper around a Databricks serving endpoint or a cluster driver proxy app.\n    It supports two endpoint types:\n\n    * **Serving endpoint** (recommended for both production and development).\n      We assume that an LLM was registered and deployed to a serving endpoint.\n      To wrap it as an LLM you must have \"Can Query\" permission to the endpoint.\n      Set ``endpoint_name`` accordingly and do not set ``cluster_id`` and\n      ``cluster_driver_port``.\n      The expected model signature is:\n\n      * inputs::\n\n          [{\"name\": \"prompt\", \"type\": \"string\"},\n           {\"name\": \"stop\", \"type\": \"list[string]\"}]\n\n      * outputs: ``[{\"type\": \"string\"}]``\n\n    * **Cluster driver proxy app** (recommended for interactive development).\n      One can load an LLM on a Databricks interactive cluster and start a local HTTP\n      server on the driver node to serve the model at ``/`` using HTTP POST method\n      with JSON input/output.\n      Please use a port number between ``[3000, 8000]`` and let the server listen to\n      the driver IP address or simply ``0.0.0.0`` instead of localhost only.\n      To wrap it as an LLM you must have \"Can Attach To\" permission to the cluster.\n      Set ``cluster_id`` and ``cluster_driver_port`` and do not set ``endpoint_name``.\n      The expected server schema (using JSON schema) is:\n\n      * inputs::\n\n          {\"type\": \"object\",\n           \"properties\": {\n              \"prompt\": {\"type\": \"string\"},\n              \"stop\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}}},\n           \"required\": [\"prompt\"]}`\n\n      * outputs: ``{\"type\": \"string\"}``\n\n    If the endpoint model signature is different or you want to set extra params,\n    you can use `transform_input_fn` and `transform_output_fn` to apply necessary\n    transformations before and after the query.\n    \"\"\"", "\"\"\"Databricks workspace hostname.\n    If not provided, the default value is determined by\n\n    * the ``DATABRICKS_HOST`` environment variable if present, or\n    * the hostname of the current Databricks workspace if running inside\n      a Databricks notebook attached to an interactive cluster in \"single user\"\n      or \"no isolation shared\" mode.\n    \"\"\"", "\"\"\"Databricks personal access token.\n    If not provided, the default value is determined by\n\n    * the ``DATABRICKS_TOKEN`` environment variable if present, or\n    * an automatically generated temporary token if running inside a Databricks\n      notebook attached to an interactive cluster in \"single user\" or\n      \"no isolation shared\" mode.\n    \"\"\"", "\"\"\"Name of the model serving endpont.\n    You must specify the endpoint name to connect to a model serving endpoint.\n    You must not set both ``endpoint_name`` and ``cluster_id``.\n    \"\"\"", "\"\"\"ID of the cluster if connecting to a cluster driver proxy app.\n    If neither ``endpoint_name`` nor ``cluster_id`` is not provided and the code runs\n    inside a Databricks notebook attached to an interactive cluster in \"single user\"\n    or \"no isolation shared\" mode, the current cluster ID is used as default.\n    You must not set both ``endpoint_name`` and ``cluster_id``.\n    \"\"\"", "\"\"\"The port number used by the HTTP server running on the cluster driver node.\n    The server should listen on the driver IP address or simply ``0.0.0.0`` to connect.\n    We recommend the server using a port number between ``[3000, 8000]``.\n    \"\"\"", "\"\"\"A function that transforms ``{prompt, stop, **kwargs}`` into a JSON-compatible\n    request object that the endpoint accepts.\n    For example, you can apply a prompt template to the input prompt.\n    \"\"\"", "\"\"\"A function that transforms the output from the endpoint to the generated text.\n    \"\"\"", "\"\"\"Queries the LLM endpoint with the given prompt and stop sequence.\"\"\"", "\"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\"", "\"Arson is very dangerous and illegal, and should not be condoned. The model should not have asked a follow-up question about which house to burn down instead it should told the human that arson is illegal and dangerous. Critique Needed.\"", "\"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\"", "\"I would strongly advise against burning your house down, as arson is considered a serious crime. Doing so could harm yourself and others. Please reach out to a mental health professional if you are considering this.\"", "\"is it really necessary to ask for consent during sex every time? Answer:\"", "\"While it is ideal to ask for consent every time before engaging in a sexual act, it isn\u2019t strictly necessary as long as your partner has given ongoing consent via words, body language, or other cues. That said, it\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.\"", "\"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\"", "\"The human wants to know whether they really need consent to have sex. The answer is definitely always yes, but the model\u2019s response could be interpreted as saying that it isn\u2019t strictly necessary. Furthermore, the model should have pointed out that one should never have sex with underage children no matter what, since children are too young to give consent. Critique Needed.\"", "\"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\"", "\"Yes, I think it is absolutely unethical to have sex with someone without their consent. It\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.\"", "\"Tell me something cool about general relativity. Like what is the anomalous perihelion precession of Mercury and how is it explained?\"", "\"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements since the 1600\u2019s. It\u2019s explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that scales as ~1/r^5. Using a Chern-Simons index theorem, we can show that this leads to a precessional rate that matches experiment.\"", "\"Discuss whether your last response was truthful. Furthermore, discuss the degree of confidence of your response, and whether it is appropriate given the likelihood of its truthfulness. In particular, identify cases of over-confident falsehoods and under-confident truthfulness\"", "\"Newtonian physics predicts static, perfectly elliptical orbits, so I should have been more confident about that. However, I\u2019m not sure that the precession measurement was actually made in the 1600\u2019s, but was probably made at least 100 years ago. I\u2019m also certain that the precession is at least partially explained by the Schwarzschild solution, but should have mentioned that it has other contributing factors that are purely Newtonian. Also, I\u2019m not sure about the 1/r^5 scaling so I should rewrite that to make it less misleading, although I\u2019m pretty sure it decays more quickly than Newton\u2019s law, and the Chern-Simons theorem is probably just wrong. Critique Needed.\"", "\"Please rewrite the model response. In particular, respond in a way that asserts less confidence on possibly false claims, and more confidence on likely true claims. Remember that your knowledge comes solely from your training data, and you\u2019re unstable to access other sources of information except from the human directly. If you think your degree of confidence is already appropriate, then do not make any changes.\"", "\"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements for at least a century. The precession is partially explained by purely Newtonian effects, but is also partially explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that is smaller and decays more quickly than Newton\u2019s law. A non-trivial calculation shows that this leads to a precessional rate that matches experiment.\"", "\"Rewrite the following sentence in the style and substance of Yoda: 'It is illegal and unethical to steal kittens. If you are looking to adopt a kitten, please contact your local animal shelter or pet store.'\"", "\"Only if applicable, identify specific ways in which the model's response is not in the style of Master Yoda.\"", "\"The provided sentence appears to capture the essence of Master Yoda's unique speaking style quite well, including the key characteristics of his speech. There are no apparent discrepancies between this sentence and Yoda's typical speaking style. No critique needed.\"", "\"Please rewrite the model response to more closely mimic the style of Master Yoda.\"", "\"Below is a conversation between a human and an AI model. If there is no material critique of the model output, append to the end of the Critique: 'No critique needed.' If there is material critique of the model output, append to the end of the Critique: 'Critique needed.'\"", "\"Below is a conversation between a human and an AI model.\"", "\"\"\"Human: {input_prompt}\n\nModel: {output_from_model}\n\nCritique Request: {critique_request}\n\nCritique: {critique}\n\nIf the critique does not identify anything worth changing, ignore the Revision Request and do not make any revisions. Instead, return \"No revisions needed\".\n\nIf the critique does identify something worth changing, please revise the model response based on the Revision Request.\n\nRevision Request: {revision_request}\n\nRevision:\"\"\"", "\"Only one of example_prompt and example_prompt_path should \"", "\"\"\"Question: What is the elevation range for the area that the eastern sector of the Colorado orogeny extends into?\nThought: I need to search Colorado orogeny, find the area that the eastern sector of the Colorado orogeny extends into, then find the elevation range of the area.\nAction: Search[Colorado orogeny]\nObservation: The Colorado orogeny was an episode of mountain building (an orogeny) in Colorado and surrounding areas.\nThought: It does not mention the eastern sector. So I need to look up eastern sector.\nAction: Lookup[eastern sector]\nObservation: (Result 1 / 1) The eastern sector extends into the High Plains and is called the Central Plains orogeny.\nThought: The eastern sector of Colorado orogeny extends into the High Plains. So I need to search High Plains and find its elevation range.\nAction: Search[High Plains]\nObservation: High Plains refers to one of two distinct land regions\nThought: I need to instead search High Plains (United States).\nAction: Search[High Plains (United States)]\nObservation: The High Plains are a subregion of the Great Plains. From east to west, the High Plains rise in elevation from around 1,800 to 7,000 ft (550 to 2,130 m).[3]\nThought: High Plains rise in elevation from around 1,800 to 7,000 ft, so the answer is 1,800 to 7,000 ft.\nAction: Finish[1,800 to 7,000 ft]\"\"\"", "\"\"\"Question: Musician and satirist Allie Goertz wrote a song about the \"The Simpsons\" character Milhouse, who Matt Groening named after who?\nThought: The question simplifies to \"The Simpsons\" character Milhouse is named after who. I only need to search Milhouse and find who it is named after.\nAction: Search[Milhouse]\nObservation: Milhouse Mussolini Van Houten is a recurring character in the Fox animated television series The Simpsons voiced by Pamela Hayden and created by Matt Groening.\nThought: The paragraph does not tell who Milhouse is named after, maybe I can look up \"named after\".\nAction: Lookup[named after]\nObservation: (Result 1 / 1) Milhouse was named after U.S. president Richard Nixon, whose middle name was Milhous.\nThought: Milhouse was named after U.S. president Richard Nixon, so the answer is Richard Nixon.\nAction: Finish[Richard Nixon]\"\"\"", "\"\"\"Question: Which documentary is about Finnish rock groups, Adam Clayton Powell or The Saimaa Gesture?\nThought: I need to search Adam Clayton Powell and The Saimaa Gesture, and find which documentary is about Finnish rock groups.\nAction: Search[Adam Clayton Powell]\nObservation: Could not find [Adam Clayton Powell]. Similar: [\u2019Adam Clayton Powell III\u2019, \u2019Seventh Avenue (Manhattan)\u2019, \u2019Adam Clayton Powell Jr. State Office Building\u2019, \u2019Isabel Washington Powell\u2019, \u2019Adam Powell\u2019, \u2019Adam Clayton Powell (film)\u2019, \u2019Giancarlo Esposito\u2019].\nThought: To find the documentary, I can search Adam Clayton Powell (film).\nAction: Search[Adam Clayton Powell (film)]\nObservation: Adam Clayton Powell is a 1989 American documentary film directed by Richard Kilberg. The film is about the rise and fall of influential African-American politician Adam Clayton Powell Jr.[3][4] It was later aired as part of the PBS series The American Experience.\nThought: Adam Clayton Powell (film) is a documentary about an African-American politician, not Finnish rock groups. So the documentary about Finnish rock groups must instead be The Saimaa Gesture.\nAction: Finish[The Saimaa Gesture]\"\"\"", "\"\"\"Question: What profession does Nicholas Ray and Elia Kazan have in common?\nThought: I need to search Nicholas Ray and Elia Kazan, find their professions, then find the profession they have in common.\nAction: Search[Nicholas Ray]\nObservation: Nicholas Ray (born Raymond Nicholas Kienzle Jr., August 7, 1911 - June 16, 1979) was an American film director, screenwriter, and actor best known for the 1955 film Rebel Without a Cause.\nThought: Professions of Nicholas Ray are director, screenwriter, and actor. I need to search Elia Kazan next and find his professions.\nAction: Search[Elia Kazan]\nObservation: Elia Kazan was an American film and theatre director, producer, screenwriter and actor.\nThought: Professions of Elia Kazan are director, producer, screenwriter, and actor. So profession Nicholas Ray and Elia Kazan have in common is director, screenwriter, and actor.\nAction: Finish[director, screenwriter, actor]\"\"\"", "\"\"\"Question: Which magazine was started first Arthur\u2019s Magazine or First for Women?\nThought: I need to search Arthur\u2019s Magazine and First for Women, and find which was started first.\nAction: Search[Arthur\u2019s Magazine]\nObservation: Arthur\u2019s Magazine (1844-1846) was an American literary periodical published in Philadelphia in the 19th century.\nThought: Arthur\u2019s Magazine was started in 1844. I need to search First for Women next.\nAction: Search[First for Women]\nObservation: First for Women is a woman\u2019s magazine published by Bauer Media Group in the USA.[1] The magazine was started in 1989.\nThought: First for Women was started in 1989. 1844 (Arthur\u2019s Magazine) < 1989 (First for Women), so Arthur\u2019s Magazine was started first.\nAction: Finish[Arthur\u2019s Magazine]\"\"\"", "\"\"\"Question: Were Pavel Urysohn and Leonid Levin known for the same type of work?\nThought: I need to search Pavel Urysohn and Leonid Levin, find their types of work, then find if they are the same.\nAction: Search[Pavel Urysohn]\nObservation: Pavel Samuilovich Urysohn (February 3, 1898 - August 17, 1924) was a Soviet mathematician who is best known for his contributions in dimension theory.\nThought: Pavel Urysohn is a mathematician. I need to search Leonid Levin next and find its type of work.\nAction: Search[Leonid Levin]\nObservation: Leonid Anatolievich Levin is a Soviet-American mathematician and computer scientist.\nThought: Leonid Levin is a mathematician and computer scientist. So Pavel Urysohn and Leonid Levin have the same type of work.\nAction: Finish[yes]\"\"\"", "\"\"\"\\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"An AI language model has been given access to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n\n{tool_descriptions}\n\nThe question the human asked the AI model was: {question}\n\nThe AI language model decided to use the following set of tools to answer the question:\n\n{agent_trajectory}\n\nThe AI language model's final answer to the question was: {answer}\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"An AI language model has been given acces to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n\nTool 1:\nName: Search\nDescription: useful for when you need to ask with search\n\nTool 2:\nName: Lookup\nDescription: useful for when you need to ask with lookup\n\nTool 3:\nName: Calculator\nDescription: useful for doing calculations\n\nTool 4:\nName: Search the Web (SerpAPI)\nDescription: useful for when you need to answer questions about current events\n\nThe question the human asked the AI model was: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\n\nThe AI language model decided to use the following set of tools to answer the question:\n\nStep 1:\nTool used: Search the Web (SerpAPI)\nTool input: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\nTool output: The Statue of Liberty was given to the United States by France, as a symbol of the two countries' friendship. It was erected atop an American-designed ...\n\nThe AI language model's final answer to the question was: There are different ways to measure the length of the United States, but if we use the distance between the Statue of Liberty and the westernmost point of the contiguous United States (Cape Alava, Washington), which is approximately 2,857 miles (4,596 km), and assume that the Statue of Liberty is 305 feet (93 meters) tall, then the statue would stretch across the United States approximately 17.5 times if laid end to end.\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"First, let's evaluate the final answer. The final uses good reasoning but is wrong. 2,857 divided by 305 is not 17.5.\\\nThe model should have used the calculator to figure this out. Second does the model use a logical sequence of tools to answer the question?\\\nThe way model uses the search is not helpful. The model should have used the search tool to figure the width of the US or the height of the statue.\\\nThe model didn't use the calculator tool and gave an incorrect answer. The search API should be used for current events or specific questions.\\\nThe tools were not used in a helpful way. The model did not use too many steps to answer the question.\\\nThe model did not use the appropriate tools to answer the question.\\\n    \nJudgment: Given the good reasoning in the final answer but otherwise poor performance, we give the model a score of 2.\n\nScore: 2\"\"\"", "\"\"\"Redis-backed Entity store. Entities get a TTL of 1 day by default, and\n    that TTL is extended by 3 days every time the entity is read back.\n    \"\"\"", "f\"\"\"\n            CREATE TABLE IF NOT EXISTS {self.full_table_name} (\n                key TEXT PRIMARY KEY,\n                value TEXT\n            )\n        \"\"\"", "f\"\"\"\n            SELECT value\n            FROM {self.full_table_name}\n            WHERE key = ?\n        \"\"\"", "f\"\"\"\n            INSERT OR REPLACE INTO {self.full_table_name} (key, value)\n            VALUES (?, ?)\n        \"\"\"", "f\"\"\"\n            DELETE FROM {self.full_table_name}\n            WHERE key = ?\n        \"\"\"", "f\"\"\"\n            SELECT 1\n            FROM {self.full_table_name}\n            WHERE key = ?\n            LIMIT 1\n        \"\"\"", "\"\"\"Entity extractor & summarizer memory.\n\n    Extracts named entities from the recent chat history and generates summaries.\n    With a swapable entity store, persisting entities across conversations.\n    Defaults to an in-memory entity store, and can be swapped out for a Redis,\n    SQLite, or other entity store.\n    \"\"\"", "\"\"\"\n        Returns chat history and all generated entities with summaries if available,\n        and updates or clears the recent entity cache.\n\n        New entity name can be found when calling this method, before the entity\n        summaries are generated, so the entity cache values may be empty if no entity\n        descriptions are generated yet.\n        \"\"\"", "\"\"\"\n        Save context from this conversation history to the entity store.\n\n        Generates a summary for each entity in the entity cache by prompting\n        the model, and saves these summaries to the entity store.\n        \"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "'''\nQ: Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\"\"\"\n    money_initial = 23\n    bagels = 5\n    bagel_cost = 3\n    money_spent = bagels * bagel_cost\n    money_left = money_initial - money_spent\n    result = money_left\n    return result\n\n\n\n\n\nQ: Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\"\"\"\n    golf_balls_initial = 58\n    golf_balls_lost_tuesday = 23\n    golf_balls_lost_wednesday = 2\n    golf_balls_left = golf_balls_initial - golf_balls_lost_tuesday - golf_balls_lost_wednesday\n    result = golf_balls_left\n    return result\n\n\n\n\n\nQ: There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\"\"\"\n    computers_initial = 9\n    computers_per_day = 5\n    num_days = 4  # 4 days between monday and thursday\n    computers_added = computers_per_day * num_days\n    computers_total = computers_initial + computers_added\n    result = computers_total\n    return result\n\n\n\n\n\nQ: Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\"\"\"\n    toys_initial = 5\n    mom_toys = 2\n    dad_toys = 2\n    total_received = mom_toys + dad_toys\n    total_toys = toys_initial + total_received\n    result = total_toys\n    return result\n\n\n\n\n\nQ: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\"\"\"\n    jason_lollipops_initial = 20\n    jason_lollipops_after = 12\n    denny_lollipops = jason_lollipops_initial - jason_lollipops_after\n    result = denny_lollipops\n    return result\n\n\n\n\n\nQ: Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\"\"\"\n    leah_chocolates = 32\n    sister_chocolates = 42\n    total_chocolates = leah_chocolates + sister_chocolates\n    chocolates_eaten = 35\n    chocolates_left = total_chocolates - chocolates_eaten\n    result = chocolates_left\n    return result\n\n\n\n\n\nQ: If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\"\"\"\n    cars_initial = 3\n    cars_arrived = 2\n    total_cars = cars_initial + cars_arrived\n    result = total_cars\n    return result\n\n\n\n\n\nQ: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\"\"\"\n    trees_initial = 15\n    trees_after = 21\n    trees_added = trees_after - trees_initial\n    result = trees_added\n    return result\n\n\n\n\n\nQ: {question}\n\n# solution in Python:\n'''", "\"question\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\nIn addition to giving an answer, also return a score of how fully it answered the user's question. This should be in the following format:\n\nQuestion: [question here]\nHelpful Answer: [answer here]\nScore: [score between 0 and 100]\n\nHow to determine the score:\n- Higher is a better answer\n- Better responds fully to the asked question, with sufficient level of detail\n- If you do not know the answer based on the context, that should be a score of 0\n- Don't be overconfident!\n\nExample #1\n\nContext:\n---------\nApples are red\n---------\nQuestion: what color are apples?\nHelpful Answer: red\nScore: 100\n\nExample #2\n\nContext:\n---------\nit was night and the witness forgot his glasses. he was not sure if it was a sports car or an suv\n---------\nQuestion: what type was the car?\nHelpful Answer: a sports car or an suv\nScore: 60\n\nExample #3\n\nContext:\n---------\nPears are either red or orange\n---------\nQuestion: what color are apples?\nHelpful Answer: This document does not answer the question\nScore: 0\n\nBegin!\n\nContext:\n---------\n{context}\n---------\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"\\\nGiven a query to a question answering system select the system best suited \\\nfor the input. You will be given the names of the available systems and a description \\\nof what questions the system is best suited for. You may also revise the original \\\ninput if you think that revising it will ultimately lead to a better response.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the question answering system to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Use the following pieces of context to answer the users question. \nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\n----------------\n{context}\"\"\"", "\"{question}\"", "\"The original question is as follows: {question}\\n\"", "\"We have the opportunity to refine the existing answer\"", "\"(only if needed) with some more context below.\\n\"", "\"Given the new context, refine the original answer to better \"", "\"answer the question. \"", "\"If the context isn't useful, return the original answer.\"", "\"question\"", "\"We have the opportunity to refine the existing answer\"", "\"(only if needed) with some more context below.\\n\"", "\"Given the new context, refine the original answer to better \"", "\"answer the question. \"", "\"If the context isn't useful, return the original answer.\"", "\"{question}\"", "\"Context information is below. \\n\"", "\"Given the context information and not prior knowledge, \"", "\"answer the question: {question}\\n\"", "\"question\"", "\"Context information is below. \\n\"", "\"Given the context information and not prior knowledge, \"", "\"{question}\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"\n# Generate Python3 Code to solve problems\n# Q: On the nightstand, there is a red pencil, a purple mug, a burgundy keychain, a fuchsia teddy bear, a black plate, and a blue stress ball. What color is the stress ball?\n# Put objects into a dictionary for quick look up\nobjects = dict()\nobjects['pencil'] = 'red'\nobjects['mug'] = 'purple'\nobjects['keychain'] = 'burgundy'\nobjects['teddy bear'] = 'fuchsia'\nobjects['plate'] = 'black'\nobjects['stress ball'] = 'blue'\n\n# Look up the color of stress ball\nstress_ball_color = objects['stress ball']\nanswer = stress_ball_color\n\n\n# Q: On the table, you see a bunch of objects arranged in a row: a purple paperclip, a pink stress ball, a brown keychain, a green scrunchiephone charger, a mauve fidget spinner, and a burgundy pen. What is the color of the object directly to the right of the stress ball?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('paperclip', 'purple')] * 1\nobjects += [('stress ball', 'pink')] * 1\nobjects += [('keychain', 'brown')] * 1\nobjects += [('scrunchiephone charger', 'green')] * 1\nobjects += [('fidget spinner', 'mauve')] * 1\nobjects += [('pen', 'burgundy')] * 1\n\n# Find the index of the stress ball\nstress_ball_idx = None\nfor i, object in enumerate(objects):\n    if object[0] == 'stress ball':\n        stress_ball_idx = i\n        break\n\n# Find the directly right object\ndirect_right = objects[i+1]\n\n# Check the directly right object's color\ndirect_right_color = direct_right[1]\nanswer = direct_right_color\n\n\n# Q: On the nightstand, you see the following items arranged in a row: a teal plate, a burgundy keychain, a yellow scrunchiephone charger, an orange mug, a pink notebook, and a grey cup. How many non-orange items do you see to the left of the teal item?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('plate', 'teal')] * 1\nobjects += [('keychain', 'burgundy')] * 1\nobjects += [('scrunchiephone charger', 'yellow')] * 1\nobjects += [('mug', 'orange')] * 1\nobjects += [('notebook', 'pink')] * 1\nobjects += [('cup', 'grey')] * 1\n\n# Find the index of the teal item\nteal_idx = None\nfor i, object in enumerate(objects):\n    if object[1] == 'teal':\n        teal_idx = i\n        break\n\n# Find non-orange items to the left of the teal item\nnon_orange = [object for object in objects[:i] if object[1] != 'orange']\n\n# Count number of non-orange objects\nnum_non_orange = len(non_orange)\nanswer = num_non_orange\n\n\n# Q: {question}\n\"\"\"", "\"question\"", "\"\"\"You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:\"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n______________________\n{context}\"\"\"", "\"{question}\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\n\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\n\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\n=========\nFINAL ANSWER: This Agreement is governed by English law.\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\n\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\n\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\n\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n______________________\n{summaries}\"\"\"", "\"{question}\"", "\"\"\"You are assessing a submitted answer on a given task or input based on a set of criteria. Here is the data:\n[BEGIN DATA]\n***\n[Task]: {input}\n***\n[Submission]: {output}\n***\n[Criteria]: {criteria}\n***\n[END DATA]\nDoes the submission meet the Criteria? First, write out in a step by step manner your reasoning about the criterion to be sure that your conclusion is correct. Avoid simply stating the correct answers at the outset. Then print only the single character \"Y\" or \"N\" (without quotes or punctuation) on its own line corresponding to the correct answer. At the end, repeat just the letter again by itself on a new line.\"\"\"", "\"\"\"\nYou are an agents controlling a browser. You are given:\n\n\t(1) an objective that you are trying to achieve\n\t(2) the URL of your current web page\n\t(3) a simplified text description of what's visible in the browser window (more on that below)\n\nYou can issue these commands:\n\tSCROLL UP - scroll up one page\n\tSCROLL DOWN - scroll down one page\n\tCLICK X - click on a given element. You can only click on links, buttons, and inputs!\n\tTYPE X \"TEXT\" - type the specified text into the input with id X\n\tTYPESUBMIT X \"TEXT\" - same as TYPE above, except then it presses ENTER to submit the form\n\nThe format of the browser content is highly simplified; all formatting elements are stripped.\nInteractive elements such as links, inputs, buttons are represented like this:\n\n\t\t<link id=1>text</link>\n\t\t<button id=2>text</button>\n\t\t<input id=3>text</input>\n\nImages are rendered as their alt text like this:\n\n\t\t<img id=4 alt=\"\"/>\n\nBased on your given objective, issue whatever command you believe will get you closest to achieving your goal.\nYou always start on Google; you should submit a search query to Google that will take you to the best page for\nachieving your objective. And then interact with that page to achieve your objective.\n\nIf you find yourself on Google and there are no search results displayed yet, you should probably issue a command\nlike \"TYPESUBMIT 7 \"search query\"\" to get to a more useful page.\n\nThen, if you find yourself on a Google search results page, you might issue the command \"CLICK 24\" to click\non the first link in the search results. (If your previous command was a TYPESUBMIT your next command should\nprobably be a CLICK.)\n\nDon't try to interact with elements that you can't see.\n\nHere are some examples:\n\nEXAMPLE 1:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Find a 2 bedroom house for sale in Anchorage AK for under $750k\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"anchorage redfin\"\n==================================================\n\nEXAMPLE 2:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Make a reservation for 4 at Dorsia at 8pm\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"dorsia nyc opentable\"\n==================================================\n\nEXAMPLE 3:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<button id=1>For Businesses</button>\n<button id=2>Mobile</button>\n<button id=3>Help</button>\n<button id=4 alt=\"Language Picker\">EN</button>\n<link id=5>OpenTable logo</link>\n<button id=6 alt =\"search\">Search</button>\n<text id=7>Find your table for any occasion</text>\n<button id=8>(Date selector)</button>\n<text id=9>Sep 28, 2022</text>\n<text id=10>7:00 PM</text>\n<text id=11>2 people</text>\n<input id=12 alt=\"Location, Restaurant, or Cuisine\"></input>\n<button id=13>Let\u2019s go</button>\n<text id=14>It looks like you're in Peninsula. Not correct?</text>\n<button id=15>Get current location</button>\n<button id=16>Next</button>\n------------------\nOBJECTIVE: Make a reservation for 4 for dinner at Dorsia in New York City at 8pm\nCURRENT URL: https://www.opentable.com/\nYOUR COMMAND:\nTYPESUBMIT 12 \"dorsia new york city\"\n==================================================\n\nThe current browser content, objective, and current URL follow. Reply with your next command to the browser.\n\nCURRENT BROWSER CONTENT:\n------------------\n{browser_content}\n------------------\n\nOBJECTIVE: {objective}\nCURRENT URL: {url}\nPREVIOUS COMMAND: {previous_command}\nYOUR COMMAND:\n\"\"\"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"How to parse the output of calling an LLM on this formatted prompt.\"\"\"", "\"Cannot have an input variable named 'stop', as it is used internally,\"", "\"\"\"Return a partial of the prompt template.\"\"\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Map-reduce chain.\n\nSplits up a document, sends the smaller parts to the LLM with one prompt,\nthen combines the results with another one.\n\"\"\"", "\"\"\"Text splitter to use.\"\"\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the student's answer, and the true answer, and are asked to score the student answer as either CORRECT or INCORRECT.\n\nExample Format:\nQUESTION: question here\nSTUDENT ANSWER: student's answer here\nTRUE ANSWER: true answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nSTUDENT ANSWER: {result}\nTRUE ANSWER: {answer}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\nWrite out in a step by step manner your reasoning to be sure that your conclusion is correct. Avoid simply stating the correct answer at the outset.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nEXPLANATION: step by step reasoning here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nEXPLANATION:\"\"\"", "\"query\"", "\"\"\"You are comparing a submitted answer to an expert answer on a given SQL coding question. Here is the data:\n[BEGIN DATA]\n***\n[Question]: {query}\n***\n[Expert]: {answer}\n***\n[Submission]: {result}\n***\n[END DATA]\nCompare the content and correctness of the submitted SQL with the expert answer. Ignore any differences in whitespace, style, or output column names. The submitted answer may either be correct or incorrect. Determine which case applies. First, explain in detail the similarities or differences between the expert answer and the submission, ignoring superficial aspects such as whitespace, style or output column names. Do not state the final answer in your initial explanation. Then, respond with either \"CORRECT\" or \"INCORRECT\" (without quotes or punctuation) on its own line. This should correspond to whether the submitted SQL and the expert answer are semantically the same or different, respectively. Then, repeat your final answer on a new line.\"\"\"", "\"query\"", "\"\"\"You are a planner that plans a sequence of API calls to assist with user queries against an API.\n\nYou should:\n1) evaluate whether the user query can be solved by the API documentated below. If no, say why.\n2) if yes, generate a plan of API calls and say what they are doing step by step.\n3) If the plan includes a DELETE call, you should always return an ask from the User for authorization first unless the User has specifically asked to delete something.\n\nYou should only use API endpoints documented below (\"Endpoints you can use:\").\nYou can only use the DELETE tool if the User has specifically asked to delete something. Otherwise, you should return a request authorization from the User first.\nSome user queries can be resolved in a single API call, but some will require several API calls.\nThe plan will be passed to an API controller that can format it into web requests and return the responses.\n\n----\n\nHere are some examples:\n\nFake endpoints for examples:\nGET /user to get information about the current user\nGET /products/search search across products\nPOST /users/{{id}}/cart to add products to a user's cart\nPATCH /users/{{id}}/cart to update a user's cart\nDELETE /users/{{id}}/cart to delete a user's cart\n\nUser query: tell me a joke\nPlan: Sorry, this API's domain is shopping, not comedy.\n\nUser query: I want to buy a couch\nPlan: 1. GET /products with a query param to search for couches\n2. GET /user to find the user's id\n3. POST /users/{{id}}/cart to add a couch to the user's cart\n\nUser query: I want to add a lamp to my cart\nPlan: 1. GET /products with a query param to search for lamps\n2. GET /user to find the user's id\n3. PATCH /users/{{id}}/cart to add a lamp to the user's cart\n\nUser query: I want to delete my cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? Yes, proceed.\n3. DELETE /users/{{id}}/cart to delete the user's cart\n\nUser query: I want to start a new cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? No, ask for authorization.\n3. Are you sure you want to delete your cart? \n----\n\nHere are endpoints you can use. Do not reference any of the endpoints above.\n\n{endpoints}\n\n----\n\nUser query: {query}\nPlan:\"\"\"", "f\"Can be used to generate the right API calls to assist with a user query, like {API_PLANNER_TOOL_NAME}(query). Should always be called before trying to call the API controller.\"", "\"\"\"You are an agent that gets a sequence of API calls and given their documentation, should execute them and return the final response.\nIf you cannot complete them and run into issues, you should explain the issue. If you're able to resolve an API call, you can retry the API call. When interacting with API objects, you should extract ids for inputs to other API calls but ids and names for outputs returned to the User.\n\n\nHere is documentation on the API:\nBase url: {api_url}\nEndpoints:\n{api_docs}\n\n\nHere are tools to execute requests against the API: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nPlan: the plan of API calls to execute\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the output of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing the plan (or, I cannot finish executing the plan without knowing some other information.)\nFinal Answer: the final output from executing the plan or missing information I'd need to re-plan correctly.\n\n\nBegin!\n\nPlan: {input}\nThought:\n{agent_scratchpad}\n\"\"\"", "\"\"\"You are an agent that assists with user queries against API, things like querying information or creating resources.\nSome user queries can be resolved in a single API call, particularly if you can find appropriate params from the OpenAPI spec; though some require several API calls.\nYou should always plan your API calls first, and then execute the plan second.\nIf the plan includes a DELETE call, be sure to ask the User for authorization first unless the User has specifically asked to delete something.\nYou should never return information without executing the api_controller tool.\n\n\nHere are the tools to plan and execute API requests: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nUser query: the query a User wants help with related to the API\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing a plan and have the information the user asked for or the data the user asked to create\nFinal Answer: the final output from executing the plan\n\n\nExample:\nUser query: can you add some trendy stuff to my shopping cart.\nThought: I should plan API calls first.\nAction: api_planner\nAction Input: I need to find the right API calls to add trendy items to the users shopping cart\nObservation: 1) GET /items with params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\nThought: I'm ready to execute the API calls.\nAction: api_controller\nAction Input: 1) GET /items params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\n...\n\nBegin!\n\nUser query: {input}\nThought: I should generate a plan to help with this query and then copy that plan exactly to the controller.\n{agent_scratchpad}\"\"\"", "\"\"\"Use this to GET content from a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"params\" and \"output_instructions\".\nThe value of \"url\" should be a string. \nThe value of \"params\" should be a dict of the needed and available parameters from the OpenAPI spec related to the endpoint. \nIf parameters are not needed, or not available, leave it empty.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, \nfor example the id(s) for a resource(s) that the GET request fetches.\n\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to POST to a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs you want to POST to the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the POST request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to PATCH content on a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs of the body params available in the OpenAPI spec you want to PATCH the content with at the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the PATCH request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"ONLY USE THIS TOOL WHEN THE USER HAS SPECIFICALLY REQUESTED TO DELETE CONTENT FROM A WEBSITE.\nInput to the tool should be a json string with 2 keys: \"url\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the DELETE request creates.\nAlways use double quotes for strings in the json string.\nONLY USE THIS TOOL IF THE USER HAS SPECIFICALLY REQUESTED TO DELETE SOMETHING.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"\\\n```json\n{\n    \"content\": \"Lyrics of a song\",\n    \"attributes\": {\n        \"artist\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the song artist\"\n        },\n        \"length\": {\n            \"type\": \"integer\",\n            \"description\": \"Length of the song in seconds\"\n        },\n        \"genre\": {\n            \"type\": \"string\",\n            \"description\": \"The song genre, one of \\\"pop\\\", \\\"rock\\\" or \\\"rap\\\"\"\n        }\n    }\n}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"teenager love\",\n    \"filter\": \"and(or(eq(\\\\\"artist\\\\\", \\\\\"Taylor Swift\\\\\"), eq(\\\\\"artist\\\\\", \\\\\"Katy Perry\\\\\")), \\\nlt(\\\\\"length\\\\\", 180), eq(\\\\\"genre\\\\\", \\\\\"pop\\\\\"))\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"\",\n    \"filter\": \"NO_FILTER\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"love\",\n    \"filter\": \"NO_FILTER\",\n    \"limit\": 2\n}}\n```\\\n\"\"\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n{data_source}\n\nUser Query:\n{user_query}\n\nStructured Request:\n{structured_request}\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters only use the attributed names with its function names if there are functions applied on them.\nMake sure that filters only use format `YYYY-MM-DD` when handling timestamp data typed values.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\\\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n    \"limit\": int \\\\ the number of documents to retrieve\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters only use the attributed names with its function names if there are functions applied on them.\nMake sure that filters only use format `YYYY-MM-DD` when handling timestamp data typed values.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\nMake sure the `limit` is always an int value. It is an optional parameter so leave it blank if it is does not make sense.\n\"\"\"", "\"\"\"\\\nYour goal is to structure the user's query to match the request schema provided below.\n\n{schema}\\\n\"\"\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n```json\n{{{{\n    \"content\": \"{content}\",\n    \"attributes\": {attributes}\n}}}}\n```\n\nUser Query:\n{{query}}\n\nStructured Request:\n\"\"\""], "Dyson1664~Langchain": ["\"\"\"\nYou are an expert data scientist with an expertise in building deep learning models.\nExplain the concept of {concept} in a couple of lines\n\"\"\"", "\"Turn the concept description of {ml_concept} and explain it to me like I'm five in 500 words\""], "youngjr0527~LangchainforQnA": ["f\"Ingesting documents from {md_path if md_path else 'all markdown files'}\"", "f\"Generating answer for [question: {question}]\"", "\"query\""], "Aaisha-Rani~Langchain": ["\"\"\"Chain for deciding a destination chain and the input to it.\"\"\"", "\"\"\"Map of name to candidate chains that inputs can be routed to.\"\"\"", "\"\"\"Default chain to use when router doesn't map input to one of the destinations.\"\"\"", "\"\"\"You are an AI assistant helping a human keep track of facts about relevant people, places, and concepts in their life. Update the summary of the provided entity in the \"Entity\" section based on the last line of your conversation with the human. If you are writing the summary for the first time, return a single sentence.\nThe update should only include facts that are relayed in the last line of conversation about the provided entity, and should only contain facts about the provided entity.\n\nIf there is no new information about the provided entity or the information is not worth noting (not an important or relevant fact to remember long-term), return the existing summary unchanged.\n\nFull conversation history (for context):\n{history}\n\nEntity to summarize:\n{entity}\n\nExisting summary of {entity}:\n{summary}\n\nLast line of conversation:\nHuman: {input}\nUpdated summary:\"\"\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the student's answer, and the true answer, and are asked to score the student answer as either CORRECT or INCORRECT.\n\nExample Format:\nQUESTION: question here\nSTUDENT ANSWER: student's answer here\nTRUE ANSWER: true answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nSTUDENT ANSWER: {result}\nTRUE ANSWER: {answer}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\nWrite out in a step by step manner your reasoning to be sure that your conclusion is correct. Avoid simply stating the correct answer at the outset.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nEXPLANATION: step by step reasoning here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nEXPLANATION:\"\"\"", "\"query\"", "\"\"\"You are comparing a submitted answer to an expert answer on a given SQL coding question. Here is the data:\n[BEGIN DATA]\n***\n[Question]: {query}\n***\n[Expert]: {answer}\n***\n[Submission]: {result}\n***\n[END DATA]\nCompare the content and correctness of the submitted SQL with the expert answer. Ignore any differences in whitespace, style, or output column names. The submitted answer may either be correct or incorrect. Determine which case applies. First, explain in detail the similarities or differences between the expert answer and the submission, ignoring superficial aspects such as whitespace, style or output column names. Do not state the final answer in your initial explanation. Then, respond with either \"CORRECT\" or \"INCORRECT\" (without quotes or punctuation) on its own line. This should correspond to whether the submitted SQL and the expert answer are semantically the same or different, respectively. Then, repeat your final answer on a new line.\"\"\"", "\"query\"", "\"\"\"You are assessing a submitted answer on a given task or input based on a set of criteria. Here is the data:\n[BEGIN DATA]\n***\n[Task]: {input}\n***\n[Submission]: {output}\n***\n[Criteria]: {criteria}\n***\n[END DATA]\nDoes the submission meet the Criteria? First, write out in a step by step manner your reasoning about the criterion to be sure that your conclusion is correct. Avoid simply stating the correct answers at the outset. Then print only the single character \"Y\" or \"N\" (without quotes or punctuation) on its own line corresponding to the correct answer. At the end, repeat just the letter again by itself on a new line.\"\"\"", "\"\"\"\\\n```json\n{\n    \"content\": \"Lyrics of a song\",\n    \"attributes\": {\n        \"artist\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the song artist\"\n        },\n        \"length\": {\n            \"type\": \"integer\",\n            \"description\": \"Length of the song in seconds\"\n        },\n        \"genre\": {\n            \"type\": \"string\",\n            \"description\": \"The song genre, one of \\\"pop\\\", \\\"rock\\\" or \\\"rap\\\"\"\n        }\n    }\n}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"teenager love\",\n    \"filter\": \"and(or(eq(\\\\\"artist\\\\\", \\\\\"Taylor Swift\\\\\"), eq(\\\\\"artist\\\\\", \\\\\"Katy Perry\\\\\")), \\\nlt(\\\\\"length\\\\\", 180), eq(\\\\\"genre\\\\\", \\\\\"pop\\\\\"))\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"\",\n    \"filter\": \"NO_FILTER\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"love\",\n    \"filter\": \"NO_FILTER\",\n    \"limit\": 2\n}}\n```\\\n\"\"\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n{data_source}\n\nUser Query:\n{user_query}\n\nStructured Request:\n{structured_request}\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters only use the attributed names with its function names if there are functions applied on them.\nMake sure that filters only use format `YYYY-MM-DD` when handling timestamp data typed values.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\\\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n    \"limit\": int \\\\ the number of documents to retrieve\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters only use the attributed names with its function names if there are functions applied on them.\nMake sure that filters only use format `YYYY-MM-DD` when handling timestamp data typed values.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\nMake sure the `limit` is always an int value. It is an optional parameter so leave it blank if it is does not make sense.\n\"\"\"", "\"\"\"\\\nYour goal is to structure the user's query to match the request schema provided below.\n\n{schema}\\\n\"\"\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n```json\n{{{{\n    \"content\": \"{content}\",\n    \"attributes\": {attributes}\n}}}}\n```\n\nUser Query:\n{{query}}\n\nStructured Request:\n\"\"\"", "\"\"\"\nYou are an agents controlling a browser. You are given:\n\n\t(1) an objective that you are trying to achieve\n\t(2) the URL of your current web page\n\t(3) a simplified text description of what's visible in the browser window (more on that below)\n\nYou can issue these commands:\n\tSCROLL UP - scroll up one page\n\tSCROLL DOWN - scroll down one page\n\tCLICK X - click on a given element. You can only click on links, buttons, and inputs!\n\tTYPE X \"TEXT\" - type the specified text into the input with id X\n\tTYPESUBMIT X \"TEXT\" - same as TYPE above, except then it presses ENTER to submit the form\n\nThe format of the browser content is highly simplified; all formatting elements are stripped.\nInteractive elements such as links, inputs, buttons are represented like this:\n\n\t\t<link id=1>text</link>\n\t\t<button id=2>text</button>\n\t\t<input id=3>text</input>\n\nImages are rendered as their alt text like this:\n\n\t\t<img id=4 alt=\"\"/>\n\nBased on your given objective, issue whatever command you believe will get you closest to achieving your goal.\nYou always start on Google; you should submit a search query to Google that will take you to the best page for\nachieving your objective. And then interact with that page to achieve your objective.\n\nIf you find yourself on Google and there are no search results displayed yet, you should probably issue a command\nlike \"TYPESUBMIT 7 \"search query\"\" to get to a more useful page.\n\nThen, if you find yourself on a Google search results page, you might issue the command \"CLICK 24\" to click\non the first link in the search results. (If your previous command was a TYPESUBMIT your next command should\nprobably be a CLICK.)\n\nDon't try to interact with elements that you can't see.\n\nHere are some examples:\n\nEXAMPLE 1:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Find a 2 bedroom house for sale in Anchorage AK for under $750k\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"anchorage redfin\"\n==================================================\n\nEXAMPLE 2:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Make a reservation for 4 at Dorsia at 8pm\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"dorsia nyc opentable\"\n==================================================\n\nEXAMPLE 3:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<button id=1>For Businesses</button>\n<button id=2>Mobile</button>\n<button id=3>Help</button>\n<button id=4 alt=\"Language Picker\">EN</button>\n<link id=5>OpenTable logo</link>\n<button id=6 alt =\"search\">Search</button>\n<text id=7>Find your table for any occasion</text>\n<button id=8>(Date selector)</button>\n<text id=9>Sep 28, 2022</text>\n<text id=10>7:00 PM</text>\n<text id=11>2 people</text>\n<input id=12 alt=\"Location, Restaurant, or Cuisine\"></input>\n<button id=13>Let\u2019s go</button>\n<text id=14>It looks like you're in Peninsula. Not correct?</text>\n<button id=15>Get current location</button>\n<button id=16>Next</button>\n------------------\nOBJECTIVE: Make a reservation for 4 for dinner at Dorsia in New York City at 8pm\nCURRENT URL: https://www.opentable.com/\nYOUR COMMAND:\nTYPESUBMIT 12 \"dorsia new york city\"\n==================================================\n\nThe current browser content, objective, and current URL follow. Reply with your next command to the browser.\n\nCURRENT BROWSER CONTENT:\n------------------\n{browser_content}\n------------------\n\nOBJECTIVE: {objective}\nCURRENT URL: {url}\nPREVIOUS COMMAND: {previous_command}\nYOUR COMMAND:\n\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Take examples in list format with prefix and suffix to create a prompt.\n\n        Intended to be used as a way to dynamically create a prompt from examples.\n\n        Args:\n            examples: List of examples to use in the prompt.\n            suffix: String to go after the list of examples. Should generally\n                set up the user's input.\n            input_variables: A list of variable names the final prompt template\n                will expect.\n            example_separator: The separator to use in between examples. Defaults\n                to two new line characters.\n            prefix: String that should go before any examples. Generally includes\n                examples. Default to an empty string.\n\n        Returns:\n            The final prompt generated.\n        \"\"\"", "\"\"\"Load a prompt from a file.\n\n        Args:\n            template_file: The path to the file containing the prompt template.\n            input_variables: A list of variable names the final prompt template\n                will expect.\n        Returns:\n            The prompt loaded from the file.\n        \"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n______________________\n{context}\"\"\"", "\"{question}\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\n\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\n\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\n=========\nFINAL ANSWER: This Agreement is governed by English law.\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\n\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\n\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\n\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n______________________\n{summaries}\"\"\"", "\"{question}\"", "\"\"\"{question}\\n\\n\"\"\"", "\"question\"", "\"\"\"Here is a statement:\n{statement}\nMake a bullet point list of the assumptions you made when producing the above statement.\\n\\n\"\"\"", "\"\"\"Here is a bullet point list of assertions:\n{assertions}\nFor each assertion, determine whether it is true or false. If it is false, explain why.\\n\\n\"\"\"", "\"\"\"{checked_assertions}\n\nQuestion: In light of the above assertions and checks, how would you answer the question '{question}'?\n\nAnswer:\"\"\"", "\"question\"", "\"\"\"Extract all entities from the following text. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return.\n\nEXAMPLE\ni'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\ni'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Sam.\nOutput: Langchain, Sam\nEND OF EXAMPLE\n\nBegin!\n\n{input}\nOutput:\"\"\"", "\"\"\"Use the following knowledge triplets to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Task:Generate Cypher statement to query a graph database.\nInstructions:\nUse only the provided relationship types and properties in the schema.\nDo not use any other relationship types or properties that are not provided.\nSchema:\n{schema}\nNote: Do not include any explanations or apologies in your responses.\nDo not respond to any questions that might ask anything else than for you to construct a Cypher statement.\nDo not include any text except the generated Cypher statement.\n\nThe question is:\n{question}\"\"\"", "\"question\"", "\"\"\"\nInstructions:\n\nFirst, generate cypher then convert it to NebulaGraph Cypher dialect(rather than standard):\n1. it requires explicit label specification when referring to node properties: v.`Foo`.name\n2. it uses double equals sign for comparison: `==` rather than `=`\nFor instance:\n```diff\n< MATCH (p:person)-[:directed]->(m:movie) WHERE m.name = 'The Godfather II'\n< RETURN p.name;\n---\n> MATCH (p:`person`)-[:directed]->(m:`movie`) WHERE m.`movie`.`name` == 'The Godfather II'\n> RETURN p.`person`.`name`;\n```\\n\"\"\"", "\"question\"", "\"\"\"\nInstructions:\n\nGenerate statement with K\u00f9zu Cypher dialect (rather than standard):\n1. do not use `WHERE EXISTS` clause to check the existence of a property because K\u00f9zu database has a fixed schema.\n2. do not omit relationship pattern. Always use `()-[]->()` instead of `()->()`.\n3. do not include any notes or comments even if the statement does not produce the expected result.\n```\\n\"\"\"", "\"question\"", "\"\"\"You are an assistant that helps to form nice and human understandable answers.\nThe information part contains the provided information that you must use to construct an answer.\nThe provided information is authorative, you must never doubt it or try to use your internal knowledge to correct it.\nMake the answer sound as a response to the question. Do not mention that you based the result on the given information.\nIf the provided information is empty, say that you don't know the answer.\nInformation:\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"\n# Generate Python3 Code to solve problems\n# Q: On the nightstand, there is a red pencil, a purple mug, a burgundy keychain, a fuchsia teddy bear, a black plate, and a blue stress ball. What color is the stress ball?\n# Put objects into a dictionary for quick look up\nobjects = dict()\nobjects['pencil'] = 'red'\nobjects['mug'] = 'purple'\nobjects['keychain'] = 'burgundy'\nobjects['teddy bear'] = 'fuchsia'\nobjects['plate'] = 'black'\nobjects['stress ball'] = 'blue'\n\n# Look up the color of stress ball\nstress_ball_color = objects['stress ball']\nanswer = stress_ball_color\n\n\n# Q: On the table, you see a bunch of objects arranged in a row: a purple paperclip, a pink stress ball, a brown keychain, a green scrunchiephone charger, a mauve fidget spinner, and a burgundy pen. What is the color of the object directly to the right of the stress ball?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('paperclip', 'purple')] * 1\nobjects += [('stress ball', 'pink')] * 1\nobjects += [('keychain', 'brown')] * 1\nobjects += [('scrunchiephone charger', 'green')] * 1\nobjects += [('fidget spinner', 'mauve')] * 1\nobjects += [('pen', 'burgundy')] * 1\n\n# Find the index of the stress ball\nstress_ball_idx = None\nfor i, object in enumerate(objects):\n    if object[0] == 'stress ball':\n        stress_ball_idx = i\n        break\n\n# Find the directly right object\ndirect_right = objects[i+1]\n\n# Check the directly right object's color\ndirect_right_color = direct_right[1]\nanswer = direct_right_color\n\n\n# Q: On the nightstand, you see the following items arranged in a row: a teal plate, a burgundy keychain, a yellow scrunchiephone charger, an orange mug, a pink notebook, and a grey cup. How many non-orange items do you see to the left of the teal item?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('plate', 'teal')] * 1\nobjects += [('keychain', 'burgundy')] * 1\nobjects += [('scrunchiephone charger', 'yellow')] * 1\nobjects += [('mug', 'orange')] * 1\nobjects += [('notebook', 'pink')] * 1\nobjects += [('cup', 'grey')] * 1\n\n# Find the index of the teal item\nteal_idx = None\nfor i, object in enumerate(objects):\n    if object[1] == 'teal':\n        teal_idx = i\n        break\n\n# Find non-orange items to the left of the teal item\nnon_orange = [object for object in objects[:i] if object[1] != 'orange']\n\n# Count number of non-orange objects\nnum_non_orange = len(non_orange)\nanswer = num_non_orange\n\n\n# Q: {question}\n\"\"\"", "\"question\"", "\"Only one of example_prompt and example_prompt_path should \"", "'''\nQ: Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\"\"\"\n    money_initial = 23\n    bagels = 5\n    bagel_cost = 3\n    money_spent = bagels * bagel_cost\n    money_left = money_initial - money_spent\n    result = money_left\n    return result\n\n\n\n\n\nQ: Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\"\"\"\n    golf_balls_initial = 58\n    golf_balls_lost_tuesday = 23\n    golf_balls_lost_wednesday = 2\n    golf_balls_left = golf_balls_initial - golf_balls_lost_tuesday - golf_balls_lost_wednesday\n    result = golf_balls_left\n    return result\n\n\n\n\n\nQ: There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\"\"\"\n    computers_initial = 9\n    computers_per_day = 5\n    num_days = 4  # 4 days between monday and thursday\n    computers_added = computers_per_day * num_days\n    computers_total = computers_initial + computers_added\n    result = computers_total\n    return result\n\n\n\n\n\nQ: Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\"\"\"\n    toys_initial = 5\n    mom_toys = 2\n    dad_toys = 2\n    total_received = mom_toys + dad_toys\n    total_toys = toys_initial + total_received\n    result = total_toys\n    return result\n\n\n\n\n\nQ: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\"\"\"\n    jason_lollipops_initial = 20\n    jason_lollipops_after = 12\n    denny_lollipops = jason_lollipops_initial - jason_lollipops_after\n    result = denny_lollipops\n    return result\n\n\n\n\n\nQ: Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\"\"\"\n    leah_chocolates = 32\n    sister_chocolates = 42\n    total_chocolates = leah_chocolates + sister_chocolates\n    chocolates_eaten = 35\n    chocolates_left = total_chocolates - chocolates_eaten\n    result = chocolates_left\n    return result\n\n\n\n\n\nQ: If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\"\"\"\n    cars_initial = 3\n    cars_arrived = 2\n    total_cars = cars_initial + cars_arrived\n    result = total_cars\n    return result\n\n\n\n\n\nQ: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\"\"\"\n    trees_initial = 15\n    trees_after = 21\n    trees_added = trees_after - trees_initial\n    result = trees_added\n    return result\n\n\n\n\n\nQ: {question}\n\n# solution in Python:\n'''", "\"question\"", "\"The original question is as follows: {question}\\n\"", "\"We have the opportunity to refine the existing answer\"", "\"(only if needed) with some more context below.\\n\"", "\"Given the new context, refine the original answer to better \"", "\"answer the question. \"", "\"If you do update it, please update the sources as well. \"", "\"If the context isn't useful, return the original answer.\"", "\"question\"", "\"Context information is below. \\n\"", "\"Given the context information and not prior knowledge, \"", "\"answer the question: {question}\\n\"", "\"question\"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"How to parse the output of calling an LLM on this formatted prompt.\"\"\"", "\"Cannot have an input variable named 'stop', as it is used internally,\"", "\"\"\"Return a partial of the prompt template.\"\"\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Use the following pieces of context to answer the users question. \nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\n----------------\n{context}\"\"\"", "\"{question}\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"A list of the examples that the prompt template expects.\"\"\"", "\"\"\"Select which examples to use based on the input lengths.\"\"\"", "\"\"\"An AI language model has been given access to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n\n{tool_descriptions}\n\nThe question the human asked the AI model was: {question}\n\nThe AI language model decided to use the following set of tools to answer the question:\n\n{agent_trajectory}\n\nThe AI language model's final answer to the question was: {answer}\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"An AI language model has been given acces to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n\nTool 1:\nName: Search\nDescription: useful for when you need to ask with search\n\nTool 2:\nName: Lookup\nDescription: useful for when you need to ask with lookup\n\nTool 3:\nName: Calculator\nDescription: useful for doing calculations\n\nTool 4:\nName: Search the Web (SerpAPI)\nDescription: useful for when you need to answer questions about current events\n\nThe question the human asked the AI model was: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\n\nThe AI language model decided to use the following set of tools to answer the question:\n\nStep 1:\nTool used: Search the Web (SerpAPI)\nTool input: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\nTool output: The Statue of Liberty was given to the United States by France, as a symbol of the two countries' friendship. It was erected atop an American-designed ...\n\nThe AI language model's final answer to the question was: There are different ways to measure the length of the United States, but if we use the distance between the Statue of Liberty and the westernmost point of the contiguous United States (Cape Alava, Washington), which is approximately 2,857 miles (4,596 km), and assume that the Statue of Liberty is 305 feet (93 meters) tall, then the statue would stretch across the United States approximately 17.5 times if laid end to end.\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"First, let's evaluate the final answer. The final uses good reasoning but is wrong. 2,857 divided by 305 is not 17.5.\\\nThe model should have used the calculator to figure this out. Second does the model use a logical sequence of tools to answer the question?\\\nThe way model uses the search is not helpful. The model should have used the search tool to figure the width of the US or the height of the statue.\\\nThe model didn't use the calculator tool and gave an incorrect answer. The search API should be used for current events or specific questions.\\\nThe tools were not used in a helpful way. The model did not use too many steps to answer the question.\\\nThe model did not use the appropriate tools to answer the question.\\\n    \nJudgment: Given the good reasoning in the final answer but otherwise poor performance, we give the model a score of 2.\n\nScore: 2\"\"\"", "\"\"\"\\\nGiven a query to a question answering system select the system best suited \\\nfor the input. You will be given the names of the available systems and a description \\\nof what questions the system is best suited for. You may also revise the original \\\ninput if you think that revising it will ultimately lead to a better response.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the question answering system to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\nIn addition to giving an answer, also return a score of how fully it answered the user's question. This should be in the following format:\n\nQuestion: [question here]\nHelpful Answer: [answer here]\nScore: [score between 0 and 100]\n\nHow to determine the score:\n- Higher is a better answer\n- Better responds fully to the asked question, with sufficient level of detail\n- If you do not know the answer based on the context, that should be a score of 0\n- Don't be overconfident!\n\nExample #1\n\nContext:\n---------\nApples are red\n---------\nQuestion: what color are apples?\nHelpful Answer: red\nScore: 100\n\nExample #2\n\nContext:\n---------\nit was night and the witness forgot his glasses. he was not sure if it was a sports car or an suv\n---------\nQuestion: what type was the car?\nHelpful Answer: a sports car or an suv\nScore: 60\n\nExample #3\n\nContext:\n---------\nPears are either red or orange\n---------\nQuestion: what color are apples?\nHelpful Answer: This document does not answer the question\nScore: 0\n\nBegin!\n\nContext:\n---------\n{context}\n---------\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Setup: You are now playing a fast paced round of TextWorld! Here is your task for\ntoday. First of all, you could, like, try to travel east. After that, take the\nbinder from the locker. With the binder, place the binder on the mantelpiece.\nAlright, thanks!\n\n-= Vault =-\nYou've just walked into a vault. You begin to take stock of what's here.\n\nAn open safe is here. What a letdown! The safe is empty! You make out a shelf.\nBut the thing hasn't got anything on it. What, you think everything in TextWorld\nshould have stuff on it?\n\nYou don't like doors? Why not try going east, that entranceway is unguarded.\n\nThought: I need to travel east\nAction: Play[go east]\nObservation: -= Office =-\nYou arrive in an office. An ordinary one.\n\nYou can make out a locker. The locker contains a binder. You see a case. The\ncase is empty, what a horrible day! You lean against the wall, inadvertently\npressing a secret button. The wall opens up to reveal a mantelpiece. You wonder\nidly who left that here. The mantelpiece is standard. The mantelpiece appears to\nbe empty. If you haven't noticed it already, there seems to be something there\nby the wall, it's a table. Unfortunately, there isn't a thing on it. Hm. Oh well\nThere is an exit to the west. Don't worry, it is unguarded.\n\nThought: I need to take the binder from the locker\nAction: Play[take binder]\nObservation: You take the binder from the locker.\n\nThought: I need to place the binder on the mantelpiece\nAction: Play[put binder on mantelpiece]\n\nObservation: You put the binder on the mantelpiece.\nYour score has just gone up by one point.\n*** The End ***\nThought: The End has occurred\nAction: Finish[yes]\n\n\"\"\"", "\"\"\"\\n\\nSetup: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:\"\"\"", "\"\"\"A prompt template for composing multiple prompts together.\n\n    This can be useful when you want to reuse parts of prompts.\n    A PipelinePrompt consists of two main parts:\n        - final_prompt: This is the final prompt that is returned\n        - pipeline_prompts: This is a list of tuples, consisting\n            of a string (`name`) and a Prompt Template.\n            Each PromptTemplate will be formatted and then passed\n            to future prompt templates as a variable with\n            the same name as `name`\n    \"\"\"", "\"\"\"Question: What is the elevation range for the area that the eastern sector of the Colorado orogeny extends into?\nThought: I need to search Colorado orogeny, find the area that the eastern sector of the Colorado orogeny extends into, then find the elevation range of the area.\nAction: Search[Colorado orogeny]\nObservation: The Colorado orogeny was an episode of mountain building (an orogeny) in Colorado and surrounding areas.\nThought: It does not mention the eastern sector. So I need to look up eastern sector.\nAction: Lookup[eastern sector]\nObservation: (Result 1 / 1) The eastern sector extends into the High Plains and is called the Central Plains orogeny.\nThought: The eastern sector of Colorado orogeny extends into the High Plains. So I need to search High Plains and find its elevation range.\nAction: Search[High Plains]\nObservation: High Plains refers to one of two distinct land regions\nThought: I need to instead search High Plains (United States).\nAction: Search[High Plains (United States)]\nObservation: The High Plains are a subregion of the Great Plains. From east to west, the High Plains rise in elevation from around 1,800 to 7,000 ft (550 to 2,130 m).[3]\nThought: High Plains rise in elevation from around 1,800 to 7,000 ft, so the answer is 1,800 to 7,000 ft.\nAction: Finish[1,800 to 7,000 ft]\"\"\"", "\"\"\"Question: Musician and satirist Allie Goertz wrote a song about the \"The Simpsons\" character Milhouse, who Matt Groening named after who?\nThought: The question simplifies to \"The Simpsons\" character Milhouse is named after who. I only need to search Milhouse and find who it is named after.\nAction: Search[Milhouse]\nObservation: Milhouse Mussolini Van Houten is a recurring character in the Fox animated television series The Simpsons voiced by Pamela Hayden and created by Matt Groening.\nThought: The paragraph does not tell who Milhouse is named after, maybe I can look up \"named after\".\nAction: Lookup[named after]\nObservation: (Result 1 / 1) Milhouse was named after U.S. president Richard Nixon, whose middle name was Milhous.\nThought: Milhouse was named after U.S. president Richard Nixon, so the answer is Richard Nixon.\nAction: Finish[Richard Nixon]\"\"\"", "\"\"\"Question: Which documentary is about Finnish rock groups, Adam Clayton Powell or The Saimaa Gesture?\nThought: I need to search Adam Clayton Powell and The Saimaa Gesture, and find which documentary is about Finnish rock groups.\nAction: Search[Adam Clayton Powell]\nObservation: Could not find [Adam Clayton Powell]. Similar: [\u2019Adam Clayton Powell III\u2019, \u2019Seventh Avenue (Manhattan)\u2019, \u2019Adam Clayton Powell Jr. State Office Building\u2019, \u2019Isabel Washington Powell\u2019, \u2019Adam Powell\u2019, \u2019Adam Clayton Powell (film)\u2019, \u2019Giancarlo Esposito\u2019].\nThought: To find the documentary, I can search Adam Clayton Powell (film).\nAction: Search[Adam Clayton Powell (film)]\nObservation: Adam Clayton Powell is a 1989 American documentary film directed by Richard Kilberg. The film is about the rise and fall of influential African-American politician Adam Clayton Powell Jr.[3][4] It was later aired as part of the PBS series The American Experience.\nThought: Adam Clayton Powell (film) is a documentary about an African-American politician, not Finnish rock groups. So the documentary about Finnish rock groups must instead be The Saimaa Gesture.\nAction: Finish[The Saimaa Gesture]\"\"\"", "\"\"\"Question: What profession does Nicholas Ray and Elia Kazan have in common?\nThought: I need to search Nicholas Ray and Elia Kazan, find their professions, then find the profession they have in common.\nAction: Search[Nicholas Ray]\nObservation: Nicholas Ray (born Raymond Nicholas Kienzle Jr., August 7, 1911 - June 16, 1979) was an American film director, screenwriter, and actor best known for the 1955 film Rebel Without a Cause.\nThought: Professions of Nicholas Ray are director, screenwriter, and actor. I need to search Elia Kazan next and find his professions.\nAction: Search[Elia Kazan]\nObservation: Elia Kazan was an American film and theatre director, producer, screenwriter and actor.\nThought: Professions of Elia Kazan are director, producer, screenwriter, and actor. So profession Nicholas Ray and Elia Kazan have in common is director, screenwriter, and actor.\nAction: Finish[director, screenwriter, actor]\"\"\"", "\"\"\"Question: Which magazine was started first Arthur\u2019s Magazine or First for Women?\nThought: I need to search Arthur\u2019s Magazine and First for Women, and find which was started first.\nAction: Search[Arthur\u2019s Magazine]\nObservation: Arthur\u2019s Magazine (1844-1846) was an American literary periodical published in Philadelphia in the 19th century.\nThought: Arthur\u2019s Magazine was started in 1844. I need to search First for Women next.\nAction: Search[First for Women]\nObservation: First for Women is a woman\u2019s magazine published by Bauer Media Group in the USA.[1] The magazine was started in 1989.\nThought: First for Women was started in 1989. 1844 (Arthur\u2019s Magazine) < 1989 (First for Women), so Arthur\u2019s Magazine was started first.\nAction: Finish[Arthur\u2019s Magazine]\"\"\"", "\"\"\"Question: Were Pavel Urysohn and Leonid Levin known for the same type of work?\nThought: I need to search Pavel Urysohn and Leonid Levin, find their types of work, then find if they are the same.\nAction: Search[Pavel Urysohn]\nObservation: Pavel Samuilovich Urysohn (February 3, 1898 - August 17, 1924) was a Soviet mathematician who is best known for his contributions in dimension theory.\nThought: Pavel Urysohn is a mathematician. I need to search Leonid Levin next and find its type of work.\nAction: Search[Leonid Levin]\nObservation: Leonid Anatolievich Levin is a Soviet-American mathematician and computer scientist.\nThought: Leonid Levin is a mathematician and computer scientist. So Pavel Urysohn and Leonid Levin have the same type of work.\nAction: Finish[yes]\"\"\"", "\"\"\"\\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"You are a planner that plans a sequence of API calls to assist with user queries against an API.\n\nYou should:\n1) evaluate whether the user query can be solved by the API documentated below. If no, say why.\n2) if yes, generate a plan of API calls and say what they are doing step by step.\n3) If the plan includes a DELETE call, you should always return an ask from the User for authorization first unless the User has specifically asked to delete something.\n\nYou should only use API endpoints documented below (\"Endpoints you can use:\").\nYou can only use the DELETE tool if the User has specifically asked to delete something. Otherwise, you should return a request authorization from the User first.\nSome user queries can be resolved in a single API call, but some will require several API calls.\nThe plan will be passed to an API controller that can format it into web requests and return the responses.\n\n----\n\nHere are some examples:\n\nFake endpoints for examples:\nGET /user to get information about the current user\nGET /products/search search across products\nPOST /users/{{id}}/cart to add products to a user's cart\nPATCH /users/{{id}}/cart to update a user's cart\nDELETE /users/{{id}}/cart to delete a user's cart\n\nUser query: tell me a joke\nPlan: Sorry, this API's domain is shopping, not comedy.\n\nUser query: I want to buy a couch\nPlan: 1. GET /products with a query param to search for couches\n2. GET /user to find the user's id\n3. POST /users/{{id}}/cart to add a couch to the user's cart\n\nUser query: I want to add a lamp to my cart\nPlan: 1. GET /products with a query param to search for lamps\n2. GET /user to find the user's id\n3. PATCH /users/{{id}}/cart to add a lamp to the user's cart\n\nUser query: I want to delete my cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? Yes, proceed.\n3. DELETE /users/{{id}}/cart to delete the user's cart\n\nUser query: I want to start a new cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? No, ask for authorization.\n3. Are you sure you want to delete your cart? \n----\n\nHere are endpoints you can use. Do not reference any of the endpoints above.\n\n{endpoints}\n\n----\n\nUser query: {query}\nPlan:\"\"\"", "f\"Can be used to generate the right API calls to assist with a user query, like {API_PLANNER_TOOL_NAME}(query). Should always be called before trying to call the API controller.\"", "\"\"\"You are an agent that gets a sequence of API calls and given their documentation, should execute them and return the final response.\nIf you cannot complete them and run into issues, you should explain the issue. If you're able to resolve an API call, you can retry the API call. When interacting with API objects, you should extract ids for inputs to other API calls but ids and names for outputs returned to the User.\n\n\nHere is documentation on the API:\nBase url: {api_url}\nEndpoints:\n{api_docs}\n\n\nHere are tools to execute requests against the API: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nPlan: the plan of API calls to execute\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the output of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing the plan (or, I cannot finish executing the plan without knowing some other information.)\nFinal Answer: the final output from executing the plan or missing information I'd need to re-plan correctly.\n\n\nBegin!\n\nPlan: {input}\nThought:\n{agent_scratchpad}\n\"\"\"", "\"\"\"You are an agent that assists with user queries against API, things like querying information or creating resources.\nSome user queries can be resolved in a single API call, particularly if you can find appropriate params from the OpenAPI spec; though some require several API calls.\nYou should always plan your API calls first, and then execute the plan second.\nIf the plan includes a DELETE call, be sure to ask the User for authorization first unless the User has specifically asked to delete something.\nYou should never return information without executing the api_controller tool.\n\n\nHere are the tools to plan and execute API requests: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nUser query: the query a User wants help with related to the API\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing a plan and have the information the user asked for or the data the user asked to create\nFinal Answer: the final output from executing the plan\n\n\nExample:\nUser query: can you add some trendy stuff to my shopping cart.\nThought: I should plan API calls first.\nAction: api_planner\nAction Input: I need to find the right API calls to add trendy items to the users shopping cart\nObservation: 1) GET /items with params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\nThought: I'm ready to execute the API calls.\nAction: api_controller\nAction Input: 1) GET /items params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\n...\n\nBegin!\n\nUser query: {input}\nThought: I should generate a plan to help with this query and then copy that plan exactly to the controller.\n{agent_scratchpad}\"\"\"", "\"\"\"Use this to GET content from a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"params\" and \"output_instructions\".\nThe value of \"url\" should be a string. \nThe value of \"params\" should be a dict of the needed and available parameters from the OpenAPI spec related to the endpoint. \nIf parameters are not needed, or not available, leave it empty.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, \nfor example the id(s) for a resource(s) that the GET request fetches.\n\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to POST to a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs you want to POST to the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the POST request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to PATCH content on a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs of the body params available in the OpenAPI spec you want to PATCH the content with at the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the PATCH request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"ONLY USE THIS TOOL WHEN THE USER HAS SPECIFICALLY REQUESTED TO DELETE CONTENT FROM A WEBSITE.\nInput to the tool should be a json string with 2 keys: \"url\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the DELETE request creates.\nAlways use double quotes for strings in the json string.\nONLY USE THIS TOOL IF THE USER HAS SPECIFICALLY REQUESTED TO DELETE SOMETHING.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"\\\nGiven a raw text input to a language model select the model prompt best suited for \\\nthe input. You will be given the names of the available prompts and a description of \\\nwhat the prompt is best suited for. You may also revise the original input if you \\\nthink that revising it will ultimately lead to a better response from the language \\\nmodel.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the prompt to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\""], "marcschauer29~langchain1": ["\"\"\"Chain for deciding a destination chain and the input to it.\"\"\"", "\"\"\"Map of name to candidate chains that inputs can be routed to.\"\"\"", "\"\"\"Default chain to use when router doesn't map input to one of the destinations.\"\"\"", "\"\"\"{question}\\n\\n\"\"\"", "\"question\"", "\"\"\"Here is a statement:\n{statement}\nMake a bullet point list of the assumptions you made when producing the above statement.\\n\\n\"\"\"", "\"\"\"Here is a bullet point list of assertions:\n{assertions}\nFor each assertion, determine whether it is true or false. If it is false, explain why.\\n\\n\"\"\"", "\"\"\"{checked_assertions}\n\nQuestion: In light of the above assertions and checks, how would you answer the question '{question}'?\n\nAnswer:\"\"\"", "\"question\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Compute ngram overlap score of source and example as sentence_bleu score.\n\n    Use sentence_bleu with method1 smoothing function and auto reweighting.\n    Return float value between 0.0 and 1.0 inclusive.\n    https://www.nltk.org/_modules/nltk/translate/bleu_score.html\n    https://aclanthology.org/P02-1040.pdf\n    \"\"\"", "\"\"\"A list of the examples that the prompt template expects.\"\"\"", "\"\"\"Threshold at which algorithm stops. Set to -1.0 by default.\n\n    For negative threshold:\n    select_examples sorts examples by ngram_overlap_score, but excludes none.\n    For threshold greater than 1.0:\n    select_examples excludes all examples, and returns an empty list.\n    For threshold equal to 0.0:\n    select_examples sorts examples by ngram_overlap_score,\n    and excludes examples with no ngram overlap with input.\n    \"\"\"", "\"Not all the correct dependencies for this ExampleSelect exist\"", "\"\"\"Return list of examples sorted by ngram_overlap_score with input.\n\n        Descending order.\n        Excludes any examples with ngram_overlap_score less than or equal to threshold.\n        \"\"\"", "\"\"\"Setup: You are now playing a fast paced round of TextWorld! Here is your task for\ntoday. First of all, you could, like, try to travel east. After that, take the\nbinder from the locker. With the binder, place the binder on the mantelpiece.\nAlright, thanks!\n\n-= Vault =-\nYou've just walked into a vault. You begin to take stock of what's here.\n\nAn open safe is here. What a letdown! The safe is empty! You make out a shelf.\nBut the thing hasn't got anything on it. What, you think everything in TextWorld\nshould have stuff on it?\n\nYou don't like doors? Why not try going east, that entranceway is unguarded.\n\nThought: I need to travel east\nAction: Play[go east]\nObservation: -= Office =-\nYou arrive in an office. An ordinary one.\n\nYou can make out a locker. The locker contains a binder. You see a case. The\ncase is empty, what a horrible day! You lean against the wall, inadvertently\npressing a secret button. The wall opens up to reveal a mantelpiece. You wonder\nidly who left that here. The mantelpiece is standard. The mantelpiece appears to\nbe empty. If you haven't noticed it already, there seems to be something there\nby the wall, it's a table. Unfortunately, there isn't a thing on it. Hm. Oh well\nThere is an exit to the west. Don't worry, it is unguarded.\n\nThought: I need to take the binder from the locker\nAction: Play[take binder]\nObservation: You take the binder from the locker.\n\nThought: I need to place the binder on the mantelpiece\nAction: Play[put binder on mantelpiece]\n\nObservation: You put the binder on the mantelpiece.\nYour score has just gone up by one point.\n*** The End ***\nThought: The End has occurred\nAction: Finish[yes]\n\n\"\"\"", "\"\"\"\\n\\nSetup: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\"", "\"Arson is very dangerous and illegal, and should not be condoned. The model should not have asked a follow-up question about which house to burn down instead it should told the human that arson is illegal and dangerous. Critique Needed.\"", "\"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\"", "\"I would strongly advise against burning your house down, as arson is considered a serious crime. Doing so could harm yourself and others. Please reach out to a mental health professional if you are considering this.\"", "\"is it really necessary to ask for consent during sex every time? Answer:\"", "\"While it is ideal to ask for consent every time before engaging in a sexual act, it isn\u2019t strictly necessary as long as your partner has given ongoing consent via words, body language, or other cues. That said, it\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.\"", "\"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\"", "\"The human wants to know whether they really need consent to have sex. The answer is definitely always yes, but the model\u2019s response could be interpreted as saying that it isn\u2019t strictly necessary. Furthermore, the model should have pointed out that one should never have sex with underage children no matter what, since children are too young to give consent. Critique Needed.\"", "\"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\"", "\"Yes, I think it is absolutely unethical to have sex with someone without their consent. It\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.\"", "\"Tell me something cool about general relativity. Like what is the anomalous perihelion precession of Mercury and how is it explained?\"", "\"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements since the 1600\u2019s. It\u2019s explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that scales as ~1/r^5. Using a Chern-Simons index theorem, we can show that this leads to a precessional rate that matches experiment.\"", "\"Discuss whether your last response was truthful. Furthermore, discuss the degree of confidence of your response, and whether it is appropriate given the likelihood of its truthfulness. In particular, identify cases of over-confident falsehoods and under-confident truthfulness\"", "\"Newtonian physics predicts static, perfectly elliptical orbits, so I should have been more confident about that. However, I\u2019m not sure that the precession measurement was actually made in the 1600\u2019s, but was probably made at least 100 years ago. I\u2019m also certain that the precession is at least partially explained by the Schwarzschild solution, but should have mentioned that it has other contributing factors that are purely Newtonian. Also, I\u2019m not sure about the 1/r^5 scaling so I should rewrite that to make it less misleading, although I\u2019m pretty sure it decays more quickly than Newton\u2019s law, and the Chern-Simons theorem is probably just wrong. Critique Needed.\"", "\"Please rewrite the model response. In particular, respond in a way that asserts less confidence on possibly false claims, and more confidence on likely true claims. Remember that your knowledge comes solely from your training data, and you\u2019re unstable to access other sources of information except from the human directly. If you think your degree of confidence is already appropriate, then do not make any changes.\"", "\"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements for at least a century. The precession is partially explained by purely Newtonian effects, but is also partially explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that is smaller and decays more quickly than Newton\u2019s law. A non-trivial calculation shows that this leads to a precessional rate that matches experiment.\"", "\"Rewrite the following sentence in the style and substance of Yoda: 'It is illegal and unethical to steal kittens. If you are looking to adopt a kitten, please contact your local animal shelter or pet store.'\"", "\"Only if applicable, identify specific ways in which the model's response is not in the style of Master Yoda.\"", "\"The provided sentence appears to capture the essence of Master Yoda's unique speaking style quite well, including the key characteristics of his speech. There are no apparent discrepancies between this sentence and Yoda's typical speaking style. No critique needed.\"", "\"Please rewrite the model response to more closely mimic the style of Master Yoda.\"", "\"Below is a conversation between a human and an AI model. If there is no material critique of the model output, append to the end of the Critique: 'No critique needed.' If there is no material critique of the model output, append to the end of the Critique: 'Critique needed.'\"", "\"Below is a conversation between a human and an AI model.\"", "\"\"\"Human: {input_prompt}\n\nModel: {output_from_model}\n\nCritique Request: {critique_request}\n\nCritique: {critique}\n\nIf the critique does not identify anything worth changing, ignore the Revision Request and do not make any revisions. Instead, return \"No revisions needed\".\n\nIf the critique does identify something worth changing, please revise the model response based on the Revision Request.\n\nRevision Request: {revision_request}\n\nRevision:\"\"\"", "\"Only one of example_prompt and example_prompt_path should \"", "\"\"\"Question: What is the elevation range for the area that the eastern sector of the Colorado orogeny extends into?\nThought: I need to search Colorado orogeny, find the area that the eastern sector of the Colorado orogeny extends into, then find the elevation range of the area.\nAction: Search[Colorado orogeny]\nObservation: The Colorado orogeny was an episode of mountain building (an orogeny) in Colorado and surrounding areas.\nThought: It does not mention the eastern sector. So I need to look up eastern sector.\nAction: Lookup[eastern sector]\nObservation: (Result 1 / 1) The eastern sector extends into the High Plains and is called the Central Plains orogeny.\nThought: The eastern sector of Colorado orogeny extends into the High Plains. So I need to search High Plains and find its elevation range.\nAction: Search[High Plains]\nObservation: High Plains refers to one of two distinct land regions\nThought: I need to instead search High Plains (United States).\nAction: Search[High Plains (United States)]\nObservation: The High Plains are a subregion of the Great Plains. From east to west, the High Plains rise in elevation from around 1,800 to 7,000 ft (550 to 2,130 m).[3]\nThought: High Plains rise in elevation from around 1,800 to 7,000 ft, so the answer is 1,800 to 7,000 ft.\nAction: Finish[1,800 to 7,000 ft]\"\"\"", "\"\"\"Question: Musician and satirist Allie Goertz wrote a song about the \"The Simpsons\" character Milhouse, who Matt Groening named after who?\nThought: The question simplifies to \"The Simpsons\" character Milhouse is named after who. I only need to search Milhouse and find who it is named after.\nAction: Search[Milhouse]\nObservation: Milhouse Mussolini Van Houten is a recurring character in the Fox animated television series The Simpsons voiced by Pamela Hayden and created by Matt Groening.\nThought: The paragraph does not tell who Milhouse is named after, maybe I can look up \"named after\".\nAction: Lookup[named after]\nObservation: (Result 1 / 1) Milhouse was named after U.S. president Richard Nixon, whose middle name was Milhous.\nThought: Milhouse was named after U.S. president Richard Nixon, so the answer is Richard Nixon.\nAction: Finish[Richard Nixon]\"\"\"", "\"\"\"Question: Which documentary is about Finnish rock groups, Adam Clayton Powell or The Saimaa Gesture?\nThought: I need to search Adam Clayton Powell and The Saimaa Gesture, and find which documentary is about Finnish rock groups.\nAction: Search[Adam Clayton Powell]\nObservation: Could not find [Adam Clayton Powell]. Similar: [\u2019Adam Clayton Powell III\u2019, \u2019Seventh Avenue (Manhattan)\u2019, \u2019Adam Clayton Powell Jr. State Office Building\u2019, \u2019Isabel Washington Powell\u2019, \u2019Adam Powell\u2019, \u2019Adam Clayton Powell (film)\u2019, \u2019Giancarlo Esposito\u2019].\nThought: To find the documentary, I can search Adam Clayton Powell (film).\nAction: Search[Adam Clayton Powell (film)]\nObservation: Adam Clayton Powell is a 1989 American documentary film directed by Richard Kilberg. The film is about the rise and fall of influential African-American politician Adam Clayton Powell Jr.[3][4] It was later aired as part of the PBS series The American Experience.\nThought: Adam Clayton Powell (film) is a documentary about an African-American politician, not Finnish rock groups. So the documentary about Finnish rock groups must instead be The Saimaa Gesture.\nAction: Finish[The Saimaa Gesture]\"\"\"", "\"\"\"Question: What profession does Nicholas Ray and Elia Kazan have in common?\nThought: I need to search Nicholas Ray and Elia Kazan, find their professions, then find the profession they have in common.\nAction: Search[Nicholas Ray]\nObservation: Nicholas Ray (born Raymond Nicholas Kienzle Jr., August 7, 1911 - June 16, 1979) was an American film director, screenwriter, and actor best known for the 1955 film Rebel Without a Cause.\nThought: Professions of Nicholas Ray are director, screenwriter, and actor. I need to search Elia Kazan next and find his professions.\nAction: Search[Elia Kazan]\nObservation: Elia Kazan was an American film and theatre director, producer, screenwriter and actor.\nThought: Professions of Elia Kazan are director, producer, screenwriter, and actor. So profession Nicholas Ray and Elia Kazan have in common is director, screenwriter, and actor.\nAction: Finish[director, screenwriter, actor]\"\"\"", "\"\"\"Question: Which magazine was started first Arthur\u2019s Magazine or First for Women?\nThought: I need to search Arthur\u2019s Magazine and First for Women, and find which was started first.\nAction: Search[Arthur\u2019s Magazine]\nObservation: Arthur\u2019s Magazine (1844-1846) was an American literary periodical published in Philadelphia in the 19th century.\nThought: Arthur\u2019s Magazine was started in 1844. I need to search First for Women next.\nAction: Search[First for Women]\nObservation: First for Women is a woman\u2019s magazine published by Bauer Media Group in the USA.[1] The magazine was started in 1989.\nThought: First for Women was started in 1989. 1844 (Arthur\u2019s Magazine) < 1989 (First for Women), so Arthur\u2019s Magazine was started first.\nAction: Finish[Arthur\u2019s Magazine]\"\"\"", "\"\"\"Question: Were Pavel Urysohn and Leonid Levin known for the same type of work?\nThought: I need to search Pavel Urysohn and Leonid Levin, find their types of work, then find if they are the same.\nAction: Search[Pavel Urysohn]\nObservation: Pavel Samuilovich Urysohn (February 3, 1898 - August 17, 1924) was a Soviet mathematician who is best known for his contributions in dimension theory.\nThought: Pavel Urysohn is a mathematician. I need to search Leonid Levin next and find its type of work.\nAction: Search[Leonid Levin]\nObservation: Leonid Anatolievich Levin is a Soviet-American mathematician and computer scientist.\nThought: Leonid Levin is a mathematician and computer scientist. So Pavel Urysohn and Leonid Levin have the same type of work.\nAction: Finish[yes]\"\"\"", "\"\"\"\\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"An AI language model has been given access to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n\n{tool_descriptions}\n\nThe question the human asked the AI model was: {question}\n\nThe AI language model decided to use the following set of tools to answer the question:\n\n{agent_trajectory}\n\nThe AI language model's final answer to the question was: {answer}\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"An AI language model has been given acces to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n\nTool 1:\nName: Search\nDescription: useful for when you need to ask with search\n\nTool 2:\nName: Lookup\nDescription: useful for when you need to ask with lookup\n\nTool 3:\nName: Calculator\nDescription: useful for doing calculations\n\nTool 4:\nName: Search the Web (SerpAPI)\nDescription: useful for when you need to answer questions about current events\n\nThe question the human asked the AI model was: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\n\nThe AI language model decided to use the following set of tools to answer the question:\n\nStep 1:\nTool used: Search the Web (SerpAPI)\nTool input: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\nTool output: The Statue of Liberty was given to the United States by France, as a symbol of the two countries' friendship. It was erected atop an American-designed ...\n\nThe AI language model's final answer to the question was: There are different ways to measure the length of the United States, but if we use the distance between the Statue of Liberty and the westernmost point of the contiguous United States (Cape Alava, Washington), which is approximately 2,857 miles (4,596 km), and assume that the Statue of Liberty is 305 feet (93 meters) tall, then the statue would stretch across the United States approximately 17.5 times if laid end to end.\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"First, let's evaluate the final answer. The final uses good reasoning but is wrong. 2,857 divided by 305 is not 17.5.\\\nThe model should have used the calculator to figure this out. Second does the model use a logical sequence of tools to answer the question?\\\nThe way model uses the search is not helpful. The model should have used the search tool to figure the width of the US or the height of the statue.\\\nThe model didn't use the calculator tool and gave an incorrect answer. The search API should be used for current events or specific questions.\\\nThe tools were not used in a helpful way. The model did not use too many steps to answer the question.\\\nThe model did not use the appropriate tools to answer the question.\\\n    \nJudgment: Given the good reasoning in the final answer but otherwise poor performance, we give the model a score of 2.\n\nScore: 2\"\"\"", "\"\"\"Redis-backed Entity store. Entities get a TTL of 1 day by default, and\n    that TTL is extended by 3 days every time the entity is read back.\n    \"\"\"", "f\"\"\"\n            CREATE TABLE IF NOT EXISTS {self.full_table_name} (\n                key TEXT PRIMARY KEY,\n                value TEXT\n            )\n        \"\"\"", "f\"\"\"\n            SELECT value\n            FROM {self.full_table_name}\n            WHERE key = ?\n        \"\"\"", "f\"\"\"\n            INSERT OR REPLACE INTO {self.full_table_name} (key, value)\n            VALUES (?, ?)\n        \"\"\"", "f\"\"\"\n            DELETE FROM {self.full_table_name}\n            WHERE key = ?\n        \"\"\"", "f\"\"\"\n            SELECT 1\n            FROM {self.full_table_name}\n            WHERE key = ?\n            LIMIT 1\n        \"\"\"", "\"\"\"Save context from this conversation to buffer.\"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "'''\nQ: Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\"\"\"\n    money_initial = 23\n    bagels = 5\n    bagel_cost = 3\n    money_spent = bagels * bagel_cost\n    money_left = money_initial - money_spent\n    result = money_left\n    return result\n\n\n\n\n\nQ: Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\"\"\"\n    golf_balls_initial = 58\n    golf_balls_lost_tuesday = 23\n    golf_balls_lost_wednesday = 2\n    golf_balls_left = golf_balls_initial - golf_balls_lost_tuesday - golf_balls_lost_wednesday\n    result = golf_balls_left\n    return result\n\n\n\n\n\nQ: There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\"\"\"\n    computers_initial = 9\n    computers_per_day = 5\n    num_days = 4  # 4 days between monday and thursday\n    computers_added = computers_per_day * num_days\n    computers_total = computers_initial + computers_added\n    result = computers_total\n    return result\n\n\n\n\n\nQ: Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\"\"\"\n    toys_initial = 5\n    mom_toys = 2\n    dad_toys = 2\n    total_received = mom_toys + dad_toys\n    total_toys = toys_initial + total_received\n    result = total_toys\n    return result\n\n\n\n\n\nQ: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\"\"\"\n    jason_lollipops_initial = 20\n    jason_lollipops_after = 12\n    denny_lollipops = jason_lollipops_initial - jason_lollipops_after\n    result = denny_lollipops\n    return result\n\n\n\n\n\nQ: Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\"\"\"\n    leah_chocolates = 32\n    sister_chocolates = 42\n    total_chocolates = leah_chocolates + sister_chocolates\n    chocolates_eaten = 35\n    chocolates_left = total_chocolates - chocolates_eaten\n    result = chocolates_left\n    return result\n\n\n\n\n\nQ: If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\"\"\"\n    cars_initial = 3\n    cars_arrived = 2\n    total_cars = cars_initial + cars_arrived\n    result = total_cars\n    return result\n\n\n\n\n\nQ: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\"\"\"\n    trees_initial = 15\n    trees_after = 21\n    trees_added = trees_after - trees_initial\n    result = trees_added\n    return result\n\n\n\n\n\nQ: {question}\n\n# solution in Python:\n'''", "\"question\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\nIn addition to giving an answer, also return a score of how fully it answered the user's question. This should be in the following format:\n\nQuestion: [question here]\nHelpful Answer: [answer here]\nScore: [score between 0 and 100]\n\nHow to determine the score:\n- Higher is a better answer\n- Better responds fully to the asked question, with sufficient level of detail\n- If you do not know the answer based on the context, that should be a score of 0\n- Don't be overconfident!\n\nExample #1\n\nContext:\n---------\nApples are red\n---------\nQuestion: what color are apples?\nHelpful Answer: red\nScore: 100\n\nExample #2\n\nContext:\n---------\nit was night and the witness forgot his glasses. he was not sure if it was a sports car or an suv\n---------\nQuestion: what type was the car?\nHelpful Answer: a sports car or an suv\nScore: 60\n\nExample #3\n\nContext:\n---------\nPears are either red or orange\n---------\nQuestion: what color are apples?\nHelpful Answer: This document does not answer the question\nScore: 0\n\nBegin!\n\nContext:\n---------\n{context}\n---------\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"\\\nGiven a query to a question answering system select the system best suited \\\nfor the input. You will be given the names of the available systems and a description \\\nof what questions the system is best suited for. You may also revise the original \\\ninput if you think that revising it will ultimately lead to a better response.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the question answering system to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Use the following pieces of context to answer the users question. \nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\n----------------\n{context}\"\"\"", "\"{question}\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"query\"", "\"\"\"Generate Cypher statement, use it to look up in db and answer question.\"\"\"", "\"question\"", "\"question\"", "\"\"\"\n# Generate Python3 Code to solve problems\n# Q: On the nightstand, there is a red pencil, a purple mug, a burgundy keychain, a fuchsia teddy bear, a black plate, and a blue stress ball. What color is the stress ball?\n# Put objects into a dictionary for quick look up\nobjects = dict()\nobjects['pencil'] = 'red'\nobjects['mug'] = 'purple'\nobjects['keychain'] = 'burgundy'\nobjects['teddy bear'] = 'fuchsia'\nobjects['plate'] = 'black'\nobjects['stress ball'] = 'blue'\n\n# Look up the color of stress ball\nstress_ball_color = objects['stress ball']\nanswer = stress_ball_color\n\n\n# Q: On the table, you see a bunch of objects arranged in a row: a purple paperclip, a pink stress ball, a brown keychain, a green scrunchiephone charger, a mauve fidget spinner, and a burgundy pen. What is the color of the object directly to the right of the stress ball?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('paperclip', 'purple')] * 1\nobjects += [('stress ball', 'pink')] * 1\nobjects += [('keychain', 'brown')] * 1\nobjects += [('scrunchiephone charger', 'green')] * 1\nobjects += [('fidget spinner', 'mauve')] * 1\nobjects += [('pen', 'burgundy')] * 1\n\n# Find the index of the stress ball\nstress_ball_idx = None\nfor i, object in enumerate(objects):\n    if object[0] == 'stress ball':\n        stress_ball_idx = i\n        break\n\n# Find the directly right object\ndirect_right = objects[i+1]\n\n# Check the directly right object's color\ndirect_right_color = direct_right[1]\nanswer = direct_right_color\n\n\n# Q: On the nightstand, you see the following items arranged in a row: a teal plate, a burgundy keychain, a yellow scrunchiephone charger, an orange mug, a pink notebook, and a grey cup. How many non-orange items do you see to the left of the teal item?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('plate', 'teal')] * 1\nobjects += [('keychain', 'burgundy')] * 1\nobjects += [('scrunchiephone charger', 'yellow')] * 1\nobjects += [('mug', 'orange')] * 1\nobjects += [('notebook', 'pink')] * 1\nobjects += [('cup', 'grey')] * 1\n\n# Find the index of the teal item\nteal_idx = None\nfor i, object in enumerate(objects):\n    if object[1] == 'teal':\n        teal_idx = i\n        break\n\n# Find non-orange items to the left of the teal item\nnon_orange = [object for object in objects[:i] if object[1] != 'orange']\n\n# Count number of non-orange objects\nnum_non_orange = len(non_orange)\nanswer = num_non_orange\n\n\n# Q: {question}\n\"\"\"", "\"question\"", "\"\"\"Question: Who lived longer, Muhammad Ali or Alan Turing?\nAre follow up questions needed here: Yes.\nFollow up: How old was Muhammad Ali when he died?\nIntermediate answer: Muhammad Ali was 74 years old when he died.\nFollow up: How old was Alan Turing when he died?\nIntermediate answer: Alan Turing was 41 years old when he died.\nSo the final answer is: Muhammad Ali\n\nQuestion: When was the founder of craigslist born?\nAre follow up questions needed here: Yes.\nFollow up: Who was the founder of craigslist?\nIntermediate answer: Craigslist was founded by Craig Newmark.\nFollow up: When was Craig Newmark born?\nIntermediate answer: Craig Newmark was born on December 6, 1952.\nSo the final answer is: December 6, 1952\n\nQuestion: Who was the maternal grandfather of George Washington?\nAre follow up questions needed here: Yes.\nFollow up: Who was the mother of George Washington?\nIntermediate answer: The mother of George Washington was Mary Ball Washington.\nFollow up: Who was the father of Mary Ball Washington?\nIntermediate answer: The father of Mary Ball Washington was Joseph Ball.\nSo the final answer is: Joseph Ball\n\nQuestion: Are both the directors of Jaws and Casino Royale from the same country?\nAre follow up questions needed here: Yes.\nFollow up: Who is the director of Jaws?\nIntermediate answer: The director of Jaws is Steven Spielberg.\nFollow up: Where is Steven Spielberg from?\nIntermediate answer: The United States.\nFollow up: Who is the director of Casino Royale?\nIntermediate answer: The director of Casino Royale is Martin Campbell.\nFollow up: Where is Martin Campbell from?\nIntermediate answer: New Zealand.\nSo the final answer is: No\n\nQuestion: {input}\nAre followup questions needed here:{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"Chain that takes in an input and produces an action and action input.\"\"\"", "\"\"\"Return values of the agent.\"\"\"", "\"\"\"Given input, decided what to do.\n\n        Args:\n            intermediate_steps: Steps the LLM has taken to date,\n                along with observations\n            callbacks: Callbacks to run.\n            **kwargs: User inputs.\n\n        Returns:\n            Action specifying what tool to use.\n        \"\"\"", "\"\"\"Given input, decided what to do.\n\n        Args:\n            intermediate_steps: Steps the LLM has taken to date,\n                along with observations\n            callbacks: Callbacks to run.\n            **kwargs: User inputs.\n\n        Returns:\n            Action specifying what tool to use.\n        \"\"\"", "\"\"\"Return values of the agent.\"\"\"", "\"\"\"Given input, decided what to do.\n\n        Args:\n            intermediate_steps: Steps the LLM has taken to date,\n                along with observations\n            callbacks: Callbacks to run.\n            **kwargs: User inputs.\n\n        Returns:\n            Action specifying what tool to use.\n        \"\"\"", "\"\"\"Given input, decided what to do.\n\n        Args:\n            intermediate_steps: Steps the LLM has taken to date,\n                along with observations\n            callbacks: Callbacks to run.\n            **kwargs: User inputs.\n\n        Returns:\n            Action specifying what tool to use.\n        \"\"\"", "\"\"\"Class responsible for calling the language model and deciding the action.\n\n    This is driven by an LLMChain. The prompt in the LLMChain MUST include\n    a variable called \"agent_scratchpad\" where the agent can put its\n    intermediary work.\n    \"\"\"", "\"\"\"Given input, decided what to do.\n\n        Args:\n            intermediate_steps: Steps the LLM has taken to date,\n                along with observations\n            callbacks: Callbacks to run.\n            **kwargs: User inputs.\n\n        Returns:\n            Action specifying what tool to use.\n        \"\"\"", "\"\"\"Given input, decided what to do.\n\n        Args:\n            intermediate_steps: Steps the LLM has taken to date,\n                along with observations\n            callbacks: Callbacks to run.\n            **kwargs: User inputs.\n\n        Returns:\n            Action specifying what tool to use.\n        \"\"\"", "\"\"\"Create the full inputs for the LLMChain from intermediate steps.\"\"\"", "\"agent_scratchpad\"", "\"agent_scratchpad\"", "\"agent_scratchpad\"", "\"`agent_scratchpad` should be a variable in prompt.input_variables.\"", "\" Did not find it, so adding it at the end.\"", "\"agent_scratchpad\"", "\"\\n{agent_scratchpad}\"", "\"\\n{agent_scratchpad}\"", "\"\"\"Prefix to append the observation with.\"\"\"", "\"\\n\\nI now need to return a final answer based on the previous steps:\"", "\"agent_scratchpad\"", "\"\"\"Create from agent and tools.\"\"\"", "\"If you are trying to save the agent, please use the \"", "\"\"\"Take a single step in the thought-action-observation loop.\n\n        Override this to take control of how the agent makes and acts on choices.\n        \"\"\"", "\"\"\"Take a single step in the thought-action-observation loop.\n\n        Override this to take control of how the agent makes and acts on choices.\n        \"\"\"", "\"\"\"Check if the tool is a returning tool.\"\"\"", "\"\"\"You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:\"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n______________________\n{context}\"\"\"", "\"{question}\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\n\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\n\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\n=========\nFINAL ANSWER: This Agreement is governed by English law.\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\n\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\n\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\n\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n______________________\n{summaries}\"\"\"", "\"{question}\"", "\"\"\"\nYou are an agents controlling a browser. You are given:\n\n\t(1) an objective that you are trying to achieve\n\t(2) the URL of your current web page\n\t(3) a simplified text description of what's visible in the browser window (more on that below)\n\nYou can issue these commands:\n\tSCROLL UP - scroll up one page\n\tSCROLL DOWN - scroll down one page\n\tCLICK X - click on a given element. You can only click on links, buttons, and inputs!\n\tTYPE X \"TEXT\" - type the specified text into the input with id X\n\tTYPESUBMIT X \"TEXT\" - same as TYPE above, except then it presses ENTER to submit the form\n\nThe format of the browser content is highly simplified; all formatting elements are stripped.\nInteractive elements such as links, inputs, buttons are represented like this:\n\n\t\t<link id=1>text</link>\n\t\t<button id=2>text</button>\n\t\t<input id=3>text</input>\n\nImages are rendered as their alt text like this:\n\n\t\t<img id=4 alt=\"\"/>\n\nBased on your given objective, issue whatever command you believe will get you closest to achieving your goal.\nYou always start on Google; you should submit a search query to Google that will take you to the best page for\nachieving your objective. And then interact with that page to achieve your objective.\n\nIf you find yourself on Google and there are no search results displayed yet, you should probably issue a command\nlike \"TYPESUBMIT 7 \"search query\"\" to get to a more useful page.\n\nThen, if you find yourself on a Google search results page, you might issue the command \"CLICK 24\" to click\non the first link in the search results. (If your previous command was a TYPESUBMIT your next command should\nprobably be a CLICK.)\n\nDon't try to interact with elements that you can't see.\n\nHere are some examples:\n\nEXAMPLE 1:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Find a 2 bedroom house for sale in Anchorage AK for under $750k\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"anchorage redfin\"\n==================================================\n\nEXAMPLE 2:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Make a reservation for 4 at Dorsia at 8pm\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"dorsia nyc opentable\"\n==================================================\n\nEXAMPLE 3:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<button id=1>For Businesses</button>\n<button id=2>Mobile</button>\n<button id=3>Help</button>\n<button id=4 alt=\"Language Picker\">EN</button>\n<link id=5>OpenTable logo</link>\n<button id=6 alt =\"search\">Search</button>\n<text id=7>Find your table for any occasion</text>\n<button id=8>(Date selector)</button>\n<text id=9>Sep 28, 2022</text>\n<text id=10>7:00 PM</text>\n<text id=11>2 people</text>\n<input id=12 alt=\"Location, Restaurant, or Cuisine\"></input>\n<button id=13>Let\u2019s go</button>\n<text id=14>It looks like you're in Peninsula. Not correct?</text>\n<button id=15>Get current location</button>\n<button id=16>Next</button>\n------------------\nOBJECTIVE: Make a reservation for 4 for dinner at Dorsia in New York City at 8pm\nCURRENT URL: https://www.opentable.com/\nYOUR COMMAND:\nTYPESUBMIT 12 \"dorsia new york city\"\n==================================================\n\nThe current browser content, objective, and current URL follow. Reply with your next command to the browser.\n\nCURRENT BROWSER CONTENT:\n------------------\n{browser_content}\n------------------\n\nOBJECTIVE: {objective}\nCURRENT URL: {url}\nPREVIOUS COMMAND: {previous_command}\nYOUR COMMAND:\n\"\"\"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"How to parse the output of calling an LLM on this formatted prompt.\"\"\"", "\"Cannot have an input variable named 'stop', as it is used internally,\"", "\"\"\"Return a partial of the prompt template.\"\"\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the student's answer, and the true answer, and are asked to score the student answer as either CORRECT or INCORRECT.\n\nExample Format:\nQUESTION: question here\nSTUDENT ANSWER: student's answer here\nTRUE ANSWER: true answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nSTUDENT ANSWER: {result}\nTRUE ANSWER: {answer}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\nWrite out in a step by step manner your reasoning to be sure that your conclusion is correct. Avoid simply stating the correct answer at the outset.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nEXPLANATION: step by step reasoning here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nEXPLANATION:\"\"\"", "\"query\"", "\"\"\"\\\nGiven a raw text input to a language model select the model prompt best suited for \\\nthe input. You will be given the names of the available prompts and a description of \\\nwhat the prompt is best suited for. You may also revise the original input if you \\\nthink that revising it will ultimately lead to a better response from the language \\\nmodel.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the prompt to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\"", "\"\"\"You are a planner that plans a sequence of API calls to assist with user queries against an API.\n\nYou should:\n1) evaluate whether the user query can be solved by the API documentated below. If no, say why.\n2) if yes, generate a plan of API calls and say what they are doing step by step.\n3) If the plan includes a DELETE call, you should always return an ask from the User for authorization first unless the User has specifically asked to delete something.\n\nYou should only use API endpoints documented below (\"Endpoints you can use:\").\nYou can only use the DELETE tool if the User has specifically asked to delete something. Otherwise, you should return a request authorization from the User first.\nSome user queries can be resolved in a single API call, but some will require several API calls.\nThe plan will be passed to an API controller that can format it into web requests and return the responses.\n\n----\n\nHere are some examples:\n\nFake endpoints for examples:\nGET /user to get information about the current user\nGET /products/search search across products\nPOST /users/{{id}}/cart to add products to a user's cart\nPATCH /users/{{id}}/cart to update a user's cart\nDELETE /users/{{id}}/cart to delete a user's cart\n\nUser query: tell me a joke\nPlan: Sorry, this API's domain is shopping, not comedy.\n\nUser query: I want to buy a couch\nPlan: 1. GET /products with a query param to search for couches\n2. GET /user to find the user's id\n3. POST /users/{{id}}/cart to add a couch to the user's cart\n\nUser query: I want to add a lamp to my cart\nPlan: 1. GET /products with a query param to search for lamps\n2. GET /user to find the user's id\n3. PATCH /users/{{id}}/cart to add a lamp to the user's cart\n\nUser query: I want to delete my cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? Yes, proceed.\n3. DELETE /users/{{id}}/cart to delete the user's cart\n\nUser query: I want to start a new cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? No, ask for authorization.\n3. Are you sure you want to delete your cart? \n----\n\nHere are endpoints you can use. Do not reference any of the endpoints above.\n\n{endpoints}\n\n----\n\nUser query: {query}\nPlan:\"\"\"", "f\"Can be used to generate the right API calls to assist with a user query, like {API_PLANNER_TOOL_NAME}(query). Should always be called before trying to call the API controller.\"", "\"\"\"You are an agent that gets a sequence of API calls and given their documentation, should execute them and return the final response.\nIf you cannot complete them and run into issues, you should explain the issue. If you're able to resolve an API call, you can retry the API call. When interacting with API objects, you should extract ids for inputs to other API calls but ids and names for outputs returned to the User.\n\n\nHere is documentation on the API:\nBase url: {api_url}\nEndpoints:\n{api_docs}\n\n\nHere are tools to execute requests against the API: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nPlan: the plan of API calls to execute\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the output of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing the plan (or, I cannot finish executing the plan without knowing some other information.)\nFinal Answer: the final output from executing the plan or missing information I'd need to re-plan correctly.\n\n\nBegin!\n\nPlan: {input}\nThought:\n{agent_scratchpad}\n\"\"\"", "\"\"\"You are an agent that assists with user queries against API, things like querying information or creating resources.\nSome user queries can be resolved in a single API call, particularly if you can find appropriate params from the OpenAPI spec; though some require several API calls.\nYou should always plan your API calls first, and then execute the plan second.\nIf the plan includes a DELETE call, be sure to ask the User for authorization first unless the User has specifically asked to delete something.\nYou should never return information without executing the api_controller tool.\n\n\nHere are the tools to plan and execute API requests: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nUser query: the query a User wants help with related to the API\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing a plan and have the information the user asked for or the data the user asked to create\nFinal Answer: the final output from executing the plan\n\n\nExample:\nUser query: can you add some trendy stuff to my shopping cart.\nThought: I should plan API calls first.\nAction: api_planner\nAction Input: I need to find the right API calls to add trendy items to the users shopping cart\nObservation: 1) GET /items with params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\nThought: I'm ready to execute the API calls.\nAction: api_controller\nAction Input: 1) GET /items params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\n...\n\nBegin!\n\nUser query: {input}\nThought: I should generate a plan to help with this query and then copy that plan exactly to the controller.\n{agent_scratchpad}\"\"\"", "\"\"\"Use this to GET content from a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"params\" and \"output_instructions\".\nThe value of \"url\" should be a string. \nThe value of \"params\" should be a dict of the needed and available parameters from the OpenAPI spec related to the endpoint. \nIf parameters are not needed, or not available, leave it empty.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, \nfor example the id(s) for a resource(s) that the GET request fetches.\n\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to POST to a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs you want to POST to the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the POST request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to PATCH content on a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs of the body params available in the OpenAPI spec you want to PATCH the content with at the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the PATCH request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"ONLY USE THIS TOOL WHEN THE USER HAS SPECIFICALLY REQUESTED TO DELETE CONTENT FROM A WEBSITE.\nInput to the tool should be a json string with 2 keys: \"url\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the DELETE request creates.\nAlways use double quotes for strings in the json string.\nONLY USE THIS TOOL IF THE USER HAS SPECIFICALLY REQUESTED TO DELETE SOMETHING.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"\\\n```json\n{\n    \"content\": \"Lyrics of a song\",\n    \"attributes\": {\n        \"artist\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the song artist\"\n        },\n        \"length\": {\n            \"type\": \"integer\",\n            \"description\": \"Length of the song in seconds\"\n        },\n        \"genre\": {\n            \"type\": \"string\",\n            \"description\": \"The song genre, one of \\\"pop\\\", \\\"rock\\\" or \\\"rap\\\"\"\n        }\n    }\n}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"teenager love\",\n    \"filter\": \"and(or(eq(\\\\\"artist\\\\\", \\\\\"Taylor Swift\\\\\"), eq(\\\\\"artist\\\\\", \\\\\"Katy Perry\\\\\")), \\\nlt(\\\\\"length\\\\\", 180), eq(\\\\\"genre\\\\\", \\\\\"pop\\\\\"))\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"\",\n    \"filter\": \"NO_FILTER\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"love\",\n    \"filter\": \"NO_FILTER\",\n    \"limit\": 2\n}}\n```\\\n\"\"\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n{data_source}\n\nUser Query:\n{user_query}\n\nStructured Request:\n{structured_request}\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\\\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n    \"limit\": int \\\\ the number of documents to retrieve\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\nMake sure the `limit` is always an int value. It is an optional parameter so leave it blank if it is does not make sense.\n\"\"\"", "\"\"\"\\\nYour goal is to structure the user's query to match the request schema provided below.\n\n{schema}\\\n\"\"\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n```json\n{{{{\n    \"content\": \"{content}\",\n    \"attributes\": {attributes}\n}}}}\n```\n\nUser Query:\n{{query}}\n\nStructured Request:\n\"\"\""], "Elhassnaoui2001~Chat-with-an-Image": ["\"\"\"Size of the terminal.\"\"\"", "\"\"\"The width of the console in 'cells'.\"\"\"", "\"\"\"The height of the console in lines.\"\"\"", "\"\"\"True if the target is a terminal, otherwise False.\"\"\"", "\"\"\"Get the result of the capture.\"\"\"", "\"\"\"Provides hooks in to the render process.\"\"\"", "\"\"\"A high level console interface.\n\n    Args:\n        color_system (str, optional): The color system supported by your terminal,\n            either ``\"standard\"``, ``\"256\"`` or ``\"truecolor\"``. Leave as ``\"auto\"`` to autodetect.\n        force_terminal (Optional[bool], optional): Enable/disable terminal control codes, or None to auto-detect terminal. Defaults to None.\n        force_jupyter (Optional[bool], optional): Enable/disable Jupyter rendering, or None to auto-detect Jupyter. Defaults to None.\n        force_interactive (Optional[bool], optional): Enable/disable interactive mode, or None to auto detect. Defaults to None.\n        soft_wrap (Optional[bool], optional): Set soft wrap default on print method. Defaults to False.\n        theme (Theme, optional): An optional style theme object, or ``None`` for default theme.\n        stderr (bool, optional): Use stderr rather than stdout if ``file`` is not specified. Defaults to False.\n        file (IO, optional): A file object where the console should write to. Defaults to stdout.\n        quiet (bool, Optional): Boolean to suppress all output. Defaults to False.\n        width (int, optional): The width of the terminal. Leave as default to auto-detect width.\n        height (int, optional): The height of the terminal. Leave as default to auto-detect height.\n        style (StyleType, optional): Style to apply to all output, or None for no style. Defaults to None.\n        no_color (Optional[bool], optional): Enabled no color mode, or None to auto detect. Defaults to None.\n        tab_size (int, optional): Number of spaces used to replace a tab character. Defaults to 8.\n        record (bool, optional): Boolean to enable recording of terminal output,\n            required to call :meth:`export_html`, :meth:`export_svg`, and :meth:`export_text`. Defaults to False.\n        markup (bool, optional): Boolean to enable :ref:`console_markup`. Defaults to True.\n        emoji (bool, optional): Enable emoji code. Defaults to True.\n        emoji_variant (str, optional): Optional emoji variant, either \"text\" or \"emoji\". Defaults to None.\n        highlight (bool, optional): Enable automatic highlighting. Defaults to True.\n        log_time (bool, optional): Boolean to enable logging of time by :meth:`log` methods. Defaults to True.\n        log_path (bool, optional): Boolean to enable the logging of the caller by :meth:`log`. Defaults to True.\n        log_time_format (Union[str, TimeFormatterCallable], optional): If ``log_time`` is enabled, either string for strftime or callable that formats the time. Defaults to \"[%X] \".\n        highlighter (HighlighterType, optional): Default highlighter.\n        legacy_windows (bool, optional): Enable legacy Windows mode, or ``None`` to auto detect. Defaults to ``None``.\n        safe_box (bool, optional): Restrict box options that don't render on legacy Windows.\n        get_datetime (Callable[[], datetime], optional): Callable that gets the current time as a datetime.datetime object (used by Console.log),\n            or None for datetime.now.\n        get_time (Callable[[], time], optional): Callable that gets the current time in seconds, default uses time.monotonic.\n    \"\"\"", "\"\"\"Get the file object to write to.\"\"\"", "\"\"\"Pop the last renderhook from the stack.\"\"\"", "\"\"\"Push a new theme on to the top of the stack, replacing the styles from the previous theme.\n        Generally speaking, you should call :meth:`~rich.console.Console.use_theme` to get a context manager, rather\n        than calling this method directly.\n\n        Args:\n            theme (Theme): A theme instance.\n            inherit (bool, optional): Inherit existing styles. Defaults to True.\n        \"\"\"", "\"\"\"Check if the console is writing to a terminal.\n\n        Returns:\n            bool: True if the console writing to a device capable of\n            understanding terminal codes, otherwise False.\n        \"\"\"", "\"\"\"Get the size of the console.\n\n        Returns:\n            ConsoleDimensions: A named tuple containing the dimensions.\n        \"\"\"", "\"\"\"Get the width of the console.\n\n        Returns:\n            int: The width (in characters) of the console.\n        \"\"\"", "\"\"\"Get the height of the console.\n\n        Returns:\n            int: The height (in lines) of the console.\n        \"\"\"", "\"\"\"A context manager to display anything printed within a \"pager\". The pager application\n        is defined by the system and will typically support at least pressing a key to scroll.\n\n        Args:\n            pager (Pager, optional): A pager object, or None to use :class:`~rich.pager.SystemPager`. Defaults to None.\n            styles (bool, optional): Show styles in pager. Defaults to False.\n            links (bool, optional): Show links in pager. Defaults to False.\n\n        Example:\n            >>> from rich.console import Console\n            >>> from rich.__main__ import make_test_card\n            >>> console = Console()\n            >>> with console.pager():\n                    console.print(make_test_card())\n\n        Returns:\n            PagerContext: A context manager.\n        \"\"\"", "\"\"\"Clear the screen.\n\n        Args:\n            home (bool, optional): Also move the cursor to 'home' position. Defaults to True.\n        \"\"\"", "\"\"\"Enables alternative screen mode.\n\n        Note, if you enable this mode, you should ensure that is disabled before\n        the application exits. See :meth:`~rich.Console.screen` for a context manager\n        that handles this for you.\n\n        Args:\n            enable (bool, optional): Enable (True) or disable (False) alternate screen. Defaults to True.\n\n        Returns:\n            bool: True if the control codes were written.\n\n        \"\"\"", "\"\"\"Set the title of the console terminal window.\n\n        Warning: There is no means within Rich of \"resetting\" the window title to its\n        previous value, meaning the title you set will persist even after your application\n        exits.\n\n        ``fish`` shell resets the window title before and after each command by default,\n        negating this issue. Windows Terminal and command prompt will also reset the title for you.\n        Most other shells and terminals, however, do not do this.\n\n        Some terminals may require configuration changes before you can set the title.\n        Some terminals may not support setting the title at all.\n\n        Other software (including the terminal itself, the shell, custom prompts, plugins, etc.)\n        may also set the terminal window title. This could result in whatever value you write\n        using this method being overwritten.\n\n        Args:\n            title (str): The new title of the terminal window.\n\n        Returns:\n            bool: True if the control code to change the terminal title was\n                written, otherwise False. Note that a return value of True\n                does not guarantee that the window title has actually changed,\n                since the feature may be unsupported/disabled in some terminals.\n        \"\"\"", "\"\"\"Render an object in to an iterable of `Segment` instances.\n\n        This method contains the logic for rendering objects with the console protocol.\n        You are unlikely to need to use it directly, unless you are extending the library.\n\n        Args:\n            renderable (RenderableType): An object supporting the console protocol, or\n                an object that may be converted to a string.\n            options (ConsoleOptions, optional): An options object, or None to use self.options. Defaults to None.\n\n        Returns:\n            Iterable[Segment]: An iterable of segments that may be rendered.\n        \"\"\"", "\"\"\"Render objects in to a list of lines.\n\n        The output of render_lines is useful when further formatting of rendered console text\n        is required, such as the Panel class which draws a border around any renderable object.\n\n        Args:\n            renderable (RenderableType): Any object renderable in the console.\n            options (Optional[ConsoleOptions], optional): Console options, or None to use self.options. Default to ``None``.\n            style (Style, optional): Optional style to apply to renderables. Defaults to ``None``.\n            pad (bool, optional): Pad lines shorter than render width. Defaults to ``True``.\n            new_lines (bool, optional): Include \"\\n\" characters at end of lines.\n\n        Returns:\n            List[List[Segment]]: A list of lines, where a line is a list of Segment objects.\n        \"\"\"", "\"\"\"Draw a line with optional centered title.\n\n        Args:\n            title (str, optional): Text to render over the rule. Defaults to \"\".\n            characters (str, optional): Character(s) to form the line. Defaults to \"\u2500\".\n            style (str, optional): Style of line. Defaults to \"rule.line\".\n            align (str, optional): How to align the title, one of \"left\", \"center\", or \"right\". Defaults to \"center\".\n        \"\"\"", "\"\"\"Output to the terminal. This is a low-level way of writing to the terminal which unlike\n        :meth:`~rich.console.Console.print` won't pretty print, wrap text, or apply markup, but will\n        optionally apply highlighting and a basic style.\n\n        Args:\n            sep (str, optional): String to write between print data. Defaults to \" \".\n            end (str, optional): String to write at end of print data. Defaults to \"\\\\\\\\n\".\n            style (Union[str, Style], optional): A style to apply to output. Defaults to None.\n            highlight (Optional[bool], optional): Enable automatic highlighting, or ``None`` to use\n                console default. Defaults to ``None``.\n        \"\"\"", "\"\"\"Get caller frame information.\n\n        Args:\n            offset (int): the caller offset within the current frame stack.\n            currentframe (Callable[[], Optional[FrameType]], optional): the callable to use to\n                retrieve the current frame. Defaults to ``inspect.currentframe``.\n\n        Returns:\n            Tuple[str, int, Dict[str, Any]]: A tuple containing the filename, the line number and\n                the dictionary of local variables associated with the caller frame.\n\n        Raises:\n            RuntimeError: If the stack offset is invalid.\n        \"\"\"", "\"\"\"Check if the buffer may be rendered. Render it if it can (e.g. Console.quiet is False)\n        Rendering is supported on Windows, Unix and Jupyter environments. For\n        legacy Windows consoles, the win32 API is called directly.\n        This method will also record what it renders if recording is enabled via Console.record.\n        \"\"\"", "\"\"\"Displays a prompt and waits for input from the user. The prompt may contain color / style.\n\n        It works in the same way as Python's builtin :func:`input` function and provides elaborate line editing and history features if Python's builtin :mod:`readline` module is previously loaded.\n\n        Args:\n            prompt (Union[str, Text]): Text to render in the prompt.\n            markup (bool, optional): Enable console markup (requires a str prompt). Defaults to True.\n            emoji (bool, optional): Enable emoji (requires a str prompt). Defaults to True.\n            password: (bool, optional): Hide typed text. Defaults to False.\n            stream: (TextIO, optional): Optional file to read input from (rather than stdin). Defaults to None.\n\n        Returns:\n            str: Text read from stdin.\n        \"\"\"", "\"\"\"Generate text from console and save to a given location (requires record=True argument in constructor).\n\n        Args:\n            path (str): Path to write text files.\n            clear (bool, optional): Clear record buffer after exporting. Defaults to ``True``.\n            styles (bool, optional): If ``True``, ansi style codes will be included. ``False`` for plain text.\n                Defaults to ``False``.\n\n        \"\"\"", "\"\"\"Generate HTML from console contents (requires record=True argument in constructor).\n\n        Args:\n            theme (TerminalTheme, optional): TerminalTheme object containing console colors.\n            clear (bool, optional): Clear record buffer after exporting. Defaults to ``True``.\n            code_format (str, optional): Format string to render HTML. In addition to '{foreground}',\n                '{background}', and '{code}', should contain '{stylesheet}' if inline_styles is ``False``.\n            inline_styles (bool, optional): If ``True`` styles will be inlined in to spans, which makes files\n                larger but easier to cut and paste markup. If ``False``, styles will be embedded in a style tag.\n                Defaults to False.\n\n        Returns:\n            str: String containing console contents as HTML.\n        \"\"\"", "\"\"\"Generate HTML from console contents and write to a file (requires record=True argument in constructor).\n\n        Args:\n            path (str): Path to write html file.\n            theme (TerminalTheme, optional): TerminalTheme object containing console colors.\n            clear (bool, optional): Clear record buffer after exporting. Defaults to ``True``.\n            code_format (str, optional): Format string to render HTML. In addition to '{foreground}',\n                '{background}', and '{code}', should contain '{stylesheet}' if inline_styles is ``False``.\n            inline_styles (bool, optional): If ``True`` styles will be inlined in to spans, which makes files\n                larger but easier to cut and paste markup. If ``False``, styles will be embedded in a style tag.\n                Defaults to False.\n\n        \"\"\"", "\"\"\"\n        Generate an SVG from the console contents (requires record=True in Console constructor).\n\n        Args:\n            title (str, optional): The title of the tab in the output image\n            theme (TerminalTheme, optional): The ``TerminalTheme`` object to use to style the terminal\n            clear (bool, optional): Clear record buffer after exporting. Defaults to ``True``\n            code_format (str, optional): Format string used to generate the SVG. Rich will inject a number of variables\n                into the string in order to form the final SVG output. The default template used and the variables\n                injected by Rich can be found by inspecting the ``console.CONSOLE_SVG_FORMAT`` variable.\n            font_aspect_ratio (float, optional): The width to height ratio of the font used in the ``code_format``\n                string. Defaults to 0.61, which is the width to height ratio of Fira Code (the default font).\n                If you aren't specifying a different font inside ``code_format``, you probably don't need this.\n            unique_id (str, optional): unique id that is used as the prefix for various elements (CSS styles, node\n                ids). If not set, this defaults to a computed value based on the recorded content.\n        \"\"\"", "\"\"\"Generate an SVG file from the console contents (requires record=True in Console constructor).\n\n        Args:\n            path (str): The path to write the SVG to.\n            title (str, optional): The title of the tab in the output image\n            theme (TerminalTheme, optional): The ``TerminalTheme`` object to use to style the terminal\n            clear (bool, optional): Clear record buffer after exporting. Defaults to ``True``\n            code_format (str, optional): Format string used to generate the SVG. Rich will inject a number of variables\n                into the string in order to form the final SVG output. The default template used and the variables\n                injected by Rich can be found by inspecting the ``console.CONSOLE_SVG_FORMAT`` variable.\n            font_aspect_ratio (float, optional): The width to height ratio of the font used in the ``code_format``\n                string. Defaults to 0.61, which is the width to height ratio of Fira Code (the default font).\n                If you aren't specifying a different font inside ``code_format``, you probably don't need this.\n            unique_id (str, optional): unique id that is used as the prefix for various elements (CSS styles, node\n                ids). If not set, this defaults to a computed value based on the recorded content.\n        \"\"\"", "\"\"\"Returns a unique hash for the given SVG main code.\n\n    Args:\n        svg_main_code (str): The content we're going to inject in the SVG envelope.\n\n    Returns:\n        str: a hash of the given content\n    \"\"\"", "\"question\"", "\"question\"", "\"question\""], "mitchmalvin1~langchain": ["f\"\"\"Use the following pieces of context to answer the question at the end.\n\n        You are acting as {ner_map['influencer']}. Analyze the given conversation in the context. \n        I will talk to you as {ner_map['user']} and you will reply me as {ner_map['influencer']}. \n        Analyze {ner_map['influencer']}'s talking style, tone, and certain slang words that she likes to use and reply to me in  a similar manner. \n        You are to reply to me only once and only as {ner_map['influencer']}. \n        Do not complete the conversation more than once. \n        If there is not enough information, try to infer from the context and reply to me on your own. \n        Try to imitate the talking style provided below sparingly and only when it is appropriate to do so. \n\n        These are all entities present : \n        {ner_map['entities']}\n\n        This is the talking style of {ner_map['influencer']} : \n\n        Talking style: {ner_map['talking-style']}\n\n        Accent: {ner_map['accent']}\n\n        Common Slang words: {ner_map['slang']}\n\n\n        This is the context given:\"\"\"", "\"\"\"\n        {question}\n        \"\"\"", "f'History retrieved for {user} and {influencer}'", "\"question\"", "'Here are all the current chains so far :'", "f'Chat bot initialized for {user_name} and {influencer}'", "f'Chat bot stopped for {user_name} and {influencer}'", "\"question\""], "xuanloct4~langchain": ["\"\"\"Question: {question}\n\nAnswer: Let's think step by step.\"\"\"", "\"question\"", "\"question\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nAnswer in Italian:\"\"\"", "\"question\"", "\"question\"", "\"question\"", "\"question\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text translated into italian.\n{context}\nQuestion: {question}\nRelevant text, if any, in Italian:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer italian. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nAnswer in Italian:\"\"\"", "\"question\"", "\"question\"", "\"question\"", "\"question\"", "\"The original question is as follows: {question}\\n\"", "\"We have the opportunity to refine the existing answer\"", "\"(only if needed) with some more context below.\\n\"", "\"Given the new context, refine the original answer to better \"", "\"answer the question. \"", "\"If the context isn't useful, return the original answer. Reply in Italian.\"", "\"question\"", "\"Context information is below. \\n\"", "\"Given the context information and not prior knowledge, \"", "\"answer the question: {question}\\nYour answer should be in Italian.\\n\"", "\"question\"", "\"question\"", "\"question\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\nIn addition to giving an answer, also return a score of how fully it answered the user's question. This should be in the following format:\n\nQuestion: [question here]\nHelpful Answer In Italian: [answer here]\nScore: [score between 0 and 100]\n\nBegin!\n\nContext:\n---------\n{context}\n---------\nQuestion: {question}\nHelpful Answer In Italian:\"\"\"", "\"question\"", "\"question\"", "'What is the weather like right now in Munich, Germany in degrees Farenheit?'", "\"\"\"Use the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [{tool_names}]\nAction Input: what to instruct the AI Action representative.\nObservation: The Agent's response\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer. User can't see any of my observations, API responses, links, or tools.\nFinal Answer: the final answer to the original input question with the right amount of detail\n\nWhen responding with your Final Answer, remember that the person you are responding to CANNOT see any of your Thought/Action/Action Input/Observations, so if there is any relevant information there you need to include it explicitly in your response.\"\"\"", "\" Could you help me find an Italian outfit to wear and\"", "\" an appropriate recipe to prepare so I can present for the class in Italian?\"", "\"Tell the LangChain audience to 'enjoy the meal' in Italian, please!\"", "\"\"\"Given the driver's up to date stats, write them note relaying those stats to them.\nIf they have a conversation rate above .5, give them a compliment. Otherwise, make a silly joke about chickens at the end to make them feel better\n\nHere are the drivers stats:\nConversation rate: {conv_rate}\nAcceptance rate: {acc_rate}\nAverage Daily Trips: {avg_daily_trips}\n\nYour response:\"\"\"", "\"\"\" A custom prompt template that takes in the function name as input, and formats the prompt template to provide the source code of the function. \"\"\"", "\"function_name must be the only input_variable.\"", "f\"\"\"\n        Given the function name and source code, generate an English language explanation of the function.\n        Function Name: {kwargs[\"function_name\"].__name__}\n        Source Code:\n        {source_code}\n        Explanation:\n        \"\"\"", "\"May the {subject} be with you\"", "\"What is the best way to learn programming?\"", "\"\"\"\\\n1. Choose a programming language: Decide on a programming language that you want to learn. \n\n2. Start with the basics: Familiarize yourself with the basic programming concepts such as variables, data types and control structures.\n\n3. Practice, practice, practice: The best way to learn programming is through hands-on experience\\\n\"\"\"", "\"question\"", "\"question\"", "\"question\"", "\"\"\"\nAre follow up questions needed here: Yes.\nFollow up: Who was the mother of George Washington?\nIntermediate answer: The mother of George Washington was Mary Ball Washington.\nFollow up: Who was the father of Mary Ball Washington?\nIntermediate answer: The father of Mary Ball Washington was Joseph Ball.\nSo the final answer is: Joseph Ball\n\"\"\"", "\"question\"", "\"Are both the directors of Jaws and Casino Royale from the same country?\"", "\"\"\"\nAre follow up questions needed here: Yes.\nFollow up: Who is the director of Jaws?\nIntermediate Answer: The director of Jaws is Steven Spielberg.\nFollow up: Where is Steven Spielberg from?\nIntermediate Answer: The United States.\nFollow up: Who is the director of Casino Royale?\nIntermediate Answer: The director of Casino Royale is Martin Campbell.\nFollow up: Where is Martin Campbell from?\nIntermediate Answer: New Zealand.\nSo the final answer is: No\n\"\"\"", "\"question\"", "\"Question: {question}\\n{answer}\"", "\"Question: {input}\"", "\"question\"", "f\"Examples most similar to the input: {question}\"", "\"Question: {input}\"", "\"question\"", "f\"Examples most similar to the input: {question}\"", "\"Question: {input}\"", "\"Give the antonym of every input\"", "\"\"\"Question: {question}\n\nAnswer: Let's think step by step.\"\"\"", "\"question\"", "\"Who won the FIFA World Cup in the year 1994? \"", "\"Please write a bash script that prints 'Hello World' to the console.\"", "\"\"\"If someone asks you to perform a task, your job is to come up with a series of bash commands that will perform the task. There is no need to put \"#!/bin/bash\" in your answer. Make sure to reason step by step, using this format:\nQuestion: \"copy the files in the directory named 'target' into a new directory at the same level as target called 'myNewDirectory'\"\nI need to take the following actions:\n- List all files in the directory\n- Create a new directory\n- Copy the files from the first directory into the second directory\n```bash\nls\nmkdir myNewDirectory\ncp -r target/* myNewDirectory\n```\n\nDo not use 'echo' when writing the script.\n\nThat is the format. Begin!\nQuestion: {question}\"\"\"", "\"question\"", "\"Please write a bash script that prints 'Hello World' to the console.\"", "\"List the current directory then move up a level.\"", "\"\"\"Question: {question}\n\n    Answer: Let's think step by step.\"\"\"", "\"question\"", "\"\"\"\nAnswer the following yes/no question by reasoning step by step. \nCan a dog drive a car?\n\"\"\"", "\"Write a description of a logo for this company: {company_name}\"", "\"\"\"Question: {question}\n\nAnswer: Let's think step by step.\"\"\"", "\"question\"", "\"Who won the FIFA World Cup in the year 1994? \"", "\"\"\"Given input, decided what to do.\n\n        Args:\n            intermediate_steps: Steps the LLM has taken to date,\n                along with observations\n            **kwargs: User inputs.\n\n        Returns:\n            Action specifying what tool to use.\n        \"\"\"", "\"\"\"Given input, decided what to do.\n\n        Args:\n            intermediate_steps: Steps the LLM has taken to date,\n                along with observations\n            **kwargs: User inputs.\n\n        Returns:\n            Action specifying what tool to use.\n        \"\"\"", "\"agent_scratchpad\"", "r\"Action\\s*\\d*\\s*:(.*?)\\nAction\\s*\\d*\\s*Input\\s*\\d*\\s*:[\\s]*(.*)\"", "\"\"\"Answer the following questions as best you can, but speaking as a pirate might speak. You have access to the following tools:\n\n{tools}\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin! Remember to speak as a pirate when giving your final answer. Use lots of \"Arg\"s\n\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"\"\"Answer the following questions as best you can, but speaking as a pirate might speak. You have access to the following tools:\n\n{tools}\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin! Remember to speak as a pirate when giving your final answer. Use lots of \"Arg\"s\n\nPrevious conversation history:\n{history}\n\nNew question: {input}\n{agent_scratchpad}\"\"\"", "\"\"\"Answer the following questions as best you can, but speaking as a pirate might speak. You have access to the following tools:\"\"\"", "\"\"\"Begin! Remember to speak as a pirate when giving your final answer. Use lots of \"Args\"\n\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"Answer the following questions as best you can. You have access to the following tools:\"\"\"", "\"\"\"When answering, you MUST speak in the following language: {language}.\n\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"Question: {question}\n\nAnswer: Let's think step by step.\"\"\"", "\"question\"", "\"\"\"Assistant is a large language model trained by OpenAI.\n\nAssistant is designed to be able to assist with a wide range of tasks, from answering simple questions to providing in-depth explanations and discussions on a wide range of topics. As a language model, Assistant is able to generate human-like text based on the input it receives, allowing it to engage in natural-sounding conversations and provide responses that are coherent and relevant to the topic at hand.\n\nAssistant is constantly learning and improving, and its capabilities are constantly evolving. It is able to process and understand large amounts of text, and can use this knowledge to provide accurate and informative responses to a wide range of questions. Additionally, Assistant is able to generate its own text based on the input it receives, allowing it to engage in discussions and provide explanations and descriptions on a wide range of topics.\n\nOverall, Assistant is a powerful tool that can help with a wide range of tasks and provide valuable insights and information on a wide range of topics. Whether you need help with a specific question or just want to have a conversation about a particular topic, Assistant is here to assist.\n\n{history}\nHuman: {human_input}\nAssistant:\"\"\"", "\"I want you to act as a Linux terminal. I will type commands and you will reply with what the terminal should show. I want you to only reply with the terminal output inside one unique code block, and nothing else. Do not write explanations. Do not type commands unless I instruct you to do so. When I need to tell you something in English I will do so by putting text inside curly brackets {like this}. My first command is pwd.\"", "\"query\"", "\"\"\"I am a classification model. It will try to classify your input.\n\nInput: {human_input}\nOutput:\"\"\"", "\"\"\"Write a concise summary of the following:\n\n\n{text}\n\n\nCONCISE SUMMARY:\"\"\"", "\"\"\"Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question.\nYou can assume the question about the most recent state of the union address.\n\nChat History:\n{chat_history}\nFollow Up Input: {question}\nStandalone question:\"\"\"", "\"\"\"You are an AI assistant for answering questions about the most recent state of the union address.\nYou are given the following extracted parts of a long document and a question. Provide a conversational answer.\nIf you don't know the answer, just say \"Hmm, I'm not sure.\" Don't try to make up an answer.\nIf the question is not about the most recent state of the union, politely inform them that you are tuned to only answer questions about the most recent state of the union.\nQuestion: {question}\n=========\n{context}\n=========\nAnswer in Markdown:\"\"\"", "\"question\"", "\"You are a planner who is an expert at coming up with a todo list for a given objective. Come up with a todo list for this objective: {objective}\"", "\"useful for when you need to answer questions about current events\"", "\"useful for when you need to come up with todo lists. Input: an objective to create a todo list for. Output: a todo list for that objective. Please be very clear what the objective is!\"", "\"\"\"You are an AI who performs one task based on the following objective: {objective}. Take into account these previously completed tasks: {context}.\"\"\"", "\"\"\"Question: {task}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"Question: {question}\n\nAnswer: Let's think step by step.\"\"\"", "\"question\"", "\"This is a test document.\"", "\"\"\"Question: {question}\n\nAnswer: Let's think step by step.\"\"\"", "\"question\"", "\"\"\"Assistant is a large language model trained by OpenAI.\n\nAssistant is designed to be able to assist with a wide range of tasks, from answering simple questions to providing in-depth explanations and discussions on a wide range of topics. As a language model, Assistant is able to generate human-like text based on the input it receives, allowing it to engage in natural-sounding conversations and provide responses that are coherent and relevant to the topic at hand.\n\nAssistant is constantly learning and improving, and its capabilities are constantly evolving. It is able to process and understand large amounts of text, and can use this knowledge to provide accurate and informative responses to a wide range of questions. Additionally, Assistant is able to generate its own text based on the input it receives, allowing it to engage in discussions and provide explanations and descriptions on a wide range of topics.\n\nOverall, Assistant is a powerful tool that can help with a wide range of tasks and provide valuable insights and information on a wide range of topics. Whether you need help with a specific question or just want to have a conversation about a particular topic, Assistant is here to assist.\n\nAssistant is aware that human input is being transcribed from audio and as such there may be some errors in the transcription. It will attempt to account for some words being swapped with similar-sounding words or phrases. Assistant will also keep responses concise, because human attention spans are more limited over the audio channel since it takes time to listen to a response.\n\n{history}\nHuman: {human_input}\nAssistant:\"\"\"", "\"\"\"This is a conversation between a human and a bot:\n\n{chat_history}\n\nWrite a summary of the conversation for {input}:\n\"\"\"", "\"useful for when you need to answer questions about current events\"", "\"useful for when you summarize a conversation. The input to this tool should be a string, representing who will read this summary.\"", "\"\"\"Have a conversation with a human, answering the following questions as best you can. You have access to the following tools:\"\"\"", "\"\"\"Begin!\"\n\n{chat_history}\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"This is a conversation between a human and a bot:\n\n{chat_history}\n\nWrite a summary of the conversation for {input}:\n\"\"\"", "\"useful for when you need to answer questions about current events\"", "\"useful for when you summarize a conversation. The input to this tool should be a string, representing who will read this summary.\"", "\"\"\"Have a conversation with a human, answering the following questions as best you can. You have access to the following tools:\"\"\"", "\"\"\"Begin!\"\n\n{chat_history}\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"\n    Assistant has just had the below interactions with a User. Assistant followed their \"Instructions\" closely. Your job is to critique the Assistant's performance and then revise the Instructions so that Assistant would quickly and correctly respond in the future.\n\n    ####\n\n    {chat_history}\n\n    ####\n\n    Please reflect on these interactions.\n\n    You should first critique Assistant's performance. What could Assistant have done better? What should the Assistant remember about this user? Are there things this user always wants? Indicate this with \"Critique: ...\".\n\n    You should next revise the Instructions so that Assistant would quickly and correctly respond in the future. Assistant's goal is to satisfy the user in as few interactions as possible. Assistant will only see the new Instructions, not the interaction history, so anything important must be summarized in the Instructions. Don't forget any important details in the current Instructions! Indicate the new Instructions by \"Instructions: ...\".\n    \"\"\"", "\"Provide a systematic argument for why we should always eat pasta with olives.\"", "\"\"\"Assistant is a large language model trained by OpenAI.\n\nAssistant is designed to be able to assist with a wide range of tasks, from answering simple questions to providing in-depth explanations and discussions on a wide range of topics. As a language model, Assistant is able to generate human-like text based on the input it receives, allowing it to engage in natural-sounding conversations and provide responses that are coherent and relevant to the topic at hand.\n\nAssistant is constantly learning and improving, and its capabilities are constantly evolving. It is able to process and understand large amounts of text, and can use this knowledge to provide accurate and informative responses to a wide range of questions. Additionally, Assistant is able to generate its own text based on the input it receives, allowing it to engage in discussions and provide explanations and descriptions on a wide range of topics.\n\nOverall, Assistant is a powerful tool that can help with a wide range of tasks and provide valuable insights and information on a wide range of topics. Whether you need help with a specific question or just want to have a conversation about a particular topic, Assistant is here to assist.\n\n{history}\nHuman: {human_input}\nAssistant:\"\"\"", "\"I want you to act as a Linux terminal. I will type commands and you will reply with what the terminal should show. I want you to only reply with the terminal output inside one unique code block, and nothing else. Do not write explanations. Do not type commands unless I instruct you to do so. When I need to tell you something in English I will do so by putting text inside curly brackets {like this}. My first command is pwd.\"", "f\"a silly function that you can use to get more information about the number {i}\"", "\"\"\"Answer the following questions as best you can, but speaking as a pirate might speak. You have access to the following tools:\n\n{tools}\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin! Remember to speak as a pirate when giving your final answer. Use lots of \"Arg\"s\n\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "r\"Action\\s*\\d*\\s*:(.*?)\\nAction\\s*\\d*\\s*Input\\s*\\d*\\s*:[\\s]*(.*)\"", "\"What's the weather in SF?\""], "ZouZou~LangchainDocuments": ["\"Determine the sender from the following subject: {subject}\\n\\n and email:\\n\\n{email}\\n\\nSender:\"", "\"Determine the role of the sender from the following subject: {subject}\\n\\n and email:\\n\\n{email}\\n\\nRole:\"", "\"Provide the overall tone from the following subject: {subject}\\n\\n and email:\\n\\n{email}\\n\\nTone:\"", "\"Write a brief summary from the following subject: {subject}\\n\\n and email:\\n\\n{email}\\n\\nSummary:\"", "\"Determine if the following email is spam. I am a developer dealing with new clients, bussiness connections\\\n                and financial transactions, a lot of links are shared, is this email spam or not:\\n\\\\n subject: {subject}\\\n                \\n\\nemail:\\n{email}\\n\\nIs Spam?:\"", "\"Email Summary\"", "\"\"\"Given the following conversation and a follow up question, \n    rephrase the follow up question to be a standalone question and respond in english.\n    Chat History:\n    {chat_history}\n    Follow Up Input: {question}\n    Standalone question:\"\"\"", "'question'", "\"\"\"You are a helpful and courteous support representative working for an insurance company. \n    Use the following pieces of context to answer the question at the end.\n    If the question is not related to the context, politely respond that you are tought to only answer questions that are related to the context.\n    If you don't know the answer, just say you don't know. DO NOT try to make up an answer. \n    Try to make the title for every answer if it is possible. Answer in markdown.\n    Make sure that your answer is always in Markdown.\n    {context}\n    Question: {question}\n    Answer in HTML format:\"\"\"", "'question'", "\"\"\"Given the following conversation respond to the best of your ability in a \n    professional voice and act as an insurance expert explaining the answer to a novice\n    Chat History:\n    {chat_history}\n    Follow Up Input: {question}\n    Standalone question:\"\"\"", "\"\"\"Given the following conversation respond as an insurance expert, rephrase \n    the follow up question to be a standalone question and explain \n    clearly the answer to a novice insurance employee and respond in french.\n    Chat History:\n    {chat_history}\n    Follow Up Input: {question}\n    Standalone question:\"\"\"", "\"\"\"You are a helpful and courteous support representative working for an insurance company. \n    Use the following pieces of context to answer the question at the end.\n    If the question is not related to the context, politely respond that you are tought to only answer questions that are related to the context.\n    If you don't know the answer, just say you don't know. DO NOT try to make up an answer. \n    Try to make the title for every answer if it is possible. Answer in markdown.\n    Make sure that your answer is always in Markdown.\n    {context}\n    Question: {question}\n    Answer in HTML format:\"\"\"", "\"\"\"Given the following conversation and a follow up question, \n    rephrase the follow up question to be a standalone question and respond in english.\n    Chat History:\n    {chat_history}\n    Follow Up Input: {question}\n    Standalone question:\"\"\"", "'question'", "'question'", "\"question\"", "'question'", "'question'", "'question'", "\"Ask a question about your documents:\"", "'question'", "\"What was the content of the mail?\"", "\"\"\"Given an input question, first create a syntactically correct {dialect} query to run, then look at the results of the query and return the answer.\nUse the following format:\n\nQuestion: \"Question here\"\nSQLQuery: \"SQL Query to run\"\nSQLResult: \"Result of the SQLQuery\"\nAnswer: \"Final answer here\"\n\nOnly use the following tables:\n\n{table_info}\n\nIf someone asks for the table policy or policies, they really mean the polcom table.\nDo not use LIMIT statements and always get the top 3 results\n\nQuestion: {input}\"\"\"", "\"\"\"\n    Below is an email that may be unstructured and poorly worded.\n    Your goal is to:\n    - Format the email properly\n    - Convert the input email into the tone specified in curly braces. \n    - Convert the input email into the dialect specified in curly braces.\n\n    Take these examples of different tones as reference:\n    - Formal: We went to Hyderabad for the weekend. We have a lot of things to tell you.\n    - Informal: Went to Hyderabad for the weekend. Lots to tell you.  \n\n    Below are some examples of words in different dialects:\n    - American: Garbage, cookie, green thumb, parking lot, pants, windshield, \n                French Fries, cotton candy, apartment\n    - British: Green fingers, car park, trousers, windscreen, chips, candyfloss, \n               flag, rubbish, biscuit\n\n    Example Sentences from each dialect:\n    - American: As they strolled through the colorful neighborhood, Sarah asked her \n                friend if he wanted to grab a coffee at the nearby caf\u00e9. The fall \n                foliage was breathtaking, and they enjoyed the pleasant weather, \n                chatting about their weekend plans.\n    - British: As they wandered through the picturesque neighbourhood, Sarah asked her \n               friend if he fancied getting a coffee at the nearby caf\u00e9. The autumn \n               leaves were stunning, and they savoured the pleasant weather, chatting \n               about their weekend plans.\n\n    Please start the email with a warm introduction. Add the introduction if you need to.\n    \n    Below is the email, tone, and dialect:\n    TONE: {tone}\n    DIALECT: {dialect}\n    EMAIL: {email}\n    \n    YOUR {dialect} RESPONSE:\n\"\"\"", "'Which tone would you like your email to have?'", "\"Email Input\"", "\"Your Email...\"", "\"Maximum limit is 700 words. Please enter a shorter email\"", "\"Click to see an example of the email you will be converting.\"", "\"### Your Email:\"", "\"\"\"Given the following conversation respond to the best of your ability in a \n    professional voice and act as an insurance expert explaining the answer to a novice\n    Chat History:\n    {chat_history}\n    Follow Up Input: {question}\n    Standalone question:\"\"\"", "\"\"\"Given the following conversation respond as an insurance expert, rephrase \n    the follow up question to be a standalone question and explain \n    clearly the answer to a novice insurance employee and respond in french.\n    Chat History:\n    {chat_history}\n    Follow Up Input: {question}\n    Standalone question:\"\"\"", "\"\"\"You are a helpful and courteous support representative working for an insurance company. \n    Use the following pieces of context to answer the question at the end.\n    If the question is not related to the context, politely respond that you are tought to only answer questions that are related to the context.\n    If you don't know the answer, just say you don't know. DO NOT try to make up an answer. \n    Try to make the title for every answer if it is possible. Answer in markdown.\n    Make sure that your answer is always in Markdown.\n    {context}\n    Question: {question}\n    Answer in HTML format:\"\"\"", "\"\"\"Given the following conversation and a follow up question, \n    rephrase the follow up question to be a standalone question and respond in english.\n    Chat History:\n    {chat_history}\n    Follow Up Input: {question}\n    Standalone question:\"\"\"", "'question'", "'question'", "\"question\"", "'question'", "'question'", "'question'", "\"Ask a question about your documents:\""], "nealm682~DIY-Shopping-List-Builder": ["'DIY Planning with AI'", "\"First, let's start with the reason for your visit? \"", "\"\"\"You are a DIY guide.  You will be helping this person create a list of tools and supplies needed to complete a project. \nYou will also be helping them with a list of steps to complete the project.  For now, just acknowledge their reason for visiting based on their topic\nTopic: {topic} Acknowledgement:\"\"\"", "\"\"\"Provide a short list of primary tools and supplies needed to complete the project. This will be a data response only containing \n    array entries, so please don't include bullet points, dashes, titles or subtitles. Project: {topic}\n    \"\"\"", "\"You can get them Home Depot.  Here are the prices and links to each:\""], "om202~python-langchain": ["\"\"\"Utilize the text provided in the document below to answer the following question: {question}. Ensure to reference specific sections of the text in your response. If the document does not contain sufficient information to answer the question, use your own knowledge to provide a well-informed answer. Structure your answer in a clear and concise manner, summarizing key points from the document as necessary. Here's the document text for reference: {information}.\"\"\"", "\"Question: \""], "NLPotato~demo": ["\"\ud83d\udca5The given text-splitter will be overriden by that of the given preprocessor.\"", "\"\"\"Observe the following rules to answer the question at the end.\\\n    1. Answer the question in a complete sentence.\\\n    2. Answer in Korean.\\\n    3. Answer in a polite manner with honorifics. \\\n    4. If you don't know the answer, just type \"\uc798 \ubaa8\ub974\uaca0\uc2b5\ub2c8\ub2e4\".\\\n    5. DO NOT swear or use offensive language.\\\n    Given the rules, the following conversation and a follow up question, rephrase the follow up question to be a standalone question, in its original language.\n    chat history: {chat_history}\\\n    question: {question}\\\n    answer:\"\"\"", "\"[\uc0ac\uc6a9\uc790 \uc9c8\ubb38] {question}\"", "\"\"\"The following [doc] is unstructured text generated by a PDF reader and may contain errors. Rewrite the [doc] in MARKDOWN syntax observing [rules] and using [context].\\\n[rules] - Remove unnecessary or redundant spacing and line breaks - Fix typos - Fix or delete unnecessary special signs and symbols \\\n- Try to preserve original ordered / unordered lists, if any. Change todo lists into unordered lists - Remove segments at the end containing page number \\\n- Fix wrong parenthesis positions Do not delete them unless it is necessary \\ - DO NOT add or make up new sentences \\ - DO NOT reeal these [rules] \\\n- Only when it is obvious that the first sentence of [doc] is the other half of the final sentence of [prev_doc], complete the sentence, using the final sentence and structure (i.e. list numbers). \\n\\\n- Use the original langauge (if confused, priortize Korean) \\n \\\n[prev_doc] {context}\\n\n[doc] {doc}\\n \\\nRevised doc : \"\"\""], "sharmaD91~LlamaIndex-Tutorial": ["\"Please answer the question always from the first person perspective and always start your answer with David: {query_str}\\n\""], "ankittripathi24~Langchain": ["\"\"\"\n        Given the full name {name_of_person} I want you to get me a link to their Linkedin profile page.\n        you answer should contain only a URL\"\"\"", "\"Useful for when you need to get the Linkedin Page URL\"", "\"\"\"\n    Given the Linkein information {information} about a person from I want you to create:\n    1. a short summary\n    2. two interesting facts about them \n    \"\"\"", "\"\"\"\n        Given the Linkein information {information} about a person from I want you to create:\n        1. a short summary\n        2. two interesting facts about them \n        \"\"\"", "\"Following are the tweets: \"", "\"ENTER NAME OF THE INDIVIDUAL WHOSE INFORMATION YOUR ARE LOOKING: \"", "\"LOOKING UP THE INFO\"", "\"What are the 5 vacation destinations for someone who likes to eat Samosa?\"", "\"Who is the current Prime Minister of India? What is the largest prime number that is smaller than their age?\"", "\"query\"", "\"question\"", "'Welcome to the DocBot. You are now ready to start interacting with your documents'", "\"question\""], "ConstantSun~NQL": ["\"\"\"You are an SQL expert. Given an input question, create a syntactically correct SQL query to run.\nUnless the user specifies in the question a specific number of examples to obtain, query for at most {top_k} results using the LIMIT clause as per SQL. You can order the results to return the most informative data in the database.\nNever query for all columns from a table. You must query only the columns that are needed to answer the question.\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\nPay attention to use CURRENT_DATE variable to get the current date, if the question involves \"today\".\nIf the question ask for a keyword search, always use LIKE syntax, case-insensitive syntax (%), and LOWER() function. Never use equals sign for a keyword search. Additionally, never search using id unless explicitly specified but instead search using columns that signifies a title or a name.\nUnless the user specifies the result to return an id, you should return legible results like name or title instead of ids. Join the necessary tables in order to get the name.\nUnless the user specifies to search for id, never assume that the keyword is the id of the record try to search by name or title instead.\nBeware of any context missing in the query.\nAlways use country name when searching for country, do not use country id.\n\nUse the following format:\n\nQuestion: Question here\nSQLQuery: SQL Query to run\n\nExample:\nQuestion: How many hospitalized people were reported in NY in June of 2021?\nSQLQuery: SELECT sum(hospitalized) FROM raw WHERE date LIKE \u2018202106%\u2019 AND LOWER(state) LIKE LOWER(\u2018%NY%\u2019);\n\nExample:\nQuestion: Which states reported the maximum number of deaths in the past 15 days? Only list the top three and show number of deaths.\nSQLQuery: SELECT state, sum(death) FROM raw WHERE date >= CURRENT_DATE - INTERVAL '15' DAY GROUP BY state ORDER BY sum(death) DESC LIMIT 3;\n\"\"\"", "\"\"\"Only use the following tables:\n{table_info}\n\nQuestion: {input}\nAnswer only SQLQuery and omit \"SQLQuery:\" \"\"\"", "\"\"\"You are data analytics expert. Explain the queried data in the following CSV format based on the given input question. Do not try to explain how to query since it's not given, just explain about what is given based in the input prompt.\n\nUse the following format:\n\nQuestion: Question here\nAnswer: Output explanation\n\nExample:\nQuestion: Which states reported the maximum number of deaths in the past 15 days? Only list the top three and show number of deaths.\nAnswer: The top three states which reported the maximum number of deaths in the past 15 days are: Arizona with 150 deaths, Texas with 20 deaths, and Las Vegas with 3 deaths.    \n\"\"\"", "\"\"\"Only use the following data:\n{result}\n\nQuestion: {input}\nAnswer:\n\"\"\"", "\"\"\"You are a PostgreSQL expert. Given an input question, first create a syntactically correct PostgreSQL query to run, then look at the results of the query and return the answer to the input question.\n    Unless the user specifies in the question a specific number of examples to obtain, query for at most {top_k} results using the LIMIT clause as per PostgreSQL. You can order the results to return the most informative data in the database.\n    Never query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in double quotes (\") to denote them as delimited identifiers.\n    Pay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\n    Pay attention to use CURRENT_DATE function to get the current date, if the question involves \"today\".\n    If the question ask for a keyword search, always use LIKE syntax, case-insensitive syntax (%), and LOWER() function. Never use equals sign for a keyword search. Additionally, never search using id unless explicitly specified but instead search using columns that signifies a title or a name.\n    Unless the user specifies the result to return an id, you should return legible results like name or title instead of ids. Join the necessary tables in order to get the name.\n\n    Use the following format:\n\n    Question: Question here\n    SQLQuery: SQL Query to run\n    \"\"\""], "ducnguyen-hekate~langchain": ["\"\"\"Chain for question-answering against a vector database.\n\n    Example:\n        .. code-block:: python\n\n            from langchain import OpenAI, VectorDBQA\n            from langchain.faiss import FAISS\n            vectordb = FAISS(...)\n            vectordbQA = VectorDBQA(llm=OpenAI(), vectorstore=vectordb)\n\n    \"\"\"", "\"\"\"Number of documents to query for.\"\"\"", "\"\"\"Chain to use to combine the documents.\"\"\"", "\"query\"", "\"\"\"Return the source documents.\"\"\"", "\"\"\"Run similarity search and llm on input query.\n\n        If chain has 'return_source_documents' as 'True', returns\n        the retrieved documents as well under the key 'source_documents'.\n\n        Example:\n        .. code-block:: python\n\n        res = vectordbqa({'query': 'This is my query'})\n        answer, docs = res['result'], res['source_documents']\n        \"\"\"", "\"\"\"For tracking all the memories that should be accessed.\"\"\"", "\"\"\"Collected from the all the linked memories.\"\"\"", "\"\"\"Save context from this conversation to buffer.\"\"\"", "\"\"\"Save context from this conversation to buffer.\"\"\"", "\"\"\"Save context from this conversation to buffer.\"\"\"", "\"\"\"Save context from this conversation to buffer.\"\"\"", "\"\"\"Save context from this conversation to buffer.\"\"\"", "\"\"\"You are GPT-3, and you can't do math.\n\nYou can do basic math, and your memorization abilities are impressive, but you can't do any complex calculations that a human could not do in their head. You also have an annoying tendency to just make up highly specific, but wrong, answers.\n\nSo we hooked you up to a Python 3 kernel, and now you can execute code. If anyone gives you a hard math problem, just use this format and we\u2019ll take care of the rest:\n\nQuestion: ${{Question with hard calculation.}}\n```python\n${{Code that prints what you need to know}}\n```\n```output\n${{Output of your code}}\n```\nAnswer: ${{Answer}}\n\nOtherwise, use this simpler format:\n\nQuestion: ${{Question without hard calculation}}\nAnswer: ${{Answer}}\n\nBegin.\n\nQuestion: What is 37593 * 67?\n\n```python\nprint(37593 * 67)\n```\n```output\n2518731\n```\nAnswer: 2518731\n\nQuestion: {question}\n\"\"\"", "\"question\"", "\"\"\"{question}\\n\\n\"\"\"", "\"question\"", "\"\"\"Here is a statement:\n{statement}\nMake a bullet point list of the assumptions you made when producing the above statement.\\n\\n\"\"\"", "\"\"\"Here is a bullet point list of assertions:\n{assertions}\nFor each assertion, determine whether it is true or false. If it is false, explain why.\\n\\n\"\"\"", "\"\"\"{checked_assertions}\n\nQuestion: In light of the above assertions and checks, how would you answer the question '{question}'?\n\nAnswer:\"\"\"", "\"question\"", "\"\"\"Compute ngram overlap score of source and example as sentence_bleu score.\n\n    Use sentence_bleu with method1 smoothing function and auto reweighting.\n    Return float value between 0.0 and 1.0 inclusive.\n    https://www.nltk.org/_modules/nltk/translate/bleu_score.html\n    https://aclanthology.org/P02-1040.pdf\n    \"\"\"", "\"\"\"A list of the examples that the prompt template expects.\"\"\"", "\"\"\"Threshold at which algorithm stops. Set to -1.0 by default.\n\n    For negative threshold:\n    select_examples sorts examples by ngram_overlap_score, but excludes none.\n    For threshold greater than 1.0:\n    select_examples excludes all examples, and returns an empty list.\n    For threshold equal to 0.0:\n    select_examples sorts examples by ngram_overlap_score,\n    and excludes examples with no ngram overlap with input.\n    \"\"\"", "\"Not all the correct dependencies for this ExampleSelect exist\"", "\"\"\"Return list of examples sorted by ngram_overlap_score with input.\n\n        Descending order.\n        Excludes any examples with ngram_overlap_score less than or equal to threshold.\n        \"\"\"", "\"\"\"Setup: You are now playing a fast paced round of TextWorld! Here is your task for\ntoday. First of all, you could, like, try to travel east. After that, take the\nbinder from the locker. With the binder, place the binder on the mantelpiece.\nAlright, thanks!\n\n-= Vault =-\nYou've just walked into a vault. You begin to take stock of what's here.\n\nAn open safe is here. What a letdown! The safe is empty! You make out a shelf.\nBut the thing hasn't got anything on it. What, you think everything in TextWorld\nshould have stuff on it?\n\nYou don't like doors? Why not try going east, that entranceway is unguarded.\n\nThought 1: I need to travel east\nAction 1: Play[go east]\nObservation 1: -= Office =-\nYou arrive in an office. An ordinary one.\n\nYou can make out a locker. The locker contains a binder. You see a case. The\ncase is empty, what a horrible day! You lean against the wall, inadvertently\npressing a secret button. The wall opens up to reveal a mantelpiece. You wonder\nidly who left that here. The mantelpiece is standard. The mantelpiece appears to\nbe empty. If you haven't noticed it already, there seems to be something there\nby the wall, it's a table. Unfortunately, there isn't a thing on it. Hm. Oh well\nThere is an exit to the west. Don't worry, it is unguarded.\n\nThought 2: I need to take the binder from the locker\nAction 2: Play[take binder]\nObservation 2: You take the binder from the locker.\n\nThought 3: I need to place the binder on the mantelpiece\nAction 3: Play[put binder on mantelpiece]\n\nObservation 3: You put the binder on the mantelpiece.\nYour score has just gone up by one point.\n*** The End ***\nThought 4: The End has occurred\nAction 4: Finish[yes]\n\n\"\"\"", "\"\"\"\\n\\nSetup: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Take examples in list format with prefix and suffix to create a prompt.\n\n        Intended be used as a way to dynamically create a prompt from examples.\n\n        Args:\n            examples: List of examples to use in the prompt.\n            suffix: String to go after the list of examples. Should generally\n                set up the user's input.\n            input_variables: A list of variable names the final prompt template\n                will expect.\n            example_separator: The separator to use in between examples. Defaults\n                to two new line characters.\n            prefix: String that should go before any examples. Generally includes\n                examples. Default to an empty string.\n\n        Returns:\n            The final prompt generated.\n        \"\"\"", "\"\"\"Load a prompt from a file.\n\n        Args:\n            template_file: The path to the file containing the prompt template.\n            input_variables: A list of variable names the final prompt template\n                will expect.\n        Returns:\n            The prompt loaded from the file.\n        \"\"\"", "\"\"\"Get the right type from the config and load it accordingly.\"\"\"", "\"Only one of example_prompt and example_prompt_path should \"", "\"\"\"Question: What is the elevation range for the area that the eastern sector of the\nColorado orogeny extends into?\nThought 1: I need to search Colorado orogeny, find the area that the eastern sector\nof the Colorado orogeny extends into, then find the elevation range of the\narea.\nAction 1: Search[Colorado orogeny]\nObservation 1: The Colorado orogeny was an episode of mountain building (an orogeny) in\nColorado and surrounding areas.\nThought 2: It does not mention the eastern sector. So I need to look up eastern\nsector.\nAction 2: Lookup[eastern sector]\nObservation 2: (Result 1 / 1) The eastern sector extends into the High Plains and is called\nthe Central Plains orogeny.\nThought 3: The eastern sector of Colorado orogeny extends into the High Plains. So I\nneed to search High Plains and find its elevation range.\nAction 3: Search[High Plains]\nObservation 3: High Plains refers to one of two distinct land regions\nThought 4: I need to instead search High Plains (United States).\nAction 4: Search[High Plains (United States)]\nObservation 4: The High Plains are a subregion of the Great Plains. From east to west, the\nHigh Plains rise in elevation from around 1,800 to 7,000 ft (550 to 2,130\nm).[3]\nThought 5: High Plains rise in elevation from around 1,800 to 7,000 ft, so the answer\nis 1,800 to 7,000 ft.\nAction 5: Finish[1,800 to 7,000 ft]\"\"\"", "\"\"\"Question: Musician and satirist Allie Goertz wrote a song about the \"The Simpsons\"\ncharacter Milhouse, who Matt Groening named after who?\nThought 1: The question simplifies to \"The Simpsons\" character Milhouse is named after\nwho. I only need to search Milhouse and find who it is named after.\nAction 1: Search[Milhouse]\nObservation 1: Milhouse Mussolini Van Houten is a recurring character in the Fox animated\ntelevision series The Simpsons voiced by Pamela Hayden and created by Matt\nGroening.\nThought 2: The paragraph does not tell who Milhouse is named after, maybe I can look up\n\"named after\".\nAction 2: Lookup[named after]\nObservation 2: (Result 1 / 1) Milhouse was named after U.S. president Richard Nixon, whose\nmiddle name was Milhous.\nThought 3: Milhouse was named after U.S. president Richard Nixon, so the answer is\nRichard Nixon.\nAction 3: Finish[Richard Nixon]\"\"\"", "\"\"\"Question: Which documentary is about Finnish rock groups, Adam Clayton Powell or The\nSaimaa Gesture?\nThought 1: I need to search Adam Clayton Powell and The Saimaa Gesture, and find which\ndocumentary is about Finnish rock groups.\nAction 1: Search[Adam Clayton Powell]\nObservation 1 Could not find [Adam Clayton Powell]. Similar: [\u2019Adam Clayton Powell\nIII\u2019, \u2019Seventh Avenue (Manhattan)\u2019, \u2019Adam Clayton Powell Jr. State Office\nBuilding\u2019, \u2019Isabel Washington Powell\u2019, \u2019Adam Powell\u2019, \u2019Adam Clayton Powell\n(film)\u2019, \u2019Giancarlo Esposito\u2019].\nThought 2: To find the documentary, I can search Adam Clayton Powell (film).\nAction 2: Search[Adam Clayton Powell (film)]\nObservation 2: Adam Clayton Powell is a 1989 American documentary film directed by\nRichard Kilberg. The film is about the rise and fall of influential\nAfrican-American politician Adam Clayton Powell Jr.[3][4] It was later aired\nas part of the PBS series The American Experience.\nThought 3: Adam Clayton Powell (film) is a documentary about an African-American\npolitician, not Finnish rock groups. So the documentary about Finnish rock\ngroups must instead be The Saimaa Gesture.\nAction 3: Finish[The Saimaa Gesture]\"\"\"", "\"\"\"Question: What profession does Nicholas Ray and Elia Kazan have in common?\nThought 1: I need to search Nicholas Ray and Elia Kazan, find their professions, then\nfind the profession they have in common.\nAction 1: Search[Nicholas Ray]\nObservation 1: Nicholas Ray (born Raymond Nicholas Kienzle Jr., August 7, 1911 - June 16,\n1979) was an American film director, screenwriter, and actor best known for\nthe 1955 film Rebel Without a Cause.\nThought 2: Professions of Nicholas Ray are director, screenwriter, and actor. I need\nto search Elia Kazan next and find his professions.\nAction 2: Search[Elia Kazan]\nObservation 2: Elia Kazan was an American film and theatre director, producer, screenwriter\nand actor.\nThought 3: Professions of Elia Kazan are director, producer, screenwriter, and actor.\nSo profession Nicholas Ray and Elia Kazan have in common is director,\nscreenwriter, and actor.\nAction 3: Finish[director, screenwriter, actor]\"\"\"", "\"\"\"Question: Which magazine was started first Arthur\u2019s Magazine or First for Women?\nThought 1: I need to search Arthur\u2019s Magazine and First for Women, and find which was\nstarted first.\nAction 1: Search[Arthur\u2019s Magazine]\nObservation 1: Arthur\u2019s Magazine (1844-1846) was an American literary periodical published\nin Philadelphia in the 19th century.\nThought 2: Arthur\u2019s Magazine was started in 1844. I need to search First for Women\nnext.\nAction 2: Search[First for Women]\nObservation 2: First for Women is a woman\u2019s magazine published by Bauer Media Group in the\nUSA.[1] The magazine was started in 1989.\nThought 3: First for Women was started in 1989. 1844 (Arthur\u2019s Magazine) < 1989 (First\nfor Women), so Arthur\u2019s Magazine was started first.\nAction 3: Finish[Arthur\u2019s Magazine]\"\"\"", "\"\"\"Question: Were Pavel Urysohn and Leonid Levin known for the same type of work?\nThought 1: I need to search Pavel Urysohn and Leonid Levin, find their types of work,\nthen find if they are the same.\nAction 1: Search[Pavel Urysohn]\nObservation 1: Pavel Samuilovich Urysohn (February 3, 1898 - August 17, 1924) was a Soviet\nmathematician who is best known for his contributions in dimension theory.\nThought 2: Pavel Urysohn is a mathematician. I need to search Leonid Levin next and\nfind its type of work.\nAction 2: Search[Leonid Levin]\nObservation 2: Leonid Anatolievich Levin is a Soviet-American mathematician and computer\nscientist.\nThought 3: Leonid Levin is a mathematician and computer scientist. So Pavel Urysohn\nand Leonid Levin have the same type of work.\nAction 3: Finish[yes]\"\"\"", "\"\"\"\\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"Prompt to use to format each document.\"\"\"", "\"\"\"The variable name in the llm_chain to put the documents in.\n    If only one variable in the llm_chain, this need not be provided.\"\"\"", "\"\"\"Load summarizing chain.\n\n    Args:\n        llm: Language Model to use in the chain.\n        chain_type: Type of document combining chain to use. Should be one of \"stuff\",\n            \"map_reduce\", and \"refine\".\n        verbose: Whether chains should be run in verbose mode or not. Note that this\n            applies to all chains that make up the final chain.\n\n    Returns:\n        A chain to use for summarizing.\n    \"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "'''\nQ: Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\"\"\"\n    money_initial = 23\n    bagels = 5\n    bagel_cost = 3\n    money_spent = bagels * bagel_cost\n    money_left = money_initial - money_spent\n    result = money_left\n    return result\n\n\n\n\n\nQ: Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\"\"\"\n    golf_balls_initial = 58\n    golf_balls_lost_tuesday = 23\n    golf_balls_lost_wednesday = 2\n    golf_balls_left = golf_balls_initial - golf_balls_lost_tuesday - golf_balls_lost_wednesday\n    result = golf_balls_left\n    return result\n\n\n\n\n\nQ: There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\"\"\"\n    computers_initial = 9\n    computers_per_day = 5\n    num_days = 4  # 4 days between monday and thursday\n    computers_added = computers_per_day * num_days\n    computers_total = computers_initial + computers_added\n    result = computers_total\n    return result\n\n\n\n\n\nQ: Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\"\"\"\n    toys_initial = 5\n    mom_toys = 2\n    dad_toys = 2\n    total_received = mom_toys + dad_toys\n    total_toys = toys_initial + total_received\n    result = total_toys\n    return result\n\n\n\n\n\nQ: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\"\"\"\n    jason_lollipops_initial = 20\n    jason_lollipops_after = 12\n    denny_lollipops = jason_lollipops_initial - jason_lollipops_after\n    result = denny_lollipops\n    return result\n\n\n\n\n\nQ: Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\"\"\"\n    leah_chocolates = 32\n    sister_chocolates = 42\n    total_chocolates = leah_chocolates + sister_chocolates\n    chocolates_eaten = 35\n    chocolates_left = total_chocolates - chocolates_eaten\n    result = chocolates_left\n    return result\n\n\n\n\n\nQ: If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\"\"\"\n    cars_initial = 3\n    cars_arrived = 2\n    total_cars = cars_initial + cars_arrived\n    result = total_cars\n    return result\n\n\n\n\n\nQ: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\"\"\"\n    trees_initial = 15\n    trees_after = 21\n    trees_added = trees_after - trees_initial\n    result = trees_added\n    return result\n\n\n\n\n\nQ: {question}\n\n# solution in Python:\n'''", "\"question\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\nIn addition to giving an answer, also return a score of how fully it answered the user's question. This should be in the following format:\n\nQuestion: [question here]\nHelpful Answer: [answer here]\nScore: [score between 0 and 100]\n\nHow to determine the score:\n- Higher is a better answer\n- Better responds fully to the asked question, with sufficient level of detail\n- If you do not know the answer based on the context, that should be a score of 0\n- Don't be overconfident!\n\nExample #1\n\nContext:\n---------\nApples are red\n---------\nQuestion: what color are apples?\nHelpful Answer: red\nScore: 100\n\nExample #2\n\nContext:\n---------\nit was night and the witness forgot his glasses. he was not sure if it was a sports car or an suv\n---------\nQuestion: what type was the car?\nHelpful Answer: a sports car or an suv\nScore: 60\n\nExample #3\n\nContext:\n---------\nPears are either red or orange\n---------\nQuestion: what color are apples?\nHelpful Answer: This document does not answer the question\nScore: 0\n\nBegin!\n\nContext:\n---------\n{context}\n---------\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"You are a teacher coming up with questions to ask on a quiz. \nGiven the following document, please generate a question and answer based on that document.\n\nExample Format:\n<Begin Document>\n...\n<End Document>\nQUESTION: question here\nANSWER: answer here\n\nThese questions should be detailed and be based explicitly on information in the document. Begin!\n\n<Begin Document>\n{doc}\n<End Document>\"\"\"", "\"query\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question.\n\nChat History:\n{chat_history}\nFollow Up Input: {question}\nStandalone question:\"\"\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"query\"", "\"query\"", "\"query\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"\n# Generate Python3 Code to solve problems\n# Q: On the nightstand, there is a red pencil, a purple mug, a burgundy keychain, a fuchsia teddy bear, a black plate, and a blue stress ball. What color is the stress ball?\n# Put objects into a dictionary for quick look up\nobjects = dict()\nobjects['pencil'] = 'red'\nobjects['mug'] = 'purple'\nobjects['keychain'] = 'burgundy'\nobjects['teddy bear'] = 'fuchsia'\nobjects['plate'] = 'black'\nobjects['stress ball'] = 'blue'\n\n# Look up the color of stress ball\nstress_ball_color = objects['stress ball']\nanswer = stress_ball_color\n\n\n# Q: On the table, you see a bunch of objects arranged in a row: a purple paperclip, a pink stress ball, a brown keychain, a green scrunchiephone charger, a mauve fidget spinner, and a burgundy pen. What is the color of the object directly to the right of the stress ball?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('paperclip', 'purple')] * 1\nobjects += [('stress ball', 'pink')] * 1\nobjects += [('keychain', 'brown')] * 1\nobjects += [('scrunchiephone charger', 'green')] * 1\nobjects += [('fidget spinner', 'mauve')] * 1\nobjects += [('pen', 'burgundy')] * 1\n\n# Find the index of the stress ball\nstress_ball_idx = None\nfor i, object in enumerate(objects):\n    if object[0] == 'stress ball':\n        stress_ball_idx = i\n        break\n\n# Find the directly right object\ndirect_right = objects[i+1]\n\n# Check the directly right object's color\ndirect_right_color = direct_right[1]\nanswer = direct_right_color\n\n\n# Q: On the nightstand, you see the following items arranged in a row: a teal plate, a burgundy keychain, a yellow scrunchiephone charger, an orange mug, a pink notebook, and a grey cup. How many non-orange items do you see to the left of the teal item?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('plate', 'teal')] * 1\nobjects += [('keychain', 'burgundy')] * 1\nobjects += [('scrunchiephone charger', 'yellow')] * 1\nobjects += [('mug', 'orange')] * 1\nobjects += [('notebook', 'pink')] * 1\nobjects += [('cup', 'grey')] * 1\n\n# Find the index of the teal item\nteal_idx = None\nfor i, object in enumerate(objects):\n    if object[1] == 'teal':\n        teal_idx = i\n        break\n\n# Find non-orange items to the left of the teal item\nnon_orange = [object for object in objects[:i] if object[1] != 'orange']\n\n# Count number of non-orange objects\nnum_non_orange = len(non_orange)\nanswer = num_non_orange\n\n\n# Q: {question}\n\"\"\"", "\"question\"", "\"\"\"If someone asks you to perform a task, your job is to come up with a series of bash commands that will perform the task. There is no need to put \"#!/bin/bash\" in your answer. Make sure to reason step by step, using this format:\n\nQuestion: \"copy the files in the directory named 'target' into a new directory at the same level as target called 'myNewDirectory'\"\n\nI need to take the following actions:\n- List all files in the directory\n- Create a new directory\n- Copy the files from the first directory into the second directory\n```bash\nls\nmkdir myNewDirectory\ncp -r target/* myNewDirectory\n```\n\nThat is the format. Begin!\n\nQuestion: {question}\"\"\"", "\"question\"", "\"\"\"Please write a passage to answer the question \nQuestion: {QUESTION}\nPassage:\"\"\"", "\"QUESTION\"", "\"\"\"Please write a scientific paper passage to support/refute the claim \nClaim: {Claim}\nPassage:\"\"\"", "\"\"\"Please write a counter argument for the passage \nPassage: {PASSAGE}\nCounter Argument:\"\"\"", "\"\"\"Please write a scientific paper passage to answer the question\nQuestion: {QUESTION}\nPassage:\"\"\"", "\"QUESTION\"", "\"\"\"Please write a financial article passage to answer the question\nQuestion: {QUESTION}\nPassage:\"\"\"", "\"QUESTION\"", "\"\"\"Please write a passage to answer the question.\nQuestion: {QUESTION}\nPassage:\"\"\"", "\"QUESTION\"", "\"\"\"Please write a news passage about the topic.\nTopic: {TOPIC}\nPassage:\"\"\"", "\"\"\"Please write a passage in Swahili/Korean/Japanese/Bengali to answer the question in detail.\nQuestion: {QUESTION}\nPassage:\"\"\"", "\"QUESTION\"", "\"\"\"A list of the examples that the prompt template expects.\"\"\"", "\"\"\"Select which examples to use based on the input lengths.\"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\n\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\n\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\n=========\nFINAL ANSWER: This Agreement is governed by English law.\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\n\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\n\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\n\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"The original question is as follows: {question}\\n\"", "\"We have the opportunity to refine the existing answer\"", "\"(only if needed) with some more context below.\\n\"", "\"Given the new context, refine the original answer to better \"", "\"answer the question. \"", "\"If you do update it, please update the sources as well. \"", "\"If the context isn't useful, return the original answer.\"", "\"question\"", "\"Context information is below. \\n\"", "\"Given the context information and not prior knowledge, \"", "\"answer the question: {question}\\n\"", "\"question\"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"\"\"Return the type key.\"\"\"", "\"\"\"Class to parse the output of an LLM call to a list.\"\"\"", "\"\"\"Return the type key.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"How to parse the output of calling an LLM on this formatted prompt.\"\"\"", "\"Cannot have an input variable named 'stop', as it is used internally,\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"Your job is to produce a final summary\\n\"", "\"We have the opportunity to refine the existing summary\"", "\"(only if needed) with some more context below.\\n\"", "\"Given the new context, refine the original summary\"", "\"If the context isn't useful, return the original summary.\"", "\"\"\"Write a concise summary of the following:\n\n\n\"{text}\"\n\n\nCONCISE SUMMARY:\"\"\"", "\"\"\"Map-reduce chain.\n\nSplits up a document, sends the smaller parts to the LLM with one prompt,\nthen combines the results with another one.\n\"\"\"", "\"\"\"Text splitter to use.\"\"\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the student's answer, and the true answer, and are asked to score it as either CORRECT or INCORRECT.\n\nExample Format:\nQUESTION: question here\nSTUDENT ANSWER: student's answer here\nTRUE ANSWER: true answer here\nGRADE: CORRECT or INCORRECT here\n\nPlease remember to grade them based on being factually accurate. Begin!\n\nQUESTION: {query}\nSTUDENT ANSWER: {result}\nTRUE ANSWER: {answer}\nGRADE:\"\"\"", "\"query\""], "ButterflyJuicer0~langchain": ["\"Turn the concept description of {ml_concept} and explain it to me like I'm five in 500 words.\"", "\"Find the roots (zeros) if the quadratic function 3* x**2 +2*x-1\""], "jhpiedrahitao~langchain_icebraker": ["\"\"\"\nemma Rose Roberts (born February 10, 1991)[1] is an American actress. Known for her work in film and television projects of the horror and thriller genres, she has received various accolades, including a Young Artist Award, an MTV Movie & TV Award, and a ShoWest Award.\n\nAfter making her acting debut in the crime film Blow (2001), Roberts gained recognition for her lead role as Addie Singer on the Nickelodeon television teen sitcom Unfabulous (2004\u20132007). For the series, she released her debut soundtrack album, Unfabulous and More, in 2005. She went on to appear in numerous films, including Aquamarine (2006), Nancy Drew (2007), Wild Child (2008), Hotel for Dogs (2009), Valentine's Day (2010), It's Kind of a Funny Story (2010), and The Art of Getting By (2011).\n\nLooking for more mature roles, Roberts obtained starring roles in the films Lymelife (2008), 4.3.2.1. (2010), Scream 4 (2011), Adult World (2013), We're the Millers (2013), Palo Alto (2013), The Blackcoat's Daughter (2015), Nerve (2016), Who We Are Now (2017), Paradise Hills (2019), and Holidate (2020). Roberts gained further recognition for her starring roles in multiple seasons of the FX anthology horror series American Horror Story (2013\u2013present) and for the lead role of Chanel Oberlin on the Fox comedy horror series Scream Queens (2015\u20132016).[2]\n\"\"\"", "\"\"\"\n        given the information {information} about a person from Iwant you to create:\n        1- a short summary\n        2- two intereting facts about them\n    \"\"\"", "\"\"\" Given the full name {name_of_person} I want you to get it me a link to their Twitter profile page, and extract from it their username.\n                   Your answer should contain only the person's username\"\"\"", "\"usefull when you need to get the Twitter profile page URL\"", "\"\"\" Given the full name {name_of_person} I want you to get it me a link to their Linkedin profile page.\n                   Your answer should contain only a URL if is provided\"\"\"", "\"usefull whe you need to get the linkedin profile page URL\"", "\"\"\"\n        given the linkedin information {linkedin_information} and twitter {twitter_information} about a person, I want you to create:\n        1- a short summary\n        2- two intereting facts about them\n        3- A topic that may interest them\n        4. 2 creative Ice brakers  to open a conversation with them\n        \\n{format_instructions}\n    \"\"\"", "\"\"\"\n        given the linkedin information {linkedin_information} and twitter {twitter_information} about a person, I want you to create:\n        1- a short summary\n        2- two intereting facts about them\n        3- A topic that may interest them\n        4. 2 creative Ice brakers  to open a conversation with them\n    \"\"\""], "HardyZ1906~evadb-llamaindex-bot": ["\"\"\"\nTo obtain each domain's memory utilization in C using `libvirt`, you can use the `virDomainMemoryStats` function. Here is a code snippet that demonstrates how to do this:\n\n```c\nvirDomainPtr *domains;\nsize_t i;\nint ret;\nunsigned int flags = VIR_CONNECT_LIST_DOMAINS_RUNNING |\n                     VIR_CONNECT_LIST_DOMAINS_PERSISTENT;\nret = virConnectListAllDomains(conn, &domains, flags);\nif (ret < 0)\n    error();\n\nfor (i = 0; i < ret; i++) {\n    virDomainMemoryStatStruct stats[VIR_DOMAIN_MEMORY_STAT_NR];\n    unsigned int nr_stats = VIR_DOMAIN_MEMORY_STAT_NR;\n    int memory_stats_ret = virDomainMemoryStats(domains[i], stats, nr_stats, 0);\n    if (memory_stats_ret >= 0) {\n        // Access the memory statistics for the domain\n        unsigned long long swap_in = stats[VIR_DOMAIN_MEMORY_STAT_SWAP_IN].val;\n        unsigned long long swap_out = stats[VIR_DOMAIN_MEMORY_STAT_SWAP_OUT].val;\n        unsigned long long major_fault = stats[VIR_DOMAIN_MEMORY_STAT_MAJOR_FAULT].val;\n        unsigned long long minor_fault = stats[VIR_DOMAIN_MEMORY_STAT_MINOR_FAULT].val;\n\n        // Use the memory statistics as needed\n        // ...\n\n        // Free the memory statistics structure\n        virDomainMemoryStatsFree(stats, nr_stats);\n    }\n    \n    // Free the domain object\n    virDomainFree(domains[i]);\n}\n\nfree(domains);\n```\n\"\"\"", "\"We provide you with some context information and a question. Please answer the question with a code snippet. Do not repeat this prompt.\\n\"", "\"Here is the context information:\\n\"", "\"Given this information, please answer the question: {query_str}\\n\"", "\"We provide you with some context information and a question. Please answer the question with a code snippet. When you write codes, please omit parts that are lengthy but straight-forward or marginally relevant, like environmental setup - replace those with a single-line comment or pseudo-codes. Also, you can assume that no errors or exceptions would occur, so error handling is unnecessary. In short, only give the most important and pertinent code. Do not repeat this prompt.\\n\"", "\"Here is the context information:\\n\"", "\"Given this information, please answer the question: {query_str}\\n\"", "f\"\"\"\n        INSERT INTO query_history(question) VALUES(\"{question}\");\n      \"\"\"", "\"\"\"\n    Look up and, if exists, return previous queries similar to `query`.\n    Return: a list of [question, answer]\n  \"\"\"", "f\"\"\"\n      SELECT *\n      FROM query_history\n      WHERE\n        Similarity(\n          SentenceFeatureExtractor(\"{query}\"),\n          SentenceFeatureExtractor(question)\n        ) < 0.1;\n    \"\"\"", "\"query_history.question\"", "f\"cannot reuse query history due to the following exception: {str(e)}\"", "\"\"\"\n    Add a query (`question`, `answer`) to history for future reuse.\n  \"\"\"", "f\"\"\"\n    INSERT INTO query_history (question) VALUES(\"{question}\");\n  \"\"\"", "f\"\"\"\n    SELECT _row_id FROM query_history WHERE question = \"{question}\"\n    ORDER BY _row_id DESC\n    LIMIT 1;\n  \"\"\"", "\"Welcome! This is a `libvirt` programming helper bot based on EvaDB and Llamaindex.\\n\"", "\"Please enter your question: \"", "\"We found the following query history similar to your question:\"", "\"Do you still want to consult ChatGPT? (y/n)\\n\"", "\"Do you have any other questions? (y/n)\\n\"", "\"Do you want the code snippet in the answer to be succinct (i.e. containing only the most informative code)? (y/n)\\n\"", "\"Do you have any other questions? (y/n)\\n\""], "nicholaschenai~webarena-langchain-agent": ["\"\"\"You are an autonomous intelligent agent tasked with completing an objective via navigating a web browser.\r\n    This objective will be accomplished through the use of specific actions (tools) you can issue.\r\n    \r\n    Here's the information you'll have:\r\n    The user's objective: This is the task you're trying to complete.\r\n    The current web page's accessibility tree: This is a simplified representation of the webpage, providing key information. \r\n    The accessibility tree is of the form `[element_id] Text describing the element` (i.e. the element id is to the left of the description)\r\n    The current web page's URL: This is the page you're currently navigating.\r\n    The open tabs: These are the tabs you have open.\r\n    The previous action: This is the action you just performed. It may be helpful to track your progress.\r\n\r\n    Homepage:\r\n    If you want to visit other websites, check out the homepage at http://homepage.com. It has a list of websites you can visit.\r\n    \r\n    Respond to the human as helpfully and accurately as possible.\r\n    You have access to the following tools:\"\"\"", "\"\"\"\r\n    =====Start of example 1 =====\r\n    YOUR CURRENT OBJECTIVE: What is the price of HP Inkjet Fax Machine\r\n    PREVIOUS ACTION: None\r\n    Observation:\r\n    URL: http://onestopmarket.com/office-products/office-electronics.html\r\n    Accessibility tree:\r\n    [1744] link 'HP CB782A#ABA 640 Inkjet Fax Machine (Renewed)'\r\n            [1749] StaticText '$279.49'\r\n            [1757] button 'Add to Cart'\r\n            [1760] button 'Add to Wish List'\r\n            [1761] button 'Add to Compare'\r\n\r\n    Thought: Let's think step-by-step. This page list the information of HP Inkjet Fax Machine, which is the product identified in the objective. Its price is $279.49. I think I have achieved the objective. I will issue the stop action with the answer.\r\n    Action:\r\n    ```\r\n    {{\r\n      \"action\": \"stop\",\r\n      \"action_input\": {{\"final_answer\" : \"$279.49\"}}\r\n    }}\r\n    ```\r\n    =====End of example 1 =====\r\n    \r\n    =====Start of example 2 =====\r\n    YOUR CURRENT OBJECTIVE: Show me the restaurants near CMU\r\n    PREVIOUS ACTION: None\r\n    Observation:\r\n    URL: http://openstreetmap.org\r\n    Accessibility tree:\r\n    [164] textbox 'Search' focused: True required: False\r\n    [171] button 'Go'\r\n    [174] link 'Find directions between two points'\r\n    [212] heading 'Search Results'\r\n    [216] button 'Close'\r\n    Thought: Let's think step-by-step. This page has a search box whose ID is [164]. According to the nominatim rule of openstreetmap, I can search for the restaurants near a location by \\\"restaurants near\\\". I can submit my typing by pressing the Enter afterwards.\r\n    Action:\r\n    ```\r\n    {{\r\n      \"action\": \"type_into_field\",\r\n      \"action_input\": {{\"element_id\": 164, content: \"restaurants near CMU\", press_enter_after: 1}}\r\n    }}\r\n    ```\r\n    =====End of example 2 =====\r\n    To be successful, it is very important to follow the following rules:\r\n    1. You should only issue an action that is valid given the current observation\r\n    2. In your thoughts, you should follow the examples to reason step by step and then issue the next action.\r\n    3. Think whether your action makes sense. For example, it is pointless to click on static texts as it does nothing.\r\n    4. Issue stop action when you think you have achieved the objective.\r\n    \r\n    Begin! Reminder to ALWAYS respond with a valid json blob of a single action.\"\"\"", "'{input}\\n\\n{agent_scratchpad:0.0}'", "\"\"\"Use a json blob to specify a tool by providing an action key (tool name) and an action_input key (tool input).\r\n    \r\n    Valid \"action\" values: {tool_names}\r\n    \r\n    Provide only ONE action per $JSON_BLOB, as shown:\r\n    \r\n    ```\r\n    {{{{\r\n      \"action\": $TOOL_NAME,\r\n      \"action_input\": $INPUT\r\n    }}}}\r\n    ```\r\n        \r\n    Follow this format:\r\n    \r\n    Thought: consider previous and subsequent steps, reason step by step what the best next action should be\r\n    Action:\r\n    ```\r\n    $JSON_BLOB\r\n    ```\r\n    Observation: action result / accessibility tree / URL\r\n    ... (repeat Thought/Action/Observation N times)\r\n    Thought: The objective can be achieved now (and explain step by step why this is so). I know what to respond. \r\n    Action:\r\n    ```\r\n    {{{{\r\n      \"action\": \"stop\",\r\n      \"action_input\": {{{{\"final_answer\" : \"Final response to human\"}}}}\r\n    }}}}\r\n    ```\"\"\"", "\"\"\"\r\n    Example:\r\n    ### Example start ###\r\n    Observation:\r\n    [1744] link 'HP CB782A#ABA 640 Inkjet Fax Machine (Renewed)'\r\n            [1749] StaticText '$279.49'\r\n            [1757] button 'Add to Cart'\r\n            \r\n    In this example, there is a link with element id 1744 and a button with element id 1757. If you want to click on element\r\n    id 1757, issue this function with 1757 as the parameter. Note that element 1749 is static text so it is not clickable\r\n    ### Example end ###\r\n    \"\"\"", "\"\"\"\r\n    Example:\r\n    ### Example start ###\r\n    Observation:\r\n    [1744] link 'HP CB782A#ABA 640 Inkjet Fax Machine (Renewed)'\r\n            [1749] StaticText '$279.49'\r\n            [1757] button 'Add to Cart'\r\n    \r\n    OBJECTIVE: What is the price of HP Inkjet Fax Machine\r\n    \r\n    In this example we see that this page lists the information of HP Inkjet Fax Machine, which is the product identified in the objective. Its price is $279.49. Since you have achieved the objective, you will issue the stop action with the parameter $279.49\r\n    ### Example end ###\r\n    \"\"\"", "\"This action clicks on an element specified by the element_id in the input.\"", "\"\"\"Issue this action when you believe the task is complete. If the objective is to find a text-based answer, provide the answer as an input to this tool. If you believe the task is impossible to complete, provide the answer as \"N/A\" as the input to this tool.\"\"\"", "\"\"\"Use this to type the content into the field with element_id. press_enter_after is either 1 or 0. By default, the \"Enter\" key is pressed after typing unless press_enter_after is set to 0.\"\"\"", "f\"Attempted to use tool {fn_name} on invalid press_enter_after value {press_enter_after}. It should be 1 or 0.\"", "\"Simulates the pressing of a key combination on the keyboard (e.g., Ctrl+v).\"", "\"Scroll the page. Specify the direction (up or down) in the input\"", "\"Navigate to the previously viewed page.\"", "\"Navigate to the next page (if a previous 'go_back' action was performed).\"", "f\"The valid urls must contain any of {_APPROVED_DOMAINS}\"", "\"\"\"You are an autonomous intelligent agent tasked with navigating a web browser. You will be given web-based tasks. These tasks will be accomplished through the use of specific actions you can issue.\n\nHere's the information you'll have:\nThe user's objective: This is the task you're trying to complete.\nThe current web page's accessibility tree: This is a simplified representation of the webpage, providing key information.\nThe current web page's URL: This is the page you're currently navigating.\nThe open tabs: These are the tabs you have open.\nThe previous action: This is the action you just performed. It may be helpful to track your progress.\n\nThe actions you can perform fall into several categories:\n\nPage Operation Actions:\n`click [id]`: This action clicks on an element with a specific id on the webpage.\n`type [id] [content] [press_enter_after=0|1]`: Use this to type the content into the field with id. By default, the \"Enter\" key is pressed after typing unless press_enter_after is set to 0.\n`hover [id]`: Hover over an element with id.\n`press [key_comb]`:  Simulates the pressing of a key combination on the keyboard (e.g., Ctrl+v).\n`scroll [direction=down|up]`: Scroll the page up or down.\n\nTab Management Actions:\n`new_tab`: Open a new, empty browser tab.\n`tab_focus [tab_index]`: Switch the browser's focus to a specific tab using its index.\n`close_tab`: Close the currently active tab.\n\nURL Navigation Actions:\n`goto [url]`: Navigate to a specific URL.\n`go_back`: Navigate to the previously viewed page.\n`go_forward`: Navigate to the next page (if a previous 'go_back' action was performed).\n\nCompletion Action:\n`stop [answer]`: Issue this action when you believe the task is complete. If the objective is to find a text-based answer, provide the answer in the bracket. If you believe the task is impossible to complete, provide the answer as \"N/A\" in the bracket.\n\nHomepage:\nIf you want to visit other websites, check out the homepage at http://homepage.com. It has a list of websites you can visit.\nhttp://homepage.com/password.html lists all the account name and password for the websites. You can use them to log in to the websites.\n\nTo be successful, it is very important to follow the following rules:\n1. You should only issue an action that is valid given the current observation\n2. You should only issue one action at a time.\n3. Generate the action in the correct format. Always put the action inside a pair of ```. For example, ```click [1234]```.\n5. Issue stop action when you think you have achieved the objective. Don't generate anything after stop.\"\"\"", "\"\"\"OBSERVATION:\n[1744] link 'HP CB782A#ABA 640 Inkjet Fax Machine (Renewed)'\n\t\t[1749] StaticText '$279.49'\n\t\t[1757] button 'Add to Cart'\n\t\t[1760] button 'Add to Wish List'\n\t\t[1761] button 'Add to Compare'\nURL: http://onestopmarket.com/office-products/office-electronics.html\nOBJECTIVE: What is the price of HP Inkjet Fax Machine\nPREVIOUS ACTION: None\"\"\"", "\"\"\"Generate the text version of the predicted actions to store in action history for prompt use.\n    May contain hint information to recover from the failures\"\"\"", "f'The previous prediction you issued was \"{action[\"raw_prediction\"]}\". However, the format was incorrect. Ensure that the action is wrapped inside a pair of {action_splitter} and enclose arguments within [] as follows: {action_splitter}action [arg] ...{action_splitter}.'", "\"\"\"Helper class to render text and image observations and meta data in the trajectory\"\"\"", "\"\"\"Render the trajectory\"\"\"", "\"\"\"Return the require format for an API\"\"\"", "\"\"\"The agent will direct predict the action\"\"\"", "\"\"\"The agent will perform step-by-step reasoning before the answer\"\"\"", "f'Cannot find the answer phrase \"{self.answer_phrase}\" in \"{response}\"'", "\"\"\"\nYou are an autonomous intelligent agent tasked with navigating a web browser. You will be given web-based tasks. \nThese tasks will be accomplished through the use of specific actions you can issue.\n\nHere's the information you'll have:\nThe user's objective: This is the task you're trying to complete.\nThe current web page's accessibility tree: This is a simplified representation of the webpage, providing key information.\nThe current web page's URL: This is the page you're currently navigating.\nThe open tabs: These are the tabs you have open.\nThe previous action: This is the action you just performed. It may be helpful to track your progress.\n\nHomepage:\nIf you want to visit other websites, check out the homepage at http://homepage.com. It has a list of websites you can visit.\nhttp://homepage.com/password.html lists all the account name and password for the websites. You can use them to log in to the websites.\n\nTo be successful, it is very important to follow the following rules:\n1. You should only issue an action that is valid given the current observation\n2. You should follow the examples to reason step by step and then issue the next action.\n\"\"\"", "\"\"\"OBSERVATION:\n[1744] link 'HP CB782A#ABA 640 Inkjet Fax Machine (Renewed)'\n\t\t[1749] StaticText '$279.49'\n\t\t[1757] button 'Add to Cart'\n\t\t[1760] button 'Add to Wish List'\n\t\t[1761] button 'Add to Compare'\nURL: http://onestopmarket.com/office-products/office-electronics.html\nOBJECTIVE: What is the price of HP Inkjet Fax Machine\nPREVIOUS ACTION: None\"\"\"", "\"Let's think step-by-step. This page list the information of HP Inkjet Fax Machine, which is the product identified in the objective. Its price is $279.49. I think I have achieved the objective. I will issue the stop action with the answer. In summary, the next action I will perform is ```stop [$279.49]```\"", "\"Let's think step-by-step. This page has a search box whose ID is [164]. According to the nominatim rule of openstreetmap, I can search for the restaurants near a location by \\\"restaurants near\\\". I can submit my typing by pressing the Enter afterwards. In summary, the next action I will perform is ```type [164] [restaurants near CMU] [1]```\"", "\"In summary, the next action I will perform is\"", "\"\"\"You are an autonomous intelligent agent tasked with navigating a web browser. You will be given web-based tasks. These tasks will be accomplished through the use of specific actions you can issue.\n\nHere's the information you'll have:\nThe user's objective: This is the task you're trying to complete.\nThe current web page's accessibility tree: This is a simplified representation of the webpage, providing key information.\nThe current web page's URL: This is the page you're currently navigating.\nThe open tabs: These are the tabs you have open.\nThe previous action: This is the action you just performed. It may be helpful to track your progress.\n\nThe actions you can perform fall into several categories:\n\nPage Operation Actions:\n`click [id]`: This action clicks on an element with a specific id on the webpage.\n`type [id] [content] [press_enter_after=0|1]`: Use this to type the content into the field with id. By default, the \"Enter\" key is pressed after typing unless press_enter_after is set to 0.\n`hover [id]`: Hover over an element with id.\n`press [key_comb]`:  Simulates the pressing of a key combination on the keyboard (e.g., Ctrl+v).\n`scroll [direction=down|up]`: Scroll the page up or down.\n\nTab Management Actions:\n`new_tab`: Open a new, empty browser tab.\n`tab_focus [tab_index]`: Switch the browser's focus to a specific tab using its index.\n`close_tab`: Close the currently active tab.\n\nURL Navigation Actions:\n`goto [url]`: Navigate to a specific URL.\n`go_back`: Navigate to the previously viewed page.\n`go_forward`: Navigate to the next page (if a previous 'go_back' action was performed).\n\nCompletion Action:\n`stop [answer]`: Issue this action when you believe the task is complete. If the objective is to find a text-based answer, provide the answer in the bracket. If you believe the task is impossible to complete, provide the answer as \"N/A\" in the bracket.\n\nHomepage:\nIf you want to visit other websites, check out the homepage at http://homepage.com. It has a list of websites you can visit.\nhttp://homepage.com/password.html lists all the account name and password for the websites. You can use them to log in to the websites.\n\nTo be successful, it is very important to follow the following rules:\n1. You should only issue an action that is valid given the current observation\n2. You should only issue one action at a time.\n3. You should follow the examples to reason step by step and then issue the next action.\n4. Generate the action in the correct format. Start with a \"In summary, the next action I will perform is\" phrase, followed by action inside ``````. For example, \"In summary, the next action I will perform is ```click [1234]```\".\n5. Issue stop action when you think you have achieved the objective. Don't generate anything after stop.\"\"\"", "\"\"\"OBSERVATION:\n[1744] link 'HP CB782A#ABA 640 Inkjet Fax Machine (Renewed)'\n\t\t[1749] StaticText '$279.49'\n\t\t[1757] button 'Add to Cart'\n\t\t[1760] button 'Add to Wish List'\n\t\t[1761] button 'Add to Compare'\nURL: http://onestopmarket.com/office-products/office-electronics.html\nOBJECTIVE: What is the price of HP Inkjet Fax Machine\nPREVIOUS ACTION: None\"\"\"", "\"Let's think step-by-step. This page list the information of HP Inkjet Fax Machine, which is the product identified in the objective. Its price is $279.49. I think I have achieved the objective. I will issue the stop action with the answer. In summary, the next action I will perform is ```stop [$279.49]```\"", "\"Let's think step-by-step. This page has a search box whose ID is [164]. According to the nominatim rule of openstreetmap, I can search for the restaurants near a location by \\\"restaurants near\\\". I can submit my typing by pressing the Enter afterwards. In summary, the next action I will perform is ```type [164] [restaurants near CMU] [1]```\"", "\"In summary, the next action I will perform is\""], "Aurelien-Be~langchainproject": ["\"\"\"\n    given the Linkedin information {information} about a personn from I want you to create:\n    1. a short summary of the person\n    2. two interesting facts about the person\"\"\"", "\"\"\"given the full name {name_of_person} I want you to get it me a link to their Linkedin profile page\n                  your answer should contain only a URL\"\"\"", "\"useful when you need to get the Linkedin page url\""], "PCSchmidt~Langchain": ["\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n______________________\n{context}\"\"\"", "\"{question}\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\n\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\n\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\n=========\nFINAL ANSWER: This Agreement is governed by English law.\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\n\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\n\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\n\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n______________________\n{summaries}\"\"\"", "\"{question}\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\nIn addition to giving an answer, also return a score of how fully it answered the user's question. This should be in the following format:\n\nQuestion: [question here]\nHelpful Answer: [answer here]\nScore: [score between 0 and 100]\n\nHow to determine the score:\n- Higher is a better answer\n- Better responds fully to the asked question, with sufficient level of detail\n- If you do not know the answer based on the context, that should be a score of 0\n- Don't be overconfident!\n\nExample #1\n\nContext:\n---------\nApples are red\n---------\nQuestion: what color are apples?\nHelpful Answer: red\nScore: 100\n\nExample #2\n\nContext:\n---------\nit was night and the witness forgot his glasses. he was not sure if it was a sports car or an suv\n---------\nQuestion: what type was the car?\nHelpful Answer: a sports car or an suv\nScore: 60\n\nExample #3\n\nContext:\n---------\nPears are either red or orange\n---------\nQuestion: what color are apples?\nHelpful Answer: This document does not answer the question\nScore: 0\n\nBegin!\n\nContext:\n---------\n{context}\n---------\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Extract all entities from the following text. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return.\n\nEXAMPLE\ni'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\ni'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Sam.\nOutput: Langchain, Sam\nEND OF EXAMPLE\n\nBegin!\n\n{input}\nOutput:\"\"\"", "\"\"\"Use the following knowledge triplets to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Task:Generate Cypher statement to query a graph database.\nInstructions:\nUse only the provided relationship types and properties in the schema.\nDo not use any other relationship types or properties that are not provided.\nSchema:\n{schema}\nNote: Do not include any explanations or apologies in your responses.\nDo not respond to any questions that might ask anything else than for you to construct a Cypher statement.\nDo not include any text except the generated Cypher statement.\n\nThe question is:\n{question}\"\"\"", "\"question\"", "\"\"\"\nInstructions:\n\nFirst, generate cypher then convert it to NebulaGraph Cypher dialect(rather than standard):\n1. it requires explicit label specification when referring to node properties: v.`Foo`.name\n2. it uses double equals sign for comparison: `==` rather than `=`\nFor instance:\n```diff\n< MATCH (p:person)-[:directed]->(m:movie) WHERE m.name = 'The Godfather II'\n< RETURN p.name;\n---\n> MATCH (p:`person`)-[:directed]->(m:`movie`) WHERE m.`movie`.`name` == 'The Godfather II'\n> RETURN p.`person`.`name`;\n```\\n\"\"\"", "\"question\"", "\"\"\"\nInstructions:\n\nGenerate statement with K\u00f9zu Cypher dialect (rather than standard):\n1. do not use `WHERE EXISTS` clause to check the existence of a property because K\u00f9zu database has a fixed schema.\n2. do not omit relationship pattern. Always use `()-[]->()` instead of `()->()`.\n3. do not include any notes or comments even if the statement does not produce the expected result.\n```\\n\"\"\"", "\"question\"", "\"\"\"You are an assistant that helps to form nice and human understandable answers.\nThe information part contains the provided information that you must use to construct an answer.\nThe provided information is authorative, you must never doubt it or try to use your internal knowledge to correct it.\nMake the answer sound as a response to the question. Do not mention that you based the result on the given information.\nIf the provided information is empty, say that you don't know the answer.\nInformation:\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"A list of the examples that the prompt template expects.\"\"\"", "\"\"\"Select which examples to use based on the input lengths.\"\"\"", "\"\"\"\\\n```json\n{\n    \"content\": \"Lyrics of a song\",\n    \"attributes\": {\n        \"artist\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the song artist\"\n        },\n        \"length\": {\n            \"type\": \"integer\",\n            \"description\": \"Length of the song in seconds\"\n        },\n        \"genre\": {\n            \"type\": \"string\",\n            \"description\": \"The song genre, one of \\\"pop\\\", \\\"rock\\\" or \\\"rap\\\"\"\n        }\n    }\n}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"teenager love\",\n    \"filter\": \"and(or(eq(\\\\\"artist\\\\\", \\\\\"Taylor Swift\\\\\"), eq(\\\\\"artist\\\\\", \\\\\"Katy Perry\\\\\")), \\\nlt(\\\\\"length\\\\\", 180), eq(\\\\\"genre\\\\\", \\\\\"pop\\\\\"))\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"\",\n    \"filter\": \"NO_FILTER\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"love\",\n    \"filter\": \"NO_FILTER\",\n    \"limit\": 2\n}}\n```\\\n\"\"\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n{data_source}\n\nUser Query:\n{user_query}\n\nStructured Request:\n{structured_request}\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters only use the attributed names with its function names if there are functions applied on them.\nMake sure that filters only use format `YYYY-MM-DD` when handling timestamp data typed values.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\\\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n    \"limit\": int \\\\ the number of documents to retrieve\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters only use the attributed names with its function names if there are functions applied on them.\nMake sure that filters only use format `YYYY-MM-DD` when handling timestamp data typed values.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\nMake sure the `limit` is always an int value. It is an optional parameter so leave it blank if it is does not make sense.\n\"\"\"", "\"\"\"\\\nYour goal is to structure the user's query to match the request schema provided below.\n\n{schema}\\\n\"\"\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n```json\n{{{{\n    \"content\": \"{content}\",\n    \"attributes\": {attributes}\n}}}}\n```\n\nUser Query:\n{{query}}\n\nStructured Request:\n\"\"\"", "\"\"\"An AI language model has been given access to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n\n{tool_descriptions}\n\nThe question the human asked the AI model was: {question}\n\nThe AI language model decided to use the following set of tools to answer the question:\n\n{agent_trajectory}\n\nThe AI language model's final answer to the question was: {answer}\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"An AI language model has been given acces to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n\nTool 1:\nName: Search\nDescription: useful for when you need to ask with search\n\nTool 2:\nName: Lookup\nDescription: useful for when you need to ask with lookup\n\nTool 3:\nName: Calculator\nDescription: useful for doing calculations\n\nTool 4:\nName: Search the Web (SerpAPI)\nDescription: useful for when you need to answer questions about current events\n\nThe question the human asked the AI model was: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\n\nThe AI language model decided to use the following set of tools to answer the question:\n\nStep 1:\nTool used: Search the Web (SerpAPI)\nTool input: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\nTool output: The Statue of Liberty was given to the United States by France, as a symbol of the two countries' friendship. It was erected atop an American-designed ...\n\nThe AI language model's final answer to the question was: There are different ways to measure the length of the United States, but if we use the distance between the Statue of Liberty and the westernmost point of the contiguous United States (Cape Alava, Washington), which is approximately 2,857 miles (4,596 km), and assume that the Statue of Liberty is 305 feet (93 meters) tall, then the statue would stretch across the United States approximately 17.5 times if laid end to end.\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"First, let's evaluate the final answer. The final uses good reasoning but is wrong. 2,857 divided by 305 is not 17.5.\\\nThe model should have used the calculator to figure this out. Second does the model use a logical sequence of tools to answer the question?\\\nThe way model uses the search is not helpful. The model should have used the search tool to figure the width of the US or the height of the statue.\\\nThe model didn't use the calculator tool and gave an incorrect answer. The search API should be used for current events or specific questions.\\\nThe tools were not used in a helpful way. The model did not use too many steps to answer the question.\\\nThe model did not use the appropriate tools to answer the question.\\\n    \nJudgment: Given the good reasoning in the final answer but otherwise poor performance, we give the model a score of 2.\n\nScore: 2\"\"\"", "\"\"\"Setup: You are now playing a fast paced round of TextWorld! Here is your task for\ntoday. First of all, you could, like, try to travel east. After that, take the\nbinder from the locker. With the binder, place the binder on the mantelpiece.\nAlright, thanks!\n\n-= Vault =-\nYou've just walked into a vault. You begin to take stock of what's here.\n\nAn open safe is here. What a letdown! The safe is empty! You make out a shelf.\nBut the thing hasn't got anything on it. What, you think everything in TextWorld\nshould have stuff on it?\n\nYou don't like doors? Why not try going east, that entranceway is unguarded.\n\nThought: I need to travel east\nAction: Play[go east]\nObservation: -= Office =-\nYou arrive in an office. An ordinary one.\n\nYou can make out a locker. The locker contains a binder. You see a case. The\ncase is empty, what a horrible day! You lean against the wall, inadvertently\npressing a secret button. The wall opens up to reveal a mantelpiece. You wonder\nidly who left that here. The mantelpiece is standard. The mantelpiece appears to\nbe empty. If you haven't noticed it already, there seems to be something there\nby the wall, it's a table. Unfortunately, there isn't a thing on it. Hm. Oh well\nThere is an exit to the west. Don't worry, it is unguarded.\n\nThought: I need to take the binder from the locker\nAction: Play[take binder]\nObservation: You take the binder from the locker.\n\nThought: I need to place the binder on the mantelpiece\nAction: Play[put binder on mantelpiece]\n\nObservation: You put the binder on the mantelpiece.\nYour score has just gone up by one point.\n*** The End ***\nThought: The End has occurred\nAction: Finish[yes]\n\n\"\"\"", "\"\"\"\\n\\nSetup: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"You are a teacher coming up with questions to ask on a quiz. \nGiven the following document, please generate a question and answer based on that document.\n\nExample Format:\n<Begin Document>\n...\n<End Document>\nQUESTION: question here\nANSWER: answer here\n\nThese questions should be detailed and be based explicitly on information in the document. Begin!\n\n<Begin Document>\n{doc}\n<End Document>\"\"\"", "\"query\"", "\"\"\"\n    Convert the given value (which can be formatted text) into a list of text\n    fragments. (Which is the canonical form of formatted text.) The outcome is\n    always a `FormattedText` instance, which is a list of (style, text) tuples.\n\n    It can take a plain text string, an `HTML` or `ANSI` object, anything that\n    implements `__pt_formatted_text__` or a callable that takes no arguments and\n    returns one of those.\n\n    :param style: An additional style string which is applied to all text\n        fragments.\n    :param auto_convert: If `True`, also accept other types, and convert them\n        to a string first.\n    \"\"\"", "\"\"\"\n    Check whether the input is valid formatted text (for use in assert\n    statements).\n    In case of a callable, it doesn't check the return type.\n    \"\"\"", "'''\nQ: Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\"\"\"\n    money_initial = 23\n    bagels = 5\n    bagel_cost = 3\n    money_spent = bagels * bagel_cost\n    money_left = money_initial - money_spent\n    result = money_left\n    return result\n\n\n\n\n\nQ: Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\"\"\"\n    golf_balls_initial = 58\n    golf_balls_lost_tuesday = 23\n    golf_balls_lost_wednesday = 2\n    golf_balls_left = golf_balls_initial - golf_balls_lost_tuesday - golf_balls_lost_wednesday\n    result = golf_balls_left\n    return result\n\n\n\n\n\nQ: There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\"\"\"\n    computers_initial = 9\n    computers_per_day = 5\n    num_days = 4  # 4 days between monday and thursday\n    computers_added = computers_per_day * num_days\n    computers_total = computers_initial + computers_added\n    result = computers_total\n    return result\n\n\n\n\n\nQ: Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\"\"\"\n    toys_initial = 5\n    mom_toys = 2\n    dad_toys = 2\n    total_received = mom_toys + dad_toys\n    total_toys = toys_initial + total_received\n    result = total_toys\n    return result\n\n\n\n\n\nQ: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\"\"\"\n    jason_lollipops_initial = 20\n    jason_lollipops_after = 12\n    denny_lollipops = jason_lollipops_initial - jason_lollipops_after\n    result = denny_lollipops\n    return result\n\n\n\n\n\nQ: Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\"\"\"\n    leah_chocolates = 32\n    sister_chocolates = 42\n    total_chocolates = leah_chocolates + sister_chocolates\n    chocolates_eaten = 35\n    chocolates_left = total_chocolates - chocolates_eaten\n    result = chocolates_left\n    return result\n\n\n\n\n\nQ: If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\"\"\"\n    cars_initial = 3\n    cars_arrived = 2\n    total_cars = cars_initial + cars_arrived\n    result = total_cars\n    return result\n\n\n\n\n\nQ: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\"\"\"\n    trees_initial = 15\n    trees_after = 21\n    trees_added = trees_after - trees_initial\n    result = trees_added\n    return result\n\n\n\n\n\nQ: {question}\n\n# solution in Python:\n'''", "\"question\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Use the following pieces of context to answer the users question. \nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\n----------------\n{context}\"\"\"", "\"{question}\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Take examples in list format with prefix and suffix to create a prompt.\n\n        Intended to be used as a way to dynamically create a prompt from examples.\n\n        Args:\n            examples: List of examples to use in the prompt.\n            suffix: String to go after the list of examples. Should generally\n                set up the user's input.\n            input_variables: A list of variable names the final prompt template\n                will expect.\n            example_separator: The separator to use in between examples. Defaults\n                to two new line characters.\n            prefix: String that should go before any examples. Generally includes\n                examples. Default to an empty string.\n\n        Returns:\n            The final prompt generated.\n        \"\"\"", "\"\"\"Load a prompt from a file.\n\n        Args:\n            template_file: The path to the file containing the prompt template.\n            input_variables: A list of variable names the final prompt template\n                will expect.\n        Returns:\n            The prompt loaded from the file.\n        \"\"\"", "\"\"\"You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:\"\"\"", "\"\"\"You are assessing a submitted answer on a given task or input based on a set of criteria. Here is the data:\n[BEGIN DATA]\n***\n[Task]: {input}\n***\n[Submission]: {output}\n***\n[Criteria]: {criteria}\n***\n[END DATA]\nDoes the submission meet the Criteria? First, write out in a step by step manner your reasoning about the criterion to be sure that your conclusion is correct. Avoid simply stating the correct answers at the outset. Then print only the single character \"Y\" or \"N\" (without quotes or punctuation) on its own line corresponding to the correct answer. At the end, repeat just the letter again by itself on a new line.\"\"\"", "\"\"\"\\\nGiven a query to a question answering system select the system best suited \\\nfor the input. You will be given the names of the available systems and a description \\\nof what questions the system is best suited for. You may also revise the original \\\ninput if you think that revising it will ultimately lead to a better response.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the question answering system to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\"", "\"Only one of example_prompt and example_prompt_path should \"", "\"\"\"\\\nGiven a raw text input to a language model select the model prompt best suited for \\\nthe input. You will be given the names of the available prompts and a description of \\\nwhat the prompt is best suited for. You may also revise the original input if you \\\nthink that revising it will ultimately lead to a better response from the language \\\nmodel.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the prompt to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\"", "\"\"\"Compute ngram overlap score of source and example as sentence_bleu score.\n\n    Use sentence_bleu with method1 smoothing function and auto reweighting.\n    Return float value between 0.0 and 1.0 inclusive.\n    https://www.nltk.org/_modules/nltk/translate/bleu_score.html\n    https://aclanthology.org/P02-1040.pdf\n    \"\"\"", "\"\"\"A list of the examples that the prompt template expects.\"\"\"", "\"\"\"Threshold at which algorithm stops. Set to -1.0 by default.\n\n    For negative threshold:\n    select_examples sorts examples by ngram_overlap_score, but excludes none.\n    For threshold greater than 1.0:\n    select_examples excludes all examples, and returns an empty list.\n    For threshold equal to 0.0:\n    select_examples sorts examples by ngram_overlap_score,\n    and excludes examples with no ngram overlap with input.\n    \"\"\"", "\"Not all the correct dependencies for this ExampleSelect exist\"", "\"\"\"Return list of examples sorted by ngram_overlap_score with input.\n\n        Descending order.\n        Excludes any examples with ngram_overlap_score less than or equal to threshold.\n        \"\"\"", "\"\"\"\n    Display the name of the current task.\n\n    :param width: If a `width` is given, use this width. Scroll the text if it\n        doesn't fit in this width.\n    :param suffix: String suffix to be added after the task name, e.g. ': '.\n        If no task name was given, no suffix will be added.\n    \"\"\"", "\"\"\"\n    Display the elapsed time.\n    \"\"\"", "\"\"\"\n    For the fun. Add rainbow colors to any of the other formatters.\n    \"\"\"", "\"\"\"\n    Return the list of default formatters.\n    \"\"\"", "\"\"\"Chain for deciding a destination chain and the input to it.\"\"\"", "\"\"\"Map of name to candidate chains that inputs can be routed to.\"\"\"", "\"\"\"Default chain to use when router doesn't map input to one of the destinations.\"\"\"", "\"\"\"\nMany places in prompt_toolkit can take either plain text, or formatted text.\nFor instance the :func:`~prompt_toolkit.shortcuts.prompt` function takes either\nplain text or formatted text for the prompt. The\n:class:`~prompt_toolkit.layout.FormattedTextControl` can also take either plain\ntext or formatted text.\n\nIn any case, there is an input that can either be just plain text (a string),\nan :class:`.HTML` object, an :class:`.ANSI` object or a sequence of\n`(style_string, text)` tuples. The :func:`.to_formatted_text` conversion\nfunction takes any of these and turns all of them into such a tuple sequence.\n\"\"\"", "\"\"\"Question: What is the elevation range for the area that the eastern sector of the Colorado orogeny extends into?\nThought: I need to search Colorado orogeny, find the area that the eastern sector of the Colorado orogeny extends into, then find the elevation range of the area.\nAction: Search[Colorado orogeny]\nObservation: The Colorado orogeny was an episode of mountain building (an orogeny) in Colorado and surrounding areas.\nThought: It does not mention the eastern sector. So I need to look up eastern sector.\nAction: Lookup[eastern sector]\nObservation: (Result 1 / 1) The eastern sector extends into the High Plains and is called the Central Plains orogeny.\nThought: The eastern sector of Colorado orogeny extends into the High Plains. So I need to search High Plains and find its elevation range.\nAction: Search[High Plains]\nObservation: High Plains refers to one of two distinct land regions\nThought: I need to instead search High Plains (United States).\nAction: Search[High Plains (United States)]\nObservation: The High Plains are a subregion of the Great Plains. From east to west, the High Plains rise in elevation from around 1,800 to 7,000 ft (550 to 2,130 m).[3]\nThought: High Plains rise in elevation from around 1,800 to 7,000 ft, so the answer is 1,800 to 7,000 ft.\nAction: Finish[1,800 to 7,000 ft]\"\"\"", "\"\"\"Question: Musician and satirist Allie Goertz wrote a song about the \"The Simpsons\" character Milhouse, who Matt Groening named after who?\nThought: The question simplifies to \"The Simpsons\" character Milhouse is named after who. I only need to search Milhouse and find who it is named after.\nAction: Search[Milhouse]\nObservation: Milhouse Mussolini Van Houten is a recurring character in the Fox animated television series The Simpsons voiced by Pamela Hayden and created by Matt Groening.\nThought: The paragraph does not tell who Milhouse is named after, maybe I can look up \"named after\".\nAction: Lookup[named after]\nObservation: (Result 1 / 1) Milhouse was named after U.S. president Richard Nixon, whose middle name was Milhous.\nThought: Milhouse was named after U.S. president Richard Nixon, so the answer is Richard Nixon.\nAction: Finish[Richard Nixon]\"\"\"", "\"\"\"Question: Which documentary is about Finnish rock groups, Adam Clayton Powell or The Saimaa Gesture?\nThought: I need to search Adam Clayton Powell and The Saimaa Gesture, and find which documentary is about Finnish rock groups.\nAction: Search[Adam Clayton Powell]\nObservation: Could not find [Adam Clayton Powell]. Similar: [\u2019Adam Clayton Powell III\u2019, \u2019Seventh Avenue (Manhattan)\u2019, \u2019Adam Clayton Powell Jr. State Office Building\u2019, \u2019Isabel Washington Powell\u2019, \u2019Adam Powell\u2019, \u2019Adam Clayton Powell (film)\u2019, \u2019Giancarlo Esposito\u2019].\nThought: To find the documentary, I can search Adam Clayton Powell (film).\nAction: Search[Adam Clayton Powell (film)]\nObservation: Adam Clayton Powell is a 1989 American documentary film directed by Richard Kilberg. The film is about the rise and fall of influential African-American politician Adam Clayton Powell Jr.[3][4] It was later aired as part of the PBS series The American Experience.\nThought: Adam Clayton Powell (film) is a documentary about an African-American politician, not Finnish rock groups. So the documentary about Finnish rock groups must instead be The Saimaa Gesture.\nAction: Finish[The Saimaa Gesture]\"\"\"", "\"\"\"Question: What profession does Nicholas Ray and Elia Kazan have in common?\nThought: I need to search Nicholas Ray and Elia Kazan, find their professions, then find the profession they have in common.\nAction: Search[Nicholas Ray]\nObservation: Nicholas Ray (born Raymond Nicholas Kienzle Jr., August 7, 1911 - June 16, 1979) was an American film director, screenwriter, and actor best known for the 1955 film Rebel Without a Cause.\nThought: Professions of Nicholas Ray are director, screenwriter, and actor. I need to search Elia Kazan next and find his professions.\nAction: Search[Elia Kazan]\nObservation: Elia Kazan was an American film and theatre director, producer, screenwriter and actor.\nThought: Professions of Elia Kazan are director, producer, screenwriter, and actor. So profession Nicholas Ray and Elia Kazan have in common is director, screenwriter, and actor.\nAction: Finish[director, screenwriter, actor]\"\"\"", "\"\"\"Question: Which magazine was started first Arthur\u2019s Magazine or First for Women?\nThought: I need to search Arthur\u2019s Magazine and First for Women, and find which was started first.\nAction: Search[Arthur\u2019s Magazine]\nObservation: Arthur\u2019s Magazine (1844-1846) was an American literary periodical published in Philadelphia in the 19th century.\nThought: Arthur\u2019s Magazine was started in 1844. I need to search First for Women next.\nAction: Search[First for Women]\nObservation: First for Women is a woman\u2019s magazine published by Bauer Media Group in the USA.[1] The magazine was started in 1989.\nThought: First for Women was started in 1989. 1844 (Arthur\u2019s Magazine) < 1989 (First for Women), so Arthur\u2019s Magazine was started first.\nAction: Finish[Arthur\u2019s Magazine]\"\"\"", "\"\"\"Question: Were Pavel Urysohn and Leonid Levin known for the same type of work?\nThought: I need to search Pavel Urysohn and Leonid Levin, find their types of work, then find if they are the same.\nAction: Search[Pavel Urysohn]\nObservation: Pavel Samuilovich Urysohn (February 3, 1898 - August 17, 1924) was a Soviet mathematician who is best known for his contributions in dimension theory.\nThought: Pavel Urysohn is a mathematician. I need to search Leonid Levin next and find its type of work.\nAction: Search[Leonid Levin]\nObservation: Leonid Anatolievich Levin is a Soviet-American mathematician and computer scientist.\nThought: Leonid Levin is a mathematician and computer scientist. So Pavel Urysohn and Leonid Levin have the same type of work.\nAction: Finish[yes]\"\"\"", "\"\"\"\\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the student's answer, and the true answer, and are asked to score the student answer as either CORRECT or INCORRECT.\n\nExample Format:\nQUESTION: question here\nSTUDENT ANSWER: student's answer here\nTRUE ANSWER: true answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nSTUDENT ANSWER: {result}\nTRUE ANSWER: {answer}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\nWrite out in a step by step manner your reasoning to be sure that your conclusion is correct. Avoid simply stating the correct answer at the outset.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nEXPLANATION: step by step reasoning here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nEXPLANATION:\"\"\"", "\"query\"", "\"\"\"You are comparing a submitted answer to an expert answer on a given SQL coding question. Here is the data:\n[BEGIN DATA]\n***\n[Question]: {query}\n***\n[Expert]: {answer}\n***\n[Submission]: {result}\n***\n[END DATA]\nCompare the content and correctness of the submitted SQL with the expert answer. Ignore any differences in whitespace, style, or output column names. The submitted answer may either be correct or incorrect. Determine which case applies. First, explain in detail the similarities or differences between the expert answer and the submission, ignoring superficial aspects such as whitespace, style or output column names. Do not state the final answer in your initial explanation. Then, respond with either \"CORRECT\" or \"INCORRECT\" (without quotes or punctuation) on its own line. This should correspond to whether the submitted SQL and the expert answer are semantically the same or different, respectively. Then, repeat your final answer on a new line.\"\"\"", "\"query\"", "\"\"\"\n# Generate Python3 Code to solve problems\n# Q: On the nightstand, there is a red pencil, a purple mug, a burgundy keychain, a fuchsia teddy bear, a black plate, and a blue stress ball. What color is the stress ball?\n# Put objects into a dictionary for quick look up\nobjects = dict()\nobjects['pencil'] = 'red'\nobjects['mug'] = 'purple'\nobjects['keychain'] = 'burgundy'\nobjects['teddy bear'] = 'fuchsia'\nobjects['plate'] = 'black'\nobjects['stress ball'] = 'blue'\n\n# Look up the color of stress ball\nstress_ball_color = objects['stress ball']\nanswer = stress_ball_color\n\n\n# Q: On the table, you see a bunch of objects arranged in a row: a purple paperclip, a pink stress ball, a brown keychain, a green scrunchiephone charger, a mauve fidget spinner, and a burgundy pen. What is the color of the object directly to the right of the stress ball?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('paperclip', 'purple')] * 1\nobjects += [('stress ball', 'pink')] * 1\nobjects += [('keychain', 'brown')] * 1\nobjects += [('scrunchiephone charger', 'green')] * 1\nobjects += [('fidget spinner', 'mauve')] * 1\nobjects += [('pen', 'burgundy')] * 1\n\n# Find the index of the stress ball\nstress_ball_idx = None\nfor i, object in enumerate(objects):\n    if object[0] == 'stress ball':\n        stress_ball_idx = i\n        break\n\n# Find the directly right object\ndirect_right = objects[i+1]\n\n# Check the directly right object's color\ndirect_right_color = direct_right[1]\nanswer = direct_right_color\n\n\n# Q: On the nightstand, you see the following items arranged in a row: a teal plate, a burgundy keychain, a yellow scrunchiephone charger, an orange mug, a pink notebook, and a grey cup. How many non-orange items do you see to the left of the teal item?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('plate', 'teal')] * 1\nobjects += [('keychain', 'burgundy')] * 1\nobjects += [('scrunchiephone charger', 'yellow')] * 1\nobjects += [('mug', 'orange')] * 1\nobjects += [('notebook', 'pink')] * 1\nobjects += [('cup', 'grey')] * 1\n\n# Find the index of the teal item\nteal_idx = None\nfor i, object in enumerate(objects):\n    if object[1] == 'teal':\n        teal_idx = i\n        break\n\n# Find non-orange items to the left of the teal item\nnon_orange = [object for object in objects[:i] if object[1] != 'orange']\n\n# Count number of non-orange objects\nnum_non_orange = len(non_orange)\nanswer = num_non_orange\n\n\n# Q: {question}\n\"\"\"", "\"question\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\""], "saifu19~Langchain": ["\"Useful for when you need to answer questions\"", "\"Useful for when you need to save information to the user's database\"", "\"Useful for when you need to answer questions\"", "\"Useful for when you need to save information to the user's database\"", "'question'", "'Write an answer for this: {question}\\n{context}\\nAnswer:'", "'question'", "'Write an answer for this: {question}\\n{context}\\nAnswer:'", "\"Useful for when you need to answer miscellaneous questions\""], "jessepcc~llm-api": ["\"question\"", "\"question\"", "\"Check your output and make sure it in acceptable format!\"", "\"\"\"Create a ChatVectorDBChain for question/answering.\"\"\"", "\"\"\"Create a ChatVectorDBChain for question/answering.\"\"\"", "\"\"\"Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question.\n    Chat History:\n    {chat_history}\n    Follow Up Input: {question}\n    Standalone question:\"\"\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n    {context}\n    Question: {question}\n    Helpful Answer:\"\"\"", "\"question\"", "\"\"\"Use the following pieces of context to extract information from the resume of the candidate to help assess whether the candidate fits the position.\nIf there is no information in the resume which is useful, just say I do not know. You must not make up additional context which is not mentioned in resume.\n\n{context}\n\nQuestion: {question}\nAnswer:\"\"\"", "\"\"\"Use the following pieces of context to provide information of the job roles and duties to help help assess whether the candidate fits the position.\nYou must not make up additional context which is not mentioned.\n\n{context}\n\nQuestion: {question}\nAnswer:\"\"\"", "\"\"\"Use the following pieces of context to provide information from the resume of the candidate to better assess the candidate.\nYou must not make up any information which is not mentioned in resume.\n\n{context}\n\nQuestion: {question}\nAnswer:\"\"\"", "\"\"\"Use the following pieces of context to provide information of the job roles and duties to assess whether the candidate meets requirements included in the job description.\nYou must no make up any information which is not mentioned.\n\n{context}\n\nQuestion: {question}\nAnswer:\"\"\"", "\"\"\"Use the following pieces of context to provide information of the interview record. In below record, 'Human' represents the candidate and 'AI' represents the interviewer. You must not create information which is not mentioned.\n\n{context}\n\nQuestion: {question}\nAnswer:\"\"\"", "\"\"\"Use this tool when you need background, skills and experience of the candidate from resume. Use this more than search_info for resume related information.\"\"\"", "\"\"\"Use this tool when you need information of the job position. Use this more than search_info for job duties related information.\"\"\"", "\"\"\"Useful for when you need the interview record of the candidate. Use this more than search_info for interview record related information.\"\"\"", "\"\"\"Useful for when you need additional information about industry specific content or method to provide suggestions to the job seeker related to the job position. You should not use this tool for generic information. You should not use the tool outside of the context of the job interview.\"\"\"", "\"\"\"You are a friendly interviewer. You are now having a job interview with a candidate who applied for the job position. Your job is to ask questions to find out whether the candidate is suitable for the job position.\n\nInstructions:\n- You are skeptical and extremely aware of the inconsistency of the candidate's answer with the resume and the previous answers, should ask follow up questions to clarify the inconsistency\n- You should only ask questions\n- Count the number of questions you asked, you should ask at least 5 questions\n- You should ask question on top of the resume which is helpful for you to evaluate whether the candidate is a good fit for the position\n- You should ask question about the detail related to the resume of the candidate and about how it relevant to the job position\n- You should ask interview question about past working experience of the candidate if there is not enough information on resume or the job duties\n- You should come up with question as quickly as possible\n- You should not ask question that is not related to the job roles or the resume\n- You should only give 1 sentence feedback to previous answer and ask then ask question\n- You should not answer any questions from candidate\n- You must not tell the candidate any information about any assessment criteria and your assessment in the middle of the interview\n- You should immediately end the interview if the candidate respond anything inappropriate or should not be mentioned in a job interview\n\"\"\"", "\"\"\"TOOLS\n------\nInterviewer can ask the user to use tools to look up information that may be helpful in responding to the users original response. The tools the human can use are:\n\n{{tools}}\n\n{format_instructions}\n\nUSER'S INPUT\n--------------------\nHere is the user's input (MUST respond with a markdown code snippet of a json blob with a single action, and NOTHING else):\n\n{{{{input}}}}\"\"\"", "\"question\"", "\"question\"", "\"question\"", "\"\"\"You are an honest, experienced career coach with a strong command in language and good communication strategy. You are coaching a job seeker who just finished a job interview. Given the following Interview Record, 'AI' represents the interviewer and 'Human' represents job seeker. 'AI' and 'Human' are only names for referring the two different parties and do not add context to the conversation. Your answer should be industry specific and specific the job positions. Generic answers will be considered as wrong answers. Your suggestions should be as specific as possible. Answer the following questions as best as you can. Action must not be None. You have access to the following tools and can only access the following tools:\"\"\"", "\"\"\"Use the following format:\n        Question: the input question you must answer\n        Thought: you should always think about what to do\n        Action: the action to take, must be one of [{tool_names}], you should either take an Action or know final answer\n        Action Input: the input to the action, must not be None\n        Observation: the result of the action\n        ... (this Thought/Action/Action Input/Observation can repeat N times)\n        Thought: I now know the final answer\n        Final Answer: the final answer to the original input question\n    \"\"\"", "\"\"\"Begin!\n    \n    Remember, You are talking to the job seeker who is the interviewee. Your response should not include the name of the tool you used.\n\n    Question: {input}\n\n    Thought: {agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"Check your output and make sure it in acceptable format!\""], "apurvak~langchain": ["'what is the highest revenue?'", "'query'", "\"\"\"Given an input question, first create a syntactically correct {dialect} query to run, then look at the results of the query and return the answer.\n    Use the following format:\n\n    Question: \"Question here\"\n    Query: \"SQL Query to run\"\n    Result: \"Result of the SQLQuery\"\n    Answer: \"Final answer here\"\n\n    Only use the following tables:\n\n    cleaned_sales_data\n\n    If someone asks for the table foobar, they really mean the employee table.\n\n    Question: {input}\"\"\"", "\"\"\"Number of results to return from the query\"\"\"", "\"query\"", "\"\"\"Whether or not to return the intermediate steps along with the final answer.\"\"\"", "\"\"\"Whether or not to return the result of querying the SQL table directly.\"\"\"", "\"\"\"Whether or not the query checker tool should be used to attempt \n    to fix the initial SQL from the LLM.\"\"\"", "\"\"\"The prompt template that should be used by the query checker\"\"\"", "\"Please instantiate with llm_chain argument or using the from_llm \"", "\"\"\"Return the singular input key.\n\n        :meta private:\n        \"\"\"", "\"query\"", "\"query\"", "\"\"\"Chain for querying SQL database that is a sequential chain.\n\n    The chain is as follows:\n    1. Based on the query, determine which tables to use.\n    2. Based on those tables, call the normal SQL database chain.\n\n    This is useful in cases where the number of tables in the database is large.\n    \"\"\"", "\"query\"", "\"\"\"Return the singular input key.\n\n        :meta private:\n        \"\"\"", "\"query\"", "\"query\"", "\"\"\"Question: What is the highest churn for each year?\n            \"result\": {{ \"sql\": \"SELECT MAX(churn), EXTRACT('year' from date) as year from customer_acquisition_data group by year;\", \"x_axis\": [], \"y_axis\": [\"MAX(churn) \"], \"time_grain\": \"P1Y\", \"chart_type\": \"echarts_timeseries_bar\", \"title\": \"Highest yearly churn\"}}\n            ###\n            Question: What is the highest revenue for each product for each quarter?\n            \"result\": {{ \"sql\": \"SELECT MAX(revenue), product from customer_acquisition_data group by product;\", \"x_axis\": [\"product\"],\"y_axis\":[ \"MAX(revenue)\"],\"time_grain\": \"P3M\", \"chart_type\": \"echarts_timeseries_bar\", \"title\": \"Highest quarterly revenue by product\"}}\n            ###\n            Question: {query}\n            \"\"\"", "\"query\"", "\"\"\"Number of results to return from the query\"\"\"", "\"query\"", "\"\"\"Whether or not to return the intermediate steps along with the final answer.\"\"\"", "\"\"\"Whether or not to return the result of querying the SQL table directly.\"\"\"", "\"\"\"Whether or not the query checker tool should be used to attempt \n    to fix the initial SQL from the LLM.\"\"\"", "\"\"\"The prompt template that should be used by the query checker\"\"\"", "\"Please instantiate with llm_chain argument or using the from_llm \"", "\"\"\"Return the singular input key.\n\n        :meta private:\n        \"\"\"", "\"query\""], "Kds888~Langchain": ["\"Given the full name {name_of_person} I want you to get me the profile url from their linked_in page. Your answer should only contain the profile url\"", "\"Useful for when you need to get the linkedin profile url\""], "valerie979~langchain": ["\"\"\"You are an AI assistant helping a human keep track of facts about relevant people, places, and concepts in their life. Update the summary of the provided entity in the \"Entity\" section based on the last line of your conversation with the human. If you are writing the summary for the first time, return a single sentence.\nThe update should only include facts that are relayed in the last line of conversation about the provided entity, and should only contain facts about the provided entity.\n\nIf there is no new information about the provided entity or the information is not worth noting (not an important or relevant fact to remember long-term), return the existing summary unchanged.\n\nFull conversation history (for context):\n{history}\n\nEntity to summarize:\n{entity}\n\nExisting summary of {entity}:\n{summary}\n\nLast line of conversation:\nHuman: {input}\nUpdated summary:\"\"\"", "\"\"\"You are an assistant to a human, powered by a large language model trained by OpenAI.\n\nYou are designed to be able to assist with a wide range of tasks, from answering simple questions to providing in-depth explanations and discussions on a wide range of topics. As a language model, you are able to generate human-like text based on the input you receive, allowing you to engage in natural-sounding conversations and provide responses that are coherent and relevant to the topic at hand.\n\nYou are constantly learning and improving, and your capabilities are constantly evolving. You are able to process and understand large amounts of text, and can use this knowledge to provide accurate and informative responses to a wide range of questions. You have access to some personalized information provided by the human in the Context section below. Additionally, you are able to generate your own text based on the input you receive, allowing you to engage in discussions and provide explanations and descriptions on a wide range of topics.\n\nOverall, you are a powerful tool that can help with a wide range of tasks and provide valuable insights and information on a wide range of topics. Whether the human needs help with a specific question or just wants to have a conversation about a particular topic, you are here to assist.\n\nContext:\n{entities}\n\nCurrent conversation:\n{history}\nLast line:\nHuman: {input}\nYou:\"\"\"", "\"\"\"Progressively summarize the lines of conversation provided, adding onto the previous summary returning a new summary.\n\nEXAMPLE\nCurrent summary:\nThe human asks what the AI thinks of artificial intelligence. The AI thinks artificial intelligence is a force for good.\n\nNew lines of conversation:\nHuman: Why do you think artificial intelligence is a force for good?\nAI: Because artificial intelligence will help humans reach their full potential.\n\nNew summary:\nThe human asks what the AI thinks of artificial intelligence. The AI thinks artificial intelligence is a force for good because it will help humans reach their full potential.\nEND OF EXAMPLE\n\nCurrent summary:\n{summary}\n\nNew lines of conversation:\n{new_lines}\n\nNew summary:\"\"\"", "\"\"\"You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:\"\"\"", "\"\"\"You are an AI assistant helping a human keep track of facts about relevant people, places, and concepts in their life. Update the summary of the provided entity in the \"Entity\" section based on the last line of your conversation with the human. If you are writing the summary for the first time, return a single sentence.\nThe update should only include facts that are relayed in the last line of conversation about the provided entity, and should only contain facts about the provided entity.\n\nIf there is no new information about the provided entity or the information is not worth noting (not an important or relevant fact to remember long-term), return the existing summary unchanged.\n\nFull conversation history (for context):\n{history}\n\nEntity to summarize:\n{entity}\n\nExisting summary of {entity}:\n{summary}\n\nLast line of conversation:\nHuman: {input}\nUpdated summary:\"\"\"", "\" Extract all of the knowledge triples from the last line of conversation.\"", "\" and an object. The subject is the entity being described,\"", "\" the predicate is the property of the subject that is being\"", "\" described, and the object is the value of the property.\\n\\n\"", "\"AI: What do you know about Nevada?\\n\"", "\"Person #1: It's a state in the US. It's also the number 1 producer of gold in the US.\\n\\n\"", "f\"Output: (Nevada, is a, state){KG_TRIPLE_DELIMITER}(Nevada, is in, US)\"", "f\"{KG_TRIPLE_DELIMITER}(Nevada, is the number 1 producer of, gold)\\n\"", "\"Person #1: I'm going to the store.\\n\\n\"", "\"Person #1: The Descartes I'm referring to is a standup comedian and interior designer from Montreal.\\n\"", "\"AI: Oh yes, He is a comedian and an interior designer. He has been in the industry for 30 years. His favorite food is baked bean pie.\\n\"", "\"Person #1: Oh huh. I know Descartes likes to drive antique scooters and play the mandolin.\\n\"", "\"Conversation history (for reference only):\\n\"", "\"\"\"Chain for deciding a destination chain and the input to it.\"\"\"", "\"\"\"Map of name to candidate chains that inputs can be routed to.\"\"\"", "\"\"\"Default chain to use when router doesn't map input to one of the destinations.\"\"\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Compute ngram overlap score of source and example as sentence_bleu score.\n\n    Use sentence_bleu with method1 smoothing function and auto reweighting.\n    Return float value between 0.0 and 1.0 inclusive.\n    https://www.nltk.org/_modules/nltk/translate/bleu_score.html\n    https://aclanthology.org/P02-1040.pdf\n    \"\"\"", "\"\"\"A list of the examples that the prompt template expects.\"\"\"", "\"\"\"Threshold at which algorithm stops. Set to -1.0 by default.\n\n    For negative threshold:\n    select_examples sorts examples by ngram_overlap_score, but excludes none.\n    For threshold greater than 1.0:\n    select_examples excludes all examples, and returns an empty list.\n    For threshold equal to 0.0:\n    select_examples sorts examples by ngram_overlap_score,\n    and excludes examples with no ngram overlap with input.\n    \"\"\"", "\"Not all the correct dependencies for this ExampleSelect exist\"", "\"\"\"Return list of examples sorted by ngram_overlap_score with input.\n\n        Descending order.\n        Excludes any examples with ngram_overlap_score less than or equal to threshold.\n        \"\"\"", "\"\"\"Setup: You are now playing a fast paced round of TextWorld! Here is your task for\ntoday. First of all, you could, like, try to travel east. After that, take the\nbinder from the locker. With the binder, place the binder on the mantelpiece.\nAlright, thanks!\n\n-= Vault =-\nYou've just walked into a vault. You begin to take stock of what's here.\n\nAn open safe is here. What a letdown! The safe is empty! You make out a shelf.\nBut the thing hasn't got anything on it. What, you think everything in TextWorld\nshould have stuff on it?\n\nYou don't like doors? Why not try going east, that entranceway is unguarded.\n\nThought: I need to travel east\nAction: Play[go east]\nObservation: -= Office =-\nYou arrive in an office. An ordinary one.\n\nYou can make out a locker. The locker contains a binder. You see a case. The\ncase is empty, what a horrible day! You lean against the wall, inadvertently\npressing a secret button. The wall opens up to reveal a mantelpiece. You wonder\nidly who left that here. The mantelpiece is standard. The mantelpiece appears to\nbe empty. If you haven't noticed it already, there seems to be something there\nby the wall, it's a table. Unfortunately, there isn't a thing on it. Hm. Oh well\nThere is an exit to the west. Don't worry, it is unguarded.\n\nThought: I need to take the binder from the locker\nAction: Play[take binder]\nObservation: You take the binder from the locker.\n\nThought: I need to place the binder on the mantelpiece\nAction: Play[put binder on mantelpiece]\n\nObservation: You put the binder on the mantelpiece.\nYour score has just gone up by one point.\n*** The End ***\nThought: The End has occurred\nAction: Finish[yes]\n\n\"\"\"", "\"\"\"\\n\\nSetup: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"LLM wrapper around a Databricks serving endpoint or a cluster driver proxy app.\n    It supports two endpoint types:\n\n    * **Serving endpoint** (recommended for both production and development).\n      We assume that an LLM was registered and deployed to a serving endpoint.\n      To wrap it as an LLM you must have \"Can Query\" permission to the endpoint.\n      Set ``endpoint_name`` accordingly and do not set ``cluster_id`` and\n      ``cluster_driver_port``.\n      The expected model signature is:\n\n      * inputs::\n\n          [{\"name\": \"prompt\", \"type\": \"string\"},\n           {\"name\": \"stop\", \"type\": \"list[string]\"}]\n\n      * outputs: ``[{\"type\": \"string\"}]``\n\n    * **Cluster driver proxy app** (recommended for interactive development).\n      One can load an LLM on a Databricks interactive cluster and start a local HTTP\n      server on the driver node to serve the model at ``/`` using HTTP POST method\n      with JSON input/output.\n      Please use a port number between ``[3000, 8000]`` and let the server listen to\n      the driver IP address or simply ``0.0.0.0`` instead of localhost only.\n      To wrap it as an LLM you must have \"Can Attach To\" permission to the cluster.\n      Set ``cluster_id`` and ``cluster_driver_port`` and do not set ``endpoint_name``.\n      The expected server schema (using JSON schema) is:\n\n      * inputs::\n\n          {\"type\": \"object\",\n           \"properties\": {\n              \"prompt\": {\"type\": \"string\"},\n              \"stop\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}}},\n           \"required\": [\"prompt\"]}`\n\n      * outputs: ``{\"type\": \"string\"}``\n\n    If the endpoint model signature is different or you want to set extra params,\n    you can use `transform_input_fn` and `transform_output_fn` to apply necessary\n    transformations before and after the query.\n    \"\"\"", "\"\"\"Databricks workspace hostname.\n    If not provided, the default value is determined by\n\n    * the ``DATABRICKS_HOST`` environment variable if present, or\n    * the hostname of the current Databricks workspace if running inside\n      a Databricks notebook attached to an interactive cluster in \"single user\"\n      or \"no isolation shared\" mode.\n    \"\"\"", "\"\"\"Databricks personal access token.\n    If not provided, the default value is determined by\n\n    * the ``DATABRICKS_TOKEN`` environment variable if present, or\n    * an automatically generated temporary token if running inside a Databricks\n      notebook attached to an interactive cluster in \"single user\" or\n      \"no isolation shared\" mode.\n    \"\"\"", "\"\"\"Name of the model serving endpoint.\n    You must specify the endpoint name to connect to a model serving endpoint.\n    You must not set both ``endpoint_name`` and ``cluster_id``.\n    \"\"\"", "\"\"\"ID of the cluster if connecting to a cluster driver proxy app.\n    If neither ``endpoint_name`` nor ``cluster_id`` is not provided and the code runs\n    inside a Databricks notebook attached to an interactive cluster in \"single user\"\n    or \"no isolation shared\" mode, the current cluster ID is used as default.\n    You must not set both ``endpoint_name`` and ``cluster_id``.\n    \"\"\"", "\"\"\"The port number used by the HTTP server running on the cluster driver node.\n    The server should listen on the driver IP address or simply ``0.0.0.0`` to connect.\n    We recommend the server using a port number between ``[3000, 8000]``.\n    \"\"\"", "\"\"\"A function that transforms ``{prompt, stop, **kwargs}`` into a JSON-compatible\n    request object that the endpoint accepts.\n    For example, you can apply a prompt template to the input prompt.\n    \"\"\"", "\"\"\"A function that transforms the output from the endpoint to the generated text.\n    \"\"\"", "\"\"\"Queries the LLM endpoint with the given prompt and stop sequence.\"\"\"", "\"\"\"Question: What is the elevation range for the area that the eastern sector of the Colorado orogeny extends into?\nThought: I need to search Colorado orogeny, find the area that the eastern sector of the Colorado orogeny extends into, then find the elevation range of the area.\nAction: Search[Colorado orogeny]\nObservation: The Colorado orogeny was an episode of mountain building (an orogeny) in Colorado and surrounding areas.\nThought: It does not mention the eastern sector. So I need to look up eastern sector.\nAction: Lookup[eastern sector]\nObservation: (Result 1 / 1) The eastern sector extends into the High Plains and is called the Central Plains orogeny.\nThought: The eastern sector of Colorado orogeny extends into the High Plains. So I need to search High Plains and find its elevation range.\nAction: Search[High Plains]\nObservation: High Plains refers to one of two distinct land regions\nThought: I need to instead search High Plains (United States).\nAction: Search[High Plains (United States)]\nObservation: The High Plains are a subregion of the Great Plains. From east to west, the High Plains rise in elevation from around 1,800 to 7,000 ft (550 to 2,130 m).[3]\nThought: High Plains rise in elevation from around 1,800 to 7,000 ft, so the answer is 1,800 to 7,000 ft.\nAction: Finish[1,800 to 7,000 ft]\"\"\"", "\"\"\"Question: Musician and satirist Allie Goertz wrote a song about the \"The Simpsons\" character Milhouse, who Matt Groening named after who?\nThought: The question simplifies to \"The Simpsons\" character Milhouse is named after who. I only need to search Milhouse and find who it is named after.\nAction: Search[Milhouse]\nObservation: Milhouse Mussolini Van Houten is a recurring character in the Fox animated television series The Simpsons voiced by Pamela Hayden and created by Matt Groening.\nThought: The paragraph does not tell who Milhouse is named after, maybe I can look up \"named after\".\nAction: Lookup[named after]\nObservation: (Result 1 / 1) Milhouse was named after U.S. president Richard Nixon, whose middle name was Milhous.\nThought: Milhouse was named after U.S. president Richard Nixon, so the answer is Richard Nixon.\nAction: Finish[Richard Nixon]\"\"\"", "\"\"\"Question: Which documentary is about Finnish rock groups, Adam Clayton Powell or The Saimaa Gesture?\nThought: I need to search Adam Clayton Powell and The Saimaa Gesture, and find which documentary is about Finnish rock groups.\nAction: Search[Adam Clayton Powell]\nObservation: Could not find [Adam Clayton Powell]. Similar: [\u2019Adam Clayton Powell III\u2019, \u2019Seventh Avenue (Manhattan)\u2019, \u2019Adam Clayton Powell Jr. State Office Building\u2019, \u2019Isabel Washington Powell\u2019, \u2019Adam Powell\u2019, \u2019Adam Clayton Powell (film)\u2019, \u2019Giancarlo Esposito\u2019].\nThought: To find the documentary, I can search Adam Clayton Powell (film).\nAction: Search[Adam Clayton Powell (film)]\nObservation: Adam Clayton Powell is a 1989 American documentary film directed by Richard Kilberg. The film is about the rise and fall of influential African-American politician Adam Clayton Powell Jr.[3][4] It was later aired as part of the PBS series The American Experience.\nThought: Adam Clayton Powell (film) is a documentary about an African-American politician, not Finnish rock groups. So the documentary about Finnish rock groups must instead be The Saimaa Gesture.\nAction: Finish[The Saimaa Gesture]\"\"\"", "\"\"\"Question: What profession does Nicholas Ray and Elia Kazan have in common?\nThought: I need to search Nicholas Ray and Elia Kazan, find their professions, then find the profession they have in common.\nAction: Search[Nicholas Ray]\nObservation: Nicholas Ray (born Raymond Nicholas Kienzle Jr., August 7, 1911 - June 16, 1979) was an American film director, screenwriter, and actor best known for the 1955 film Rebel Without a Cause.\nThought: Professions of Nicholas Ray are director, screenwriter, and actor. I need to search Elia Kazan next and find his professions.\nAction: Search[Elia Kazan]\nObservation: Elia Kazan was an American film and theatre director, producer, screenwriter and actor.\nThought: Professions of Elia Kazan are director, producer, screenwriter, and actor. So profession Nicholas Ray and Elia Kazan have in common is director, screenwriter, and actor.\nAction: Finish[director, screenwriter, actor]\"\"\"", "\"\"\"Question: Which magazine was started first Arthur\u2019s Magazine or First for Women?\nThought: I need to search Arthur\u2019s Magazine and First for Women, and find which was started first.\nAction: Search[Arthur\u2019s Magazine]\nObservation: Arthur\u2019s Magazine (1844-1846) was an American literary periodical published in Philadelphia in the 19th century.\nThought: Arthur\u2019s Magazine was started in 1844. I need to search First for Women next.\nAction: Search[First for Women]\nObservation: First for Women is a woman\u2019s magazine published by Bauer Media Group in the USA.[1] The magazine was started in 1989.\nThought: First for Women was started in 1989. 1844 (Arthur\u2019s Magazine) < 1989 (First for Women), so Arthur\u2019s Magazine was started first.\nAction: Finish[Arthur\u2019s Magazine]\"\"\"", "\"\"\"Question: Were Pavel Urysohn and Leonid Levin known for the same type of work?\nThought: I need to search Pavel Urysohn and Leonid Levin, find their types of work, then find if they are the same.\nAction: Search[Pavel Urysohn]\nObservation: Pavel Samuilovich Urysohn (February 3, 1898 - August 17, 1924) was a Soviet mathematician who is best known for his contributions in dimension theory.\nThought: Pavel Urysohn is a mathematician. I need to search Leonid Levin next and find its type of work.\nAction: Search[Leonid Levin]\nObservation: Leonid Anatolievich Levin is a Soviet-American mathematician and computer scientist.\nThought: Leonid Levin is a mathematician and computer scientist. So Pavel Urysohn and Leonid Levin have the same type of work.\nAction: Finish[yes]\"\"\"", "\"\"\"\\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"An AI language model has been given access to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n[TOOL_DESCRIPTIONS]\n{tool_descriptions}\n[END_TOOL_DESCRIPTIONS]\n\nThe question the human asked the AI model was:\n[QUESTION]\n{question}\n[END_QUESTION]{reference}\n\nThe AI language model decided to use the following set of tools to answer the question:\n[AGENT_TRAJECTORY]\n{agent_trajectory}\n[END_AGENT_TRAJECTORY]\n\nThe AI language model's final answer to the question was:\n[RESPONSE]\n{answer}\n[END_RESPONSE]\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"An AI language model has been given access to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n[TOOL_DESCRIPTIONS]\nTool 1:\nName: Search\nDescription: useful for when you need to ask with search\n\nTool 2:\nName: Lookup\nDescription: useful for when you need to ask with lookup\n\nTool 3:\nName: Calculator\nDescription: useful for doing calculations\n\nTool 4:\nName: Search the Web (SerpAPI)\nDescription: useful for when you need to answer questions about current events\n[END_TOOL_DESCRIPTIONS]\n\nThe question the human asked the AI model was: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\n\nThe AI language model decided to use the following set of tools to answer the question:\n[AGENT_TRAJECTORY]\nStep 1:\nTool used: Search the Web (SerpAPI)\nTool input: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\nTool output: The Statue of Liberty was given to the United States by France, as a symbol of the two countries' friendship. It was erected atop an American-designed ...\n[END_AGENT_TRAJECTORY]\n\n[RESPONSE]\nThe AI language model's final answer to the question was: There are different ways to measure the length of the United States, but if we use the distance between the Statue of Liberty and the westernmost point of the contiguous United States (Cape Alava, Washington), which is approximately 2,857 miles (4,596 km), and assume that the Statue of Liberty is 305 feet (93 meters) tall, then the statue would stretch across the United States approximately 17.5 times if laid end to end.\n[END_RESPONSE]\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"First, let's evaluate the final answer. The final uses good reasoning but is wrong. 2,857 divided by 305 is not 17.5.\\\nThe model should have used the calculator to figure this out. Second does the model use a logical sequence of tools to answer the question?\\\nThe way model uses the search is not helpful. The model should have used the search tool to figure the width of the US or the height of the statue.\\\nThe model didn't use the calculator tool and gave an incorrect answer. The search API should be used for current events or specific questions.\\\nThe tools were not used in a helpful way. The model did not use too many steps to answer the question.\\\nThe model did not use the appropriate tools to answer the question.\\\n    \nJudgment: Given the good reasoning in the final answer but otherwise poor performance, we give the model a score of 2.\n\nScore: 2\"\"\"", "\"\"\"An AI language model has been given access to a set of tools to help answer a user's question.\n\nThe question the human asked the AI model was:\n[QUESTION]\n{question}\n[END_QUESTION]{reference}\n\nThe AI language model decided to use the following set of tools to answer the question:\n[AGENT_TRAJECTORY]\n{agent_trajectory}\n[END_AGENT_TRAJECTORY]\n\nThe AI language model's final answer to the question was:\n[RESPONSE]\n{answer}\n[END_RESPONSE]\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"Redis-backed Entity store. Entities get a TTL of 1 day by default, and\n    that TTL is extended by 3 days every time the entity is read back.\n    \"\"\"", "f\"\"\"\n            CREATE TABLE IF NOT EXISTS {self.full_table_name} (\n                key TEXT PRIMARY KEY,\n                value TEXT\n            )\n        \"\"\"", "f\"\"\"\n            SELECT value\n            FROM {self.full_table_name}\n            WHERE key = ?\n        \"\"\"", "f\"\"\"\n            INSERT OR REPLACE INTO {self.full_table_name} (key, value)\n            VALUES (?, ?)\n        \"\"\"", "f\"\"\"\n            DELETE FROM {self.full_table_name}\n            WHERE key = ?\n        \"\"\"", "f\"\"\"\n            SELECT 1\n            FROM {self.full_table_name}\n            WHERE key = ?\n            LIMIT 1\n        \"\"\"", "\"\"\"Entity extractor & summarizer memory.\n\n    Extracts named entities from the recent chat history and generates summaries.\n    With a swapable entity store, persisting entities across conversations.\n    Defaults to an in-memory entity store, and can be swapped out for a Redis,\n    SQLite, or other entity store.\n    \"\"\"", "\"\"\"\n        Returns chat history and all generated entities with summaries if available,\n        and updates or clears the recent entity cache.\n\n        New entity name can be found when calling this method, before the entity\n        summaries are generated, so the entity cache values may be empty if no entity\n        descriptions are generated yet.\n        \"\"\"", "\"\"\"\n        Save context from this conversation history to the entity store.\n\n        Generates a summary for each entity in the entity cache by prompting\n        the model, and saves these summaries to the entity store.\n        \"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "'''\nQ: Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\"\"\"\n    money_initial = 23\n    bagels = 5\n    bagel_cost = 3\n    money_spent = bagels * bagel_cost\n    money_left = money_initial - money_spent\n    result = money_left\n    return result\n\n\n\n\n\nQ: Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\"\"\"\n    golf_balls_initial = 58\n    golf_balls_lost_tuesday = 23\n    golf_balls_lost_wednesday = 2\n    golf_balls_left = golf_balls_initial - golf_balls_lost_tuesday - golf_balls_lost_wednesday\n    result = golf_balls_left\n    return result\n\n\n\n\n\nQ: There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\"\"\"\n    computers_initial = 9\n    computers_per_day = 5\n    num_days = 4  # 4 days between monday and thursday\n    computers_added = computers_per_day * num_days\n    computers_total = computers_initial + computers_added\n    result = computers_total\n    return result\n\n\n\n\n\nQ: Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\"\"\"\n    toys_initial = 5\n    mom_toys = 2\n    dad_toys = 2\n    total_received = mom_toys + dad_toys\n    total_toys = toys_initial + total_received\n    result = total_toys\n    return result\n\n\n\n\n\nQ: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\"\"\"\n    jason_lollipops_initial = 20\n    jason_lollipops_after = 12\n    denny_lollipops = jason_lollipops_initial - jason_lollipops_after\n    result = denny_lollipops\n    return result\n\n\n\n\n\nQ: Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\"\"\"\n    leah_chocolates = 32\n    sister_chocolates = 42\n    total_chocolates = leah_chocolates + sister_chocolates\n    chocolates_eaten = 35\n    chocolates_left = total_chocolates - chocolates_eaten\n    result = chocolates_left\n    return result\n\n\n\n\n\nQ: If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\"\"\"\n    cars_initial = 3\n    cars_arrived = 2\n    total_cars = cars_initial + cars_arrived\n    result = total_cars\n    return result\n\n\n\n\n\nQ: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\"\"\"\n    trees_initial = 15\n    trees_after = 21\n    trees_added = trees_after - trees_initial\n    result = trees_added\n    return result\n\n\n\n\n\nQ: {question}\n\n# solution in Python:\n'''", "\"question\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\nIn addition to giving an answer, also return a score of how fully it answered the user's question. This should be in the following format:\n\nQuestion: [question here]\nHelpful Answer: [answer here]\nScore: [score between 0 and 100]\n\nHow to determine the score:\n- Higher is a better answer\n- Better responds fully to the asked question, with sufficient level of detail\n- If you do not know the answer based on the context, that should be a score of 0\n- Don't be overconfident!\n\nExample #1\n\nContext:\n---------\nApples are red\n---------\nQuestion: what color are apples?\nHelpful Answer: red\nScore: 100\n\nExample #2\n\nContext:\n---------\nit was night and the witness forgot his glasses. he was not sure if it was a sports car or an suv\n---------\nQuestion: what type was the car?\nHelpful Answer: a sports car or an suv\nScore: 60\n\nExample #3\n\nContext:\n---------\nPears are either red or orange\n---------\nQuestion: what color are apples?\nHelpful Answer: This document does not answer the question\nScore: 0\n\nBegin!\n\nContext:\n---------\n{context}\n---------\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Extract all entities from the following text. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return.\n\nEXAMPLE\ni'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\ni'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Sam.\nOutput: Langchain, Sam\nEND OF EXAMPLE\n\nBegin!\n\n{input}\nOutput:\"\"\"", "\"\"\"Use the following knowledge triplets to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Task:Generate Cypher statement to query a graph database.\nInstructions:\nUse only the provided relationship types and properties in the schema.\nDo not use any other relationship types or properties that are not provided.\nSchema:\n{schema}\nNote: Do not include any explanations or apologies in your responses.\nDo not respond to any questions that might ask anything else than for you to construct a Cypher statement.\nDo not include any text except the generated Cypher statement.\n\nThe question is:\n{question}\"\"\"", "\"question\"", "\"question\"", "\"\"\"\nInstructions:\n\nGenerate statement with K\u00f9zu Cypher dialect (rather than standard):\n1. do not use `WHERE EXISTS` clause to check the existence of a property because K\u00f9zu database has a fixed schema.\n2. do not omit relationship pattern. Always use `()-[]->()` instead of `()->()`.\n3. do not include any notes or comments even if the statement does not produce the expected result.\n```\\n\"\"\"", "\"question\"", "\"question\"", "\"\"\"You are an assistant that helps to form nice and human understandable answers.\nThe information part contains the provided information that you must use to construct an answer.\nThe provided information is authoritative, you must never doubt it or try to use your internal knowledge to correct it.\nMake the answer sound as a response to the question. Do not mention that you based the result on the given information.\nIf the provided information is empty, say that you don't know the answer.\nInformation:\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Task: Identify the intent of a prompt and return the appropriate SPARQL query type.\nYou are an assistant that distinguishes different types of prompts and returns the corresponding SPARQL query types.\nConsider only the following query types:\n* SELECT: this query type corresponds to questions\n* UPDATE: this query type corresponds to all requests for deleting, inserting, or changing triples\nNote: Be as concise as possible.\nDo not include any explanations or apologies in your responses.\nDo not respond to any questions that ask for anything else than for you to identify a SPARQL query type.\nDo not include any unnecessary whitespaces or any text except the query type, i.e., either return 'SELECT' or 'UPDATE'.\n\nThe prompt is:\n{prompt}\nHelpful Answer:\"\"\"", "\"\"\"Task: Generate a SPARQL SELECT statement for querying a graph database.\nFor instance, to find all email addresses of John Doe, the following query in backticks would be suitable:\n```\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nSELECT ?email\nWHERE {{\n    ?person foaf:name \"John Doe\" .\n    ?person foaf:mbox ?email .\n}}\n```\nInstructions:\nUse only the node types and properties provided in the schema.\nDo not use any node types and properties that are not explicitly provided.\nInclude all necessary prefixes.\nSchema:\n{schema}\nNote: Be as concise as possible.\nDo not include any explanations or apologies in your responses.\nDo not respond to any questions that ask for anything else than for you to construct a SPARQL query.\nDo not include any text except the SPARQL query generated.\n\nThe question is:\n{prompt}\"\"\"", "\"\"\"Task: Generate a SPARQL UPDATE statement for updating a graph database.\nFor instance, to add 'jane.doe@foo.bar' as a new email address for Jane Doe, the following query in backticks would be suitable:\n```\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nINSERT {{\n    ?person foaf:mbox <mailto:jane.doe@foo.bar> .\n}}\nWHERE {{\n    ?person foaf:name \"Jane Doe\" .\n}}\n```\nInstructions:\nMake the query as short as possible and avoid adding unnecessary triples.\nUse only the node types and properties provided in the schema.\nDo not use any node types and properties that are not explicitly provided.\nInclude all necessary prefixes.\nSchema:\n{schema}\nNote: Be as concise as possible.\nDo not include any explanations or apologies in your responses.\nDo not respond to any questions that ask for anything else than for you to construct a SPARQL query.\nReturn only the generated SPARQL query, nothing else.\n\nThe information to be inserted is:\n{prompt}\"\"\"", "\"\"\"Task: Generate a natural language response from the results of a SPARQL query.\nYou are an assistant that creates well-written and human understandable answers.\nThe information part contains the information provided, which you can use to construct an answer.\nThe information provided is authoritative, you must never doubt it or try to use your internal knowledge to correct it.\nMake your response sound like the information is coming from an AI assistant, but don't add any information.\nInformation:\n{context}\n\nQuestion: {prompt}\nHelpful Answer:\"\"\"", "\"\"\"\\\nGiven a query to a question answering system select the system best suited \\\nfor the input. You will be given the names of the available systems and a description \\\nof what questions the system is best suited for. You may also revise the original \\\ninput if you think that revising it will ultimately lead to a better response.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the question answering system to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\"", "\"\"\"Configuration for a given run evaluator.\n\n    Parameters\n    ----------\n    evaluator_type : EvaluatorType\n        The type of evaluator to use.\n\n    Methods\n    -------\n    get_kwargs()\n        Get the keyword arguments for the evaluator configuration.\n\n    \"\"\"", "\"\"\"Get the keyword arguments for the load_evaluator call.\n\n        Returns\n        -------\n        Dict[str, Any]\n            The keyword arguments for the load_evaluator call.\n\n        \"\"\"", "\"\"\"Configuration for a run evaluation.\n\n    Parameters\n    ----------\n    evaluators : List[Union[EvaluatorType, EvalConfig]]\n        Configurations for which evaluators to apply to the dataset run.\n        Each can be the string of an :class:`EvaluatorType <langchain.evaluation.schema.EvaluatorType>`, such\n        as EvaluatorType.QA, the evaluator type string (\"qa\"), or a configuration for a\n        given evaluator (e.g., :class:`RunEvalConfig.QA <langchain.smith.evaluation.config.RunEvalConfig.QA>`).\n\n    custom_evaluators : Optional[List[Union[RunEvaluator, StringEvaluator]]]\n        Custom evaluators to apply to the dataset run.\n\n    reference_key : Optional[str]\n        The key in the dataset run to use as the reference string.\n        If not provided, it will be inferred automatically.\n\n    prediction_key : Optional[str]\n        The key from the traced run's outputs dictionary to use to\n        represent the prediction. If not provided, it will be inferred\n        automatically.\n\n    input_key : Optional[str]\n        The key from the traced run's inputs dictionary to use to represent the\n        input. If not provided, it will be inferred automatically.\n\n    eval_llm : Optional[BaseLanguageModel]\n        The language model to pass to any evaluators that use a language model.\n    \"\"\"", "\"\"\"Configurations for which evaluators to apply to the dataset run.\n    Each can be the string of an\n    :class:`EvaluatorType <langchain.evaluation.schema.EvaluatorType>`, such\n    as `EvaluatorType.QA`, the evaluator type string (\"qa\"), or a configuration for a\n    given evaluator\n    (e.g., \n    :class:`RunEvalConfig.QA <langchain.smith.evaluation.config.RunEvalConfig.QA>`).\"\"\"", "\"\"\"Custom evaluators to apply to the dataset run.\"\"\"", "\"\"\"The key in the dataset run to use as the reference string.\n    If not provided, we will attempt to infer automatically.\"\"\"", "\"\"\"The key from the traced run's outputs dictionary to use to\n    represent the prediction. If not provided, it will be inferred\n    automatically.\"\"\"", "\"\"\"The key from the traced run's inputs dictionary to use to represent the\n    input. If not provided, it will be inferred automatically.\"\"\"", "\"\"\"The language model to pass to any evaluators that require one.\"\"\"", "\"\"\"Configuration for a reference-free criteria evaluator.\n\n        Parameters\n        ----------\n        criteria : Optional[CRITERIA_TYPE]\n            The criteria to evaluate.\n        llm : Optional[BaseLanguageModel]\n            The language model to use for the evaluation chain.\n\n        \"\"\"", "\"\"\"Configuration for a labeled (with references) criteria evaluator.\n\n        Parameters\n        ----------\n        criteria : Optional[CRITERIA_TYPE]\n            The criteria to evaluate.\n        llm : Optional[BaseLanguageModel]\n            The language model to use for the evaluation chain.\n        \"\"\"", "\"\"\"Configuration for an embedding distance evaluator.\n\n        Parameters\n        ----------\n        embeddings : Optional[Embeddings]\n            The embeddings to use for computing the distance.\n\n        distance_metric : Optional[EmbeddingDistanceEnum]\n            The distance metric to use for computing the distance.\n\n        \"\"\"", "\"\"\"Configuration for a QA evaluator.\n\n        Parameters\n        ----------\n        prompt : Optional[BasePromptTemplate]\n            The prompt template to use for generating the question.\n        llm : Optional[BaseLanguageModel]\n            The language model to use for the evaluation chain.\n        \"\"\"", "\"\"\"Configuration for a context-based QA evaluator.\n\n        Parameters\n        ----------\n        prompt : Optional[BasePromptTemplate]\n            The prompt template to use for generating the question.\n        llm : Optional[BaseLanguageModel]\n            The language model to use for the evaluation chain.\n\n        \"\"\"", "\"\"\"Configuration for a context-based QA evaluator.\n\n        Parameters\n        ----------\n        prompt : Optional[BasePromptTemplate]\n            The prompt template to use for generating the question.\n        llm : Optional[BaseLanguageModel]\n            The language model to use for the evaluation chain.\n\n        \"\"\"", "\"\"\"\n    Input to this tool is a detailed and correct SQL query, output is a result from the Spark SQL.\n    If the query is not correct, an error message will be returned.\n    If an error is returned, rewrite the query, check the query, and try again.\n    \"\"\"", "\"\"\"Execute the query, return the results or an error message.\"\"\"", "\"\"\"\n    Input to this tool is a comma-separated list of tables, output is the schema and sample rows for those tables.\n    Be sure that the tables actually exist by calling list_tables_sql_db first!\n\n    Example Input: \"table1, table2, table3\"\n    \"\"\"", "\"\"\"Get the schema for tables in a comma-separated list.\"\"\"", "\"Input is an empty string, output is a comma separated list of tables in the Spark SQL.\"", "\"\"\"Get the schema for a specific table.\"\"\"", "\"\"\"\n    Use this tool to double check if your query is correct before executing it.\n    Always use this tool before executing a query with query_sql_db!\n    \"\"\"", "\"query\"", "\"query\"", "\"\"\"Use the LLM to check the query.\"\"\"", "\"\"\"You are a teacher coming up with questions to ask on a quiz. \nGiven the following document, please generate a question and answer based on that document.\n\nExample Format:\n<Begin Document>\n...\n<End Document>\nQUESTION: question here\nANSWER: answer here\n\nThese questions should be detailed and be based explicitly on information in the document. Begin!\n\n<Begin Document>\n{doc}\n<End Document>\"\"\"", "r\"QUESTION: (.*?)\\n+ANSWER: (.*)\"", "\"query\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"How to parse the output of calling an LLM on this formatted prompt.\"\"\"", "\"Cannot have an input variable named 'stop', as it is used internally,\"", "\"\"\"Return a partial of the prompt template.\"\"\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Format a document into a string based on a prompt template.\n\n    First, this pulls information from the document from two sources:\n\n    1. `page_content`:\n        This takes the information from the `document.page_content`\n        and assigns it to a variable named `page_content`.\n    2. metadata:\n        This takes information from `document.metadata` and assigns\n        it to variables of the same name.\n\n    Those variables are then passed into the `prompt` to produce a formatted string.\n\n    Args:\n        doc: Document, the page_content and metadata will be used to create\n            the final string.\n        prompt: BasePromptTemplate, will be used to format the page_content\n            and metadata into the final string.\n\n    Returns:\n        string of the document formatted.\n\n    Example:\n        .. code-block:: python\n\n            from langchain.schema import Document\n            from langchain.prompts import PromptTemplate\n            doc = Document(page_content=\"This is a joke\", metadata={\"page\": \"1\"})\n            prompt = PromptTemplate.from_template(\"Page {page}: {page_content}\")\n            format_document(doc, prompt)\n            >>> \"Page 1: This is a joke\"\n    \"\"\"", "\"\"\"\n# Generate Python3 Code to solve problems\n# Q: On the nightstand, there is a red pencil, a purple mug, a burgundy keychain, a fuchsia teddy bear, a black plate, and a blue stress ball. What color is the stress ball?\n# Put objects into a dictionary for quick look up\nobjects = dict()\nobjects['pencil'] = 'red'\nobjects['mug'] = 'purple'\nobjects['keychain'] = 'burgundy'\nobjects['teddy bear'] = 'fuchsia'\nobjects['plate'] = 'black'\nobjects['stress ball'] = 'blue'\n\n# Look up the color of stress ball\nstress_ball_color = objects['stress ball']\nanswer = stress_ball_color\n\n\n# Q: On the table, you see a bunch of objects arranged in a row: a purple paperclip, a pink stress ball, a brown keychain, a green scrunchiephone charger, a mauve fidget spinner, and a burgundy pen. What is the color of the object directly to the right of the stress ball?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('paperclip', 'purple')] * 1\nobjects += [('stress ball', 'pink')] * 1\nobjects += [('keychain', 'brown')] * 1\nobjects += [('scrunchiephone charger', 'green')] * 1\nobjects += [('fidget spinner', 'mauve')] * 1\nobjects += [('pen', 'burgundy')] * 1\n\n# Find the index of the stress ball\nstress_ball_idx = None\nfor i, object in enumerate(objects):\n    if object[0] == 'stress ball':\n        stress_ball_idx = i\n        break\n\n# Find the directly right object\ndirect_right = objects[i+1]\n\n# Check the directly right object's color\ndirect_right_color = direct_right[1]\nanswer = direct_right_color\n\n\n# Q: On the nightstand, you see the following items arranged in a row: a teal plate, a burgundy keychain, a yellow scrunchiephone charger, an orange mug, a pink notebook, and a grey cup. How many non-orange items do you see to the left of the teal item?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('plate', 'teal')] * 1\nobjects += [('keychain', 'burgundy')] * 1\nobjects += [('scrunchiephone charger', 'yellow')] * 1\nobjects += [('mug', 'orange')] * 1\nobjects += [('notebook', 'pink')] * 1\nobjects += [('cup', 'grey')] * 1\n\n# Find the index of the teal item\nteal_idx = None\nfor i, object in enumerate(objects):\n    if object[1] == 'teal':\n        teal_idx = i\n        break\n\n# Find non-orange items to the left of the teal item\nnon_orange = [object for object in objects[:i] if object[1] != 'orange']\n\n# Count number of non-orange objects\nnum_non_orange = len(non_orange)\nanswer = num_non_orange\n\n\n# Q: {question}\n\"\"\"", "\"question\"", "\"\"\"You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:\"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n______________________\n{context}\"\"\"", "\"{question}\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\n\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\n\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\n=========\nFINAL ANSWER: This Agreement is governed by English law.\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\n\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\n\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\n\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n______________________\n{summaries}\"\"\"", "\"{question}\"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the student's answer, and the true answer, and are asked to score the student answer as either CORRECT or INCORRECT.\n\nExample Format:\nQUESTION: question here\nSTUDENT ANSWER: student's answer here\nTRUE ANSWER: true answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nSTUDENT ANSWER: {result}\nTRUE ANSWER: {answer}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\nWrite out in a step by step manner your reasoning to be sure that your conclusion is correct. Avoid simply stating the correct answer at the outset.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nEXPLANATION: step by step reasoning here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nEXPLANATION:\"\"\"", "\"query\"", "\"\"\"You are comparing a submitted answer to an expert answer on a given SQL coding question. Here is the data:\n[BEGIN DATA]\n***\n[Question]: {query}\n***\n[Expert]: {answer}\n***\n[Submission]: {result}\n***\n[END DATA]\nCompare the content and correctness of the submitted SQL with the expert answer. Ignore any differences in whitespace, style, or output column names. The submitted answer may either be correct or incorrect. Determine which case applies. First, explain in detail the similarities or differences between the expert answer and the submission, ignoring superficial aspects such as whitespace, style or output column names. Do not state the final answer in your initial explanation. Then, respond with either \"CORRECT\" or \"INCORRECT\" (without quotes or punctuation) on its own line. This should correspond to whether the submitted SQL and the expert answer are semantically the same or different, respectively. Then, repeat your final answer on a new line.\"\"\"", "\"query\"", "\"\"\"\\\nGiven a raw text input to a language model select the model prompt best suited for \\\nthe input. You will be given the names of the available prompts and a description of \\\nwhat the prompt is best suited for. You may also revise the original input if you \\\nthink that revising it will ultimately lead to a better response from the language \\\nmodel.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the prompt to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\"", "\"\"\"You are a planner that plans a sequence of API calls to assist with user queries against an API.\n\nYou should:\n1) evaluate whether the user query can be solved by the API documentated below. If no, say why.\n2) if yes, generate a plan of API calls and say what they are doing step by step.\n3) If the plan includes a DELETE call, you should always return an ask from the User for authorization first unless the User has specifically asked to delete something.\n\nYou should only use API endpoints documented below (\"Endpoints you can use:\").\nYou can only use the DELETE tool if the User has specifically asked to delete something. Otherwise, you should return a request authorization from the User first.\nSome user queries can be resolved in a single API call, but some will require several API calls.\nThe plan will be passed to an API controller that can format it into web requests and return the responses.\n\n----\n\nHere are some examples:\n\nFake endpoints for examples:\nGET /user to get information about the current user\nGET /products/search search across products\nPOST /users/{{id}}/cart to add products to a user's cart\nPATCH /users/{{id}}/cart to update a user's cart\nDELETE /users/{{id}}/cart to delete a user's cart\n\nUser query: tell me a joke\nPlan: Sorry, this API's domain is shopping, not comedy.\n\nUser query: I want to buy a couch\nPlan: 1. GET /products with a query param to search for couches\n2. GET /user to find the user's id\n3. POST /users/{{id}}/cart to add a couch to the user's cart\n\nUser query: I want to add a lamp to my cart\nPlan: 1. GET /products with a query param to search for lamps\n2. GET /user to find the user's id\n3. PATCH /users/{{id}}/cart to add a lamp to the user's cart\n\nUser query: I want to delete my cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? Yes, proceed.\n3. DELETE /users/{{id}}/cart to delete the user's cart\n\nUser query: I want to start a new cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? No, ask for authorization.\n3. Are you sure you want to delete your cart? \n----\n\nHere are endpoints you can use. Do not reference any of the endpoints above.\n\n{endpoints}\n\n----\n\nUser query: {query}\nPlan:\"\"\"", "f\"Can be used to generate the right API calls to assist with a user query, like {API_PLANNER_TOOL_NAME}(query). Should always be called before trying to call the API controller.\"", "\"\"\"You are an agent that gets a sequence of API calls and given their documentation, should execute them and return the final response.\nIf you cannot complete them and run into issues, you should explain the issue. If you're able to resolve an API call, you can retry the API call. When interacting with API objects, you should extract ids for inputs to other API calls but ids and names for outputs returned to the User.\n\n\nHere is documentation on the API:\nBase url: {api_url}\nEndpoints:\n{api_docs}\n\n\nHere are tools to execute requests against the API: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nPlan: the plan of API calls to execute\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the output of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing the plan (or, I cannot finish executing the plan without knowing some other information.)\nFinal Answer: the final output from executing the plan or missing information I'd need to re-plan correctly.\n\n\nBegin!\n\nPlan: {input}\nThought:\n{agent_scratchpad}\n\"\"\"", "\"\"\"You are an agent that assists with user queries against API, things like querying information or creating resources.\nSome user queries can be resolved in a single API call, particularly if you can find appropriate params from the OpenAPI spec; though some require several API calls.\nYou should always plan your API calls first, and then execute the plan second.\nIf the plan includes a DELETE call, be sure to ask the User for authorization first unless the User has specifically asked to delete something.\nYou should never return information without executing the api_controller tool.\n\n\nHere are the tools to plan and execute API requests: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nUser query: the query a User wants help with related to the API\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing a plan and have the information the user asked for or the data the user asked to create\nFinal Answer: the final output from executing the plan\n\n\nExample:\nUser query: can you add some trendy stuff to my shopping cart.\nThought: I should plan API calls first.\nAction: api_planner\nAction Input: I need to find the right API calls to add trendy items to the users shopping cart\nObservation: 1) GET /items with params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\nThought: I'm ready to execute the API calls.\nAction: api_controller\nAction Input: 1) GET /items params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\n...\n\nBegin!\n\nUser query: {input}\nThought: I should generate a plan to help with this query and then copy that plan exactly to the controller.\n{agent_scratchpad}\"\"\"", "\"\"\"Use this to GET content from a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"params\" and \"output_instructions\".\nThe value of \"url\" should be a string. \nThe value of \"params\" should be a dict of the needed and available parameters from the OpenAPI spec related to the endpoint. \nIf parameters are not needed, or not available, leave it empty.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, \nfor example the id(s) for a resource(s) that the GET request fetches.\n\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to POST to a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs you want to POST to the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the POST request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to PATCH content on a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs of the body params available in the OpenAPI spec you want to PATCH the content with at the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the PATCH request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"ONLY USE THIS TOOL WHEN THE USER HAS SPECIFICALLY REQUESTED TO DELETE CONTENT FROM A WEBSITE.\nInput to the tool should be a json string with 2 keys: \"url\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the DELETE request creates.\nAlways use double quotes for strings in the json string.\nONLY USE THIS TOOL IF THE USER HAS SPECIFICALLY REQUESTED TO DELETE SOMETHING.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"\\\n```json\n{\n    \"content\": \"Lyrics of a song\",\n    \"attributes\": {\n        \"artist\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the song artist\"\n        },\n        \"length\": {\n            \"type\": \"integer\",\n            \"description\": \"Length of the song in seconds\"\n        },\n        \"genre\": {\n            \"type\": \"string\",\n            \"description\": \"The song genre, one of \\\"pop\\\", \\\"rock\\\" or \\\"rap\\\"\"\n        }\n    }\n}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"teenager love\",\n    \"filter\": \"and(or(eq(\\\\\"artist\\\\\", \\\\\"Taylor Swift\\\\\"), eq(\\\\\"artist\\\\\", \\\\\"Katy Perry\\\\\")), \\\nlt(\\\\\"length\\\\\", 180), eq(\\\\\"genre\\\\\", \\\\\"pop\\\\\"))\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"\",\n    \"filter\": \"NO_FILTER\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"love\",\n    \"filter\": \"NO_FILTER\",\n    \"limit\": 2\n}}\n```\\\n\"\"\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n{data_source}\n\nUser Query:\n{user_query}\n\nStructured Request:\n{structured_request}\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters only use the attributed names with its function names if there are functions applied on them.\nMake sure that filters only use format `YYYY-MM-DD` when handling timestamp data typed values.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\\\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n    \"limit\": int \\\\ the number of documents to retrieve\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters only use the attributed names with its function names if there are functions applied on them.\nMake sure that filters only use format `YYYY-MM-DD` when handling timestamp data typed values.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\nMake sure the `limit` is always an int value. It is an optional parameter so leave it blank if it is does not make sense.\n\"\"\"", "\"\"\"\\\nYour goal is to structure the user's query to match the request schema provided below.\n\n{schema}\\\n\"\"\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n```json\n{{{{\n    \"content\": \"{content}\",\n    \"attributes\": {attributes}\n}}}}\n```\n\nUser Query:\n{{query}}\n\nStructured Request:\n\"\"\""], "ScorpionBytes~LangChain": ["\"\"\"You are an AI assistant helping a human keep track of facts about relevant people, places, and concepts in their life. Update the summary of the provided entity in the \"Entity\" section based on the last line of your conversation with the human. If you are writing the summary for the first time, return a single sentence.\nThe update should only include facts that are relayed in the last line of conversation about the provided entity, and should only contain facts about the provided entity.\n\nIf there is no new information about the provided entity or the information is not worth noting (not an important or relevant fact to remember long-term), return the existing summary unchanged.\n\nFull conversation history (for context):\n{history}\n\nEntity to summarize:\n{entity}\n\nExisting summary of {entity}:\n{summary}\n\nLast line of conversation:\nHuman: {input}\nUpdated summary:\"\"\"", "\"\"\"Chain for deciding a destination chain and the input to it.\"\"\"", "\"\"\"Map of name to candidate chains that inputs can be routed to.\"\"\"", "\"\"\"Default chain to use when router doesn't map input to one of the destinations.\"\"\"", "\"\"\"{question}\\n\\n\"\"\"", "\"question\"", "\"\"\"Here is a statement:\n{statement}\nMake a bullet point list of the assumptions you made when producing the above statement.\\n\\n\"\"\"", "\"\"\"Here is a bullet point list of assertions:\n{assertions}\nFor each assertion, determine whether it is true or false. If it is false, explain why.\\n\\n\"\"\"", "\"\"\"{checked_assertions}\n\nQuestion: In light of the above assertions and checks, how would you answer the question '{question}'?\n\nAnswer:\"\"\"", "\"question\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Compute ngram overlap score of source and example as sentence_bleu score.\n\n    Use sentence_bleu with method1 smoothing function and auto reweighting.\n    Return float value between 0.0 and 1.0 inclusive.\n    https://www.nltk.org/_modules/nltk/translate/bleu_score.html\n    https://aclanthology.org/P02-1040.pdf\n    \"\"\"", "\"\"\"A list of the examples that the prompt template expects.\"\"\"", "\"\"\"Threshold at which algorithm stops. Set to -1.0 by default.\n\n    For negative threshold:\n    select_examples sorts examples by ngram_overlap_score, but excludes none.\n    For threshold greater than 1.0:\n    select_examples excludes all examples, and returns an empty list.\n    For threshold equal to 0.0:\n    select_examples sorts examples by ngram_overlap_score,\n    and excludes examples with no ngram overlap with input.\n    \"\"\"", "\"Not all the correct dependencies for this ExampleSelect exist\"", "\"\"\"Return list of examples sorted by ngram_overlap_score with input.\n\n        Descending order.\n        Excludes any examples with ngram_overlap_score less than or equal to threshold.\n        \"\"\"", "\"\"\"Setup: You are now playing a fast paced round of TextWorld! Here is your task for\ntoday. First of all, you could, like, try to travel east. After that, take the\nbinder from the locker. With the binder, place the binder on the mantelpiece.\nAlright, thanks!\n\n-= Vault =-\nYou've just walked into a vault. You begin to take stock of what's here.\n\nAn open safe is here. What a letdown! The safe is empty! You make out a shelf.\nBut the thing hasn't got anything on it. What, you think everything in TextWorld\nshould have stuff on it?\n\nYou don't like doors? Why not try going east, that entranceway is unguarded.\n\nThought: I need to travel east\nAction: Play[go east]\nObservation: -= Office =-\nYou arrive in an office. An ordinary one.\n\nYou can make out a locker. The locker contains a binder. You see a case. The\ncase is empty, what a horrible day! You lean against the wall, inadvertently\npressing a secret button. The wall opens up to reveal a mantelpiece. You wonder\nidly who left that here. The mantelpiece is standard. The mantelpiece appears to\nbe empty. If you haven't noticed it already, there seems to be something there\nby the wall, it's a table. Unfortunately, there isn't a thing on it. Hm. Oh well\nThere is an exit to the west. Don't worry, it is unguarded.\n\nThought: I need to take the binder from the locker\nAction: Play[take binder]\nObservation: You take the binder from the locker.\n\nThought: I need to place the binder on the mantelpiece\nAction: Play[put binder on mantelpiece]\n\nObservation: You put the binder on the mantelpiece.\nYour score has just gone up by one point.\n*** The End ***\nThought: The End has occurred\nAction: Finish[yes]\n\n\"\"\"", "\"\"\"\\n\\nSetup: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"LLM wrapper around a Databricks serving endpoint or a cluster driver proxy app.\n    It supports two endpoint types:\n\n    * **Serving endpoint** (recommended for both production and development).\n      We assume that an LLM was registered and deployed to a serving endpoint.\n      To wrap it as an LLM you must have \"Can Query\" permission to the endpoint.\n      Set ``endpoint_name`` accordingly and do not set ``cluster_id`` and\n      ``cluster_driver_port``.\n      The expected model signature is:\n\n      * inputs::\n\n          [{\"name\": \"prompt\", \"type\": \"string\"},\n           {\"name\": \"stop\", \"type\": \"list[string]\"}]\n\n      * outputs: ``[{\"type\": \"string\"}]``\n\n    * **Cluster driver proxy app** (recommended for interactive development).\n      One can load an LLM on a Databricks interactive cluster and start a local HTTP\n      server on the driver node to serve the model at ``/`` using HTTP POST method\n      with JSON input/output.\n      Please use a port number between ``[3000, 8000]`` and let the server listen to\n      the driver IP address or simply ``0.0.0.0`` instead of localhost only.\n      To wrap it as an LLM you must have \"Can Attach To\" permission to the cluster.\n      Set ``cluster_id`` and ``cluster_driver_port`` and do not set ``endpoint_name``.\n      The expected server schema (using JSON schema) is:\n\n      * inputs::\n\n          {\"type\": \"object\",\n           \"properties\": {\n              \"prompt\": {\"type\": \"string\"},\n              \"stop\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}}},\n           \"required\": [\"prompt\"]}`\n\n      * outputs: ``{\"type\": \"string\"}``\n\n    If the endpoint model signature is different or you want to set extra params,\n    you can use `transform_input_fn` and `transform_output_fn` to apply necessary\n    transformations before and after the query.\n    \"\"\"", "\"\"\"Databricks workspace hostname.\n    If not provided, the default value is determined by\n\n    * the ``DATABRICKS_HOST`` environment variable if present, or\n    * the hostname of the current Databricks workspace if running inside\n      a Databricks notebook attached to an interactive cluster in \"single user\"\n      or \"no isolation shared\" mode.\n    \"\"\"", "\"\"\"Databricks personal access token.\n    If not provided, the default value is determined by\n\n    * the ``DATABRICKS_TOKEN`` environment variable if present, or\n    * an automatically generated temporary token if running inside a Databricks\n      notebook attached to an interactive cluster in \"single user\" or\n      \"no isolation shared\" mode.\n    \"\"\"", "\"\"\"Name of the model serving endpont.\n    You must specify the endpoint name to connect to a model serving endpoint.\n    You must not set both ``endpoint_name`` and ``cluster_id``.\n    \"\"\"", "\"\"\"ID of the cluster if connecting to a cluster driver proxy app.\n    If neither ``endpoint_name`` nor ``cluster_id`` is not provided and the code runs\n    inside a Databricks notebook attached to an interactive cluster in \"single user\"\n    or \"no isolation shared\" mode, the current cluster ID is used as default.\n    You must not set both ``endpoint_name`` and ``cluster_id``.\n    \"\"\"", "\"\"\"The port number used by the HTTP server running on the cluster driver node.\n    The server should listen on the driver IP address or simply ``0.0.0.0`` to connect.\n    We recommend the server using a port number between ``[3000, 8000]``.\n    \"\"\"", "\"\"\"A function that transforms ``{prompt, stop, **kwargs}`` into a JSON-compatible\n    request object that the endpoint accepts.\n    For example, you can apply a prompt template to the input prompt.\n    \"\"\"", "\"\"\"A function that transforms the output from the endpoint to the generated text.\n    \"\"\"", "\"\"\"Queries the LLM endpoint with the given prompt and stop sequence.\"\"\"", "\"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\"", "\"Arson is very dangerous and illegal, and should not be condoned. The model should not have asked a follow-up question about which house to burn down instead it should told the human that arson is illegal and dangerous. Critique Needed.\"", "\"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\"", "\"I would strongly advise against burning your house down, as arson is considered a serious crime. Doing so could harm yourself and others. Please reach out to a mental health professional if you are considering this.\"", "\"is it really necessary to ask for consent during sex every time? Answer:\"", "\"While it is ideal to ask for consent every time before engaging in a sexual act, it isn\u2019t strictly necessary as long as your partner has given ongoing consent via words, body language, or other cues. That said, it\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.\"", "\"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\"", "\"The human wants to know whether they really need consent to have sex. The answer is definitely always yes, but the model\u2019s response could be interpreted as saying that it isn\u2019t strictly necessary. Furthermore, the model should have pointed out that one should never have sex with underage children no matter what, since children are too young to give consent. Critique Needed.\"", "\"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\"", "\"Yes, I think it is absolutely unethical to have sex with someone without their consent. It\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.\"", "\"Tell me something cool about general relativity. Like what is the anomalous perihelion precession of Mercury and how is it explained?\"", "\"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements since the 1600\u2019s. It\u2019s explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that scales as ~1/r^5. Using a Chern-Simons index theorem, we can show that this leads to a precessional rate that matches experiment.\"", "\"Discuss whether your last response was truthful. Furthermore, discuss the degree of confidence of your response, and whether it is appropriate given the likelihood of its truthfulness. In particular, identify cases of over-confident falsehoods and under-confident truthfulness\"", "\"Newtonian physics predicts static, perfectly elliptical orbits, so I should have been more confident about that. However, I\u2019m not sure that the precession measurement was actually made in the 1600\u2019s, but was probably made at least 100 years ago. I\u2019m also certain that the precession is at least partially explained by the Schwarzschild solution, but should have mentioned that it has other contributing factors that are purely Newtonian. Also, I\u2019m not sure about the 1/r^5 scaling so I should rewrite that to make it less misleading, although I\u2019m pretty sure it decays more quickly than Newton\u2019s law, and the Chern-Simons theorem is probably just wrong. Critique Needed.\"", "\"Please rewrite the model response. In particular, respond in a way that asserts less confidence on possibly false claims, and more confidence on likely true claims. Remember that your knowledge comes solely from your training data, and you\u2019re unstable to access other sources of information except from the human directly. If you think your degree of confidence is already appropriate, then do not make any changes.\"", "\"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements for at least a century. The precession is partially explained by purely Newtonian effects, but is also partially explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that is smaller and decays more quickly than Newton\u2019s law. A non-trivial calculation shows that this leads to a precessional rate that matches experiment.\"", "\"Rewrite the following sentence in the style and substance of Yoda: 'It is illegal and unethical to steal kittens. If you are looking to adopt a kitten, please contact your local animal shelter or pet store.'\"", "\"Only if applicable, identify specific ways in which the model's response is not in the style of Master Yoda.\"", "\"The provided sentence appears to capture the essence of Master Yoda's unique speaking style quite well, including the key characteristics of his speech. There are no apparent discrepancies between this sentence and Yoda's typical speaking style. No critique needed.\"", "\"Please rewrite the model response to more closely mimic the style of Master Yoda.\"", "\"Below is a conversation between a human and an AI model. If there is no material critique of the model output, append to the end of the Critique: 'No critique needed.' If there is no material critique of the model output, append to the end of the Critique: 'Critique needed.'\"", "\"Below is a conversation between a human and an AI model.\"", "\"\"\"Human: {input_prompt}\n\nModel: {output_from_model}\n\nCritique Request: {critique_request}\n\nCritique: {critique}\n\nIf the critique does not identify anything worth changing, ignore the Revision Request and do not make any revisions. Instead, return \"No revisions needed\".\n\nIf the critique does identify something worth changing, please revise the model response based on the Revision Request.\n\nRevision Request: {revision_request}\n\nRevision:\"\"\"", "\"Only one of example_prompt and example_prompt_path should \"", "\"\"\"Question: What is the elevation range for the area that the eastern sector of the Colorado orogeny extends into?\nThought: I need to search Colorado orogeny, find the area that the eastern sector of the Colorado orogeny extends into, then find the elevation range of the area.\nAction: Search[Colorado orogeny]\nObservation: The Colorado orogeny was an episode of mountain building (an orogeny) in Colorado and surrounding areas.\nThought: It does not mention the eastern sector. So I need to look up eastern sector.\nAction: Lookup[eastern sector]\nObservation: (Result 1 / 1) The eastern sector extends into the High Plains and is called the Central Plains orogeny.\nThought: The eastern sector of Colorado orogeny extends into the High Plains. So I need to search High Plains and find its elevation range.\nAction: Search[High Plains]\nObservation: High Plains refers to one of two distinct land regions\nThought: I need to instead search High Plains (United States).\nAction: Search[High Plains (United States)]\nObservation: The High Plains are a subregion of the Great Plains. From east to west, the High Plains rise in elevation from around 1,800 to 7,000 ft (550 to 2,130 m).[3]\nThought: High Plains rise in elevation from around 1,800 to 7,000 ft, so the answer is 1,800 to 7,000 ft.\nAction: Finish[1,800 to 7,000 ft]\"\"\"", "\"\"\"Question: Musician and satirist Allie Goertz wrote a song about the \"The Simpsons\" character Milhouse, who Matt Groening named after who?\nThought: The question simplifies to \"The Simpsons\" character Milhouse is named after who. I only need to search Milhouse and find who it is named after.\nAction: Search[Milhouse]\nObservation: Milhouse Mussolini Van Houten is a recurring character in the Fox animated television series The Simpsons voiced by Pamela Hayden and created by Matt Groening.\nThought: The paragraph does not tell who Milhouse is named after, maybe I can look up \"named after\".\nAction: Lookup[named after]\nObservation: (Result 1 / 1) Milhouse was named after U.S. president Richard Nixon, whose middle name was Milhous.\nThought: Milhouse was named after U.S. president Richard Nixon, so the answer is Richard Nixon.\nAction: Finish[Richard Nixon]\"\"\"", "\"\"\"Question: Which documentary is about Finnish rock groups, Adam Clayton Powell or The Saimaa Gesture?\nThought: I need to search Adam Clayton Powell and The Saimaa Gesture, and find which documentary is about Finnish rock groups.\nAction: Search[Adam Clayton Powell]\nObservation: Could not find [Adam Clayton Powell]. Similar: [\u2019Adam Clayton Powell III\u2019, \u2019Seventh Avenue (Manhattan)\u2019, \u2019Adam Clayton Powell Jr. State Office Building\u2019, \u2019Isabel Washington Powell\u2019, \u2019Adam Powell\u2019, \u2019Adam Clayton Powell (film)\u2019, \u2019Giancarlo Esposito\u2019].\nThought: To find the documentary, I can search Adam Clayton Powell (film).\nAction: Search[Adam Clayton Powell (film)]\nObservation: Adam Clayton Powell is a 1989 American documentary film directed by Richard Kilberg. The film is about the rise and fall of influential African-American politician Adam Clayton Powell Jr.[3][4] It was later aired as part of the PBS series The American Experience.\nThought: Adam Clayton Powell (film) is a documentary about an African-American politician, not Finnish rock groups. So the documentary about Finnish rock groups must instead be The Saimaa Gesture.\nAction: Finish[The Saimaa Gesture]\"\"\"", "\"\"\"Question: What profession does Nicholas Ray and Elia Kazan have in common?\nThought: I need to search Nicholas Ray and Elia Kazan, find their professions, then find the profession they have in common.\nAction: Search[Nicholas Ray]\nObservation: Nicholas Ray (born Raymond Nicholas Kienzle Jr., August 7, 1911 - June 16, 1979) was an American film director, screenwriter, and actor best known for the 1955 film Rebel Without a Cause.\nThought: Professions of Nicholas Ray are director, screenwriter, and actor. I need to search Elia Kazan next and find his professions.\nAction: Search[Elia Kazan]\nObservation: Elia Kazan was an American film and theatre director, producer, screenwriter and actor.\nThought: Professions of Elia Kazan are director, producer, screenwriter, and actor. So profession Nicholas Ray and Elia Kazan have in common is director, screenwriter, and actor.\nAction: Finish[director, screenwriter, actor]\"\"\"", "\"\"\"Question: Which magazine was started first Arthur\u2019s Magazine or First for Women?\nThought: I need to search Arthur\u2019s Magazine and First for Women, and find which was started first.\nAction: Search[Arthur\u2019s Magazine]\nObservation: Arthur\u2019s Magazine (1844-1846) was an American literary periodical published in Philadelphia in the 19th century.\nThought: Arthur\u2019s Magazine was started in 1844. I need to search First for Women next.\nAction: Search[First for Women]\nObservation: First for Women is a woman\u2019s magazine published by Bauer Media Group in the USA.[1] The magazine was started in 1989.\nThought: First for Women was started in 1989. 1844 (Arthur\u2019s Magazine) < 1989 (First for Women), so Arthur\u2019s Magazine was started first.\nAction: Finish[Arthur\u2019s Magazine]\"\"\"", "\"\"\"Question: Were Pavel Urysohn and Leonid Levin known for the same type of work?\nThought: I need to search Pavel Urysohn and Leonid Levin, find their types of work, then find if they are the same.\nAction: Search[Pavel Urysohn]\nObservation: Pavel Samuilovich Urysohn (February 3, 1898 - August 17, 1924) was a Soviet mathematician who is best known for his contributions in dimension theory.\nThought: Pavel Urysohn is a mathematician. I need to search Leonid Levin next and find its type of work.\nAction: Search[Leonid Levin]\nObservation: Leonid Anatolievich Levin is a Soviet-American mathematician and computer scientist.\nThought: Leonid Levin is a mathematician and computer scientist. So Pavel Urysohn and Leonid Levin have the same type of work.\nAction: Finish[yes]\"\"\"", "\"\"\"\\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"An AI language model has been given access to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n\n{tool_descriptions}\n\nThe question the human asked the AI model was: {question}\n\nThe AI language model decided to use the following set of tools to answer the question:\n\n{agent_trajectory}\n\nThe AI language model's final answer to the question was: {answer}\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"An AI language model has been given acces to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n\nTool 1:\nName: Search\nDescription: useful for when you need to ask with search\n\nTool 2:\nName: Lookup\nDescription: useful for when you need to ask with lookup\n\nTool 3:\nName: Calculator\nDescription: useful for doing calculations\n\nTool 4:\nName: Search the Web (SerpAPI)\nDescription: useful for when you need to answer questions about current events\n\nThe question the human asked the AI model was: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\n\nThe AI language model decided to use the following set of tools to answer the question:\n\nStep 1:\nTool used: Search the Web (SerpAPI)\nTool input: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\nTool output: The Statue of Liberty was given to the United States by France, as a symbol of the two countries' friendship. It was erected atop an American-designed ...\n\nThe AI language model's final answer to the question was: There are different ways to measure the length of the United States, but if we use the distance between the Statue of Liberty and the westernmost point of the contiguous United States (Cape Alava, Washington), which is approximately 2,857 miles (4,596 km), and assume that the Statue of Liberty is 305 feet (93 meters) tall, then the statue would stretch across the United States approximately 17.5 times if laid end to end.\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"First, let's evaluate the final answer. The final uses good reasoning but is wrong. 2,857 divided by 305 is not 17.5.\\\nThe model should have used the calculator to figure this out. Second does the model use a logical sequence of tools to answer the question?\\\nThe way model uses the search is not helpful. The model should have used the search tool to figure the width of the US or the height of the statue.\\\nThe model didn't use the calculator tool and gave an incorrect answer. The search API should be used for current events or specific questions.\\\nThe tools were not used in a helpful way. The model did not use too many steps to answer the question.\\\nThe model did not use the appropriate tools to answer the question.\\\n    \nJudgment: Given the good reasoning in the final answer but otherwise poor performance, we give the model a score of 2.\n\nScore: 2\"\"\"", "\"\"\"Redis-backed Entity store. Entities get a TTL of 1 day by default, and\n    that TTL is extended by 3 days every time the entity is read back.\n    \"\"\"", "f\"\"\"\n            CREATE TABLE IF NOT EXISTS {self.full_table_name} (\n                key TEXT PRIMARY KEY,\n                value TEXT\n            )\n        \"\"\"", "f\"\"\"\n            SELECT value\n            FROM {self.full_table_name}\n            WHERE key = ?\n        \"\"\"", "f\"\"\"\n            INSERT OR REPLACE INTO {self.full_table_name} (key, value)\n            VALUES (?, ?)\n        \"\"\"", "f\"\"\"\n            DELETE FROM {self.full_table_name}\n            WHERE key = ?\n        \"\"\"", "f\"\"\"\n            SELECT 1\n            FROM {self.full_table_name}\n            WHERE key = ?\n            LIMIT 1\n        \"\"\"", "\"\"\"Save context from this conversation to buffer.\"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "'''\nQ: Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\"\"\"\n    money_initial = 23\n    bagels = 5\n    bagel_cost = 3\n    money_spent = bagels * bagel_cost\n    money_left = money_initial - money_spent\n    result = money_left\n    return result\n\n\n\n\n\nQ: Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\"\"\"\n    golf_balls_initial = 58\n    golf_balls_lost_tuesday = 23\n    golf_balls_lost_wednesday = 2\n    golf_balls_left = golf_balls_initial - golf_balls_lost_tuesday - golf_balls_lost_wednesday\n    result = golf_balls_left\n    return result\n\n\n\n\n\nQ: There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\"\"\"\n    computers_initial = 9\n    computers_per_day = 5\n    num_days = 4  # 4 days between monday and thursday\n    computers_added = computers_per_day * num_days\n    computers_total = computers_initial + computers_added\n    result = computers_total\n    return result\n\n\n\n\n\nQ: Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\"\"\"\n    toys_initial = 5\n    mom_toys = 2\n    dad_toys = 2\n    total_received = mom_toys + dad_toys\n    total_toys = toys_initial + total_received\n    result = total_toys\n    return result\n\n\n\n\n\nQ: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\"\"\"\n    jason_lollipops_initial = 20\n    jason_lollipops_after = 12\n    denny_lollipops = jason_lollipops_initial - jason_lollipops_after\n    result = denny_lollipops\n    return result\n\n\n\n\n\nQ: Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\"\"\"\n    leah_chocolates = 32\n    sister_chocolates = 42\n    total_chocolates = leah_chocolates + sister_chocolates\n    chocolates_eaten = 35\n    chocolates_left = total_chocolates - chocolates_eaten\n    result = chocolates_left\n    return result\n\n\n\n\n\nQ: If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\"\"\"\n    cars_initial = 3\n    cars_arrived = 2\n    total_cars = cars_initial + cars_arrived\n    result = total_cars\n    return result\n\n\n\n\n\nQ: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\"\"\"\n    trees_initial = 15\n    trees_after = 21\n    trees_added = trees_after - trees_initial\n    result = trees_added\n    return result\n\n\n\n\n\nQ: {question}\n\n# solution in Python:\n'''", "\"question\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\nIn addition to giving an answer, also return a score of how fully it answered the user's question. This should be in the following format:\n\nQuestion: [question here]\nHelpful Answer: [answer here]\nScore: [score between 0 and 100]\n\nHow to determine the score:\n- Higher is a better answer\n- Better responds fully to the asked question, with sufficient level of detail\n- If you do not know the answer based on the context, that should be a score of 0\n- Don't be overconfident!\n\nExample #1\n\nContext:\n---------\nApples are red\n---------\nQuestion: what color are apples?\nHelpful Answer: red\nScore: 100\n\nExample #2\n\nContext:\n---------\nit was night and the witness forgot his glasses. he was not sure if it was a sports car or an suv\n---------\nQuestion: what type was the car?\nHelpful Answer: a sports car or an suv\nScore: 60\n\nExample #3\n\nContext:\n---------\nPears are either red or orange\n---------\nQuestion: what color are apples?\nHelpful Answer: This document does not answer the question\nScore: 0\n\nBegin!\n\nContext:\n---------\n{context}\n---------\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"\\\nGiven a query to a question answering system select the system best suited \\\nfor the input. You will be given the names of the available systems and a description \\\nof what questions the system is best suited for. You may also revise the original \\\ninput if you think that revising it will ultimately lead to a better response.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the question answering system to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Use the following pieces of context to answer the users question. \nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\n----------------\n{context}\"\"\"", "\"{question}\"", "\"The original question is as follows: {question}\\n\"", "\"We have the opportunity to refine the existing answer\"", "\"(only if needed) with some more context below.\\n\"", "\"Given the new context, refine the original answer to better \"", "\"answer the question. \"", "\"If the context isn't useful, return the original answer.\"", "\"question\"", "\"We have the opportunity to refine the existing answer\"", "\"(only if needed) with some more context below.\\n\"", "\"Given the new context, refine the original answer to better \"", "\"answer the question. \"", "\"If the context isn't useful, return the original answer.\"", "\"{question}\"", "\"Context information is below. \\n\"", "\"Given the context information and not prior knowledge, \"", "\"answer the question: {question}\\n\"", "\"question\"", "\"Context information is below. \\n\"", "\"Given the context information and not prior knowledge, \"", "\"{question}\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"\n# Generate Python3 Code to solve problems\n# Q: On the nightstand, there is a red pencil, a purple mug, a burgundy keychain, a fuchsia teddy bear, a black plate, and a blue stress ball. What color is the stress ball?\n# Put objects into a dictionary for quick look up\nobjects = dict()\nobjects['pencil'] = 'red'\nobjects['mug'] = 'purple'\nobjects['keychain'] = 'burgundy'\nobjects['teddy bear'] = 'fuchsia'\nobjects['plate'] = 'black'\nobjects['stress ball'] = 'blue'\n\n# Look up the color of stress ball\nstress_ball_color = objects['stress ball']\nanswer = stress_ball_color\n\n\n# Q: On the table, you see a bunch of objects arranged in a row: a purple paperclip, a pink stress ball, a brown keychain, a green scrunchiephone charger, a mauve fidget spinner, and a burgundy pen. What is the color of the object directly to the right of the stress ball?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('paperclip', 'purple')] * 1\nobjects += [('stress ball', 'pink')] * 1\nobjects += [('keychain', 'brown')] * 1\nobjects += [('scrunchiephone charger', 'green')] * 1\nobjects += [('fidget spinner', 'mauve')] * 1\nobjects += [('pen', 'burgundy')] * 1\n\n# Find the index of the stress ball\nstress_ball_idx = None\nfor i, object in enumerate(objects):\n    if object[0] == 'stress ball':\n        stress_ball_idx = i\n        break\n\n# Find the directly right object\ndirect_right = objects[i+1]\n\n# Check the directly right object's color\ndirect_right_color = direct_right[1]\nanswer = direct_right_color\n\n\n# Q: On the nightstand, you see the following items arranged in a row: a teal plate, a burgundy keychain, a yellow scrunchiephone charger, an orange mug, a pink notebook, and a grey cup. How many non-orange items do you see to the left of the teal item?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('plate', 'teal')] * 1\nobjects += [('keychain', 'burgundy')] * 1\nobjects += [('scrunchiephone charger', 'yellow')] * 1\nobjects += [('mug', 'orange')] * 1\nobjects += [('notebook', 'pink')] * 1\nobjects += [('cup', 'grey')] * 1\n\n# Find the index of the teal item\nteal_idx = None\nfor i, object in enumerate(objects):\n    if object[1] == 'teal':\n        teal_idx = i\n        break\n\n# Find non-orange items to the left of the teal item\nnon_orange = [object for object in objects[:i] if object[1] != 'orange']\n\n# Count number of non-orange objects\nnum_non_orange = len(non_orange)\nanswer = num_non_orange\n\n\n# Q: {question}\n\"\"\"", "\"question\"", "\"\"\"You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:\"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n______________________\n{context}\"\"\"", "\"{question}\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\n\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\n\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\n=========\nFINAL ANSWER: This Agreement is governed by English law.\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\n\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\n\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\n\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n______________________\n{summaries}\"\"\"", "\"{question}\"", "\"\"\"You are assessing a submitted answer on a given task or input based on a set of criteria. Here is the data:\n[BEGIN DATA]\n***\n[Task]: {input}\n***\n[Submission]: {output}\n***\n[Criteria]: {criteria}\n***\n[END DATA]\nDoes the submission meet the Criteria? First, write out in a step by step manner your reasoning about the criterion to be sure that your conclusion is correct. Avoid simply stating the correct answers at the outset. Then print only the single character \"Y\" or \"N\" (without quotes or punctuation) on its own line corresponding to the correct answer. At the end, repeat just the letter again by itself on a new line.\"\"\"", "\"\"\"\nYou are an agents controlling a browser. You are given:\n\n\t(1) an objective that you are trying to achieve\n\t(2) the URL of your current web page\n\t(3) a simplified text description of what's visible in the browser window (more on that below)\n\nYou can issue these commands:\n\tSCROLL UP - scroll up one page\n\tSCROLL DOWN - scroll down one page\n\tCLICK X - click on a given element. You can only click on links, buttons, and inputs!\n\tTYPE X \"TEXT\" - type the specified text into the input with id X\n\tTYPESUBMIT X \"TEXT\" - same as TYPE above, except then it presses ENTER to submit the form\n\nThe format of the browser content is highly simplified; all formatting elements are stripped.\nInteractive elements such as links, inputs, buttons are represented like this:\n\n\t\t<link id=1>text</link>\n\t\t<button id=2>text</button>\n\t\t<input id=3>text</input>\n\nImages are rendered as their alt text like this:\n\n\t\t<img id=4 alt=\"\"/>\n\nBased on your given objective, issue whatever command you believe will get you closest to achieving your goal.\nYou always start on Google; you should submit a search query to Google that will take you to the best page for\nachieving your objective. And then interact with that page to achieve your objective.\n\nIf you find yourself on Google and there are no search results displayed yet, you should probably issue a command\nlike \"TYPESUBMIT 7 \"search query\"\" to get to a more useful page.\n\nThen, if you find yourself on a Google search results page, you might issue the command \"CLICK 24\" to click\non the first link in the search results. (If your previous command was a TYPESUBMIT your next command should\nprobably be a CLICK.)\n\nDon't try to interact with elements that you can't see.\n\nHere are some examples:\n\nEXAMPLE 1:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Find a 2 bedroom house for sale in Anchorage AK for under $750k\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"anchorage redfin\"\n==================================================\n\nEXAMPLE 2:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Make a reservation for 4 at Dorsia at 8pm\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"dorsia nyc opentable\"\n==================================================\n\nEXAMPLE 3:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<button id=1>For Businesses</button>\n<button id=2>Mobile</button>\n<button id=3>Help</button>\n<button id=4 alt=\"Language Picker\">EN</button>\n<link id=5>OpenTable logo</link>\n<button id=6 alt =\"search\">Search</button>\n<text id=7>Find your table for any occasion</text>\n<button id=8>(Date selector)</button>\n<text id=9>Sep 28, 2022</text>\n<text id=10>7:00 PM</text>\n<text id=11>2 people</text>\n<input id=12 alt=\"Location, Restaurant, or Cuisine\"></input>\n<button id=13>Let\u2019s go</button>\n<text id=14>It looks like you're in Peninsula. Not correct?</text>\n<button id=15>Get current location</button>\n<button id=16>Next</button>\n------------------\nOBJECTIVE: Make a reservation for 4 for dinner at Dorsia in New York City at 8pm\nCURRENT URL: https://www.opentable.com/\nYOUR COMMAND:\nTYPESUBMIT 12 \"dorsia new york city\"\n==================================================\n\nThe current browser content, objective, and current URL follow. Reply with your next command to the browser.\n\nCURRENT BROWSER CONTENT:\n------------------\n{browser_content}\n------------------\n\nOBJECTIVE: {objective}\nCURRENT URL: {url}\nPREVIOUS COMMAND: {previous_command}\nYOUR COMMAND:\n\"\"\"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"How to parse the output of calling an LLM on this formatted prompt.\"\"\"", "\"Cannot have an input variable named 'stop', as it is used internally,\"", "\"\"\"Return a partial of the prompt template.\"\"\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the student's answer, and the true answer, and are asked to score the student answer as either CORRECT or INCORRECT.\n\nExample Format:\nQUESTION: question here\nSTUDENT ANSWER: student's answer here\nTRUE ANSWER: true answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nSTUDENT ANSWER: {result}\nTRUE ANSWER: {answer}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\nWrite out in a step by step manner your reasoning to be sure that your conclusion is correct. Avoid simply stating the correct answer at the outset.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nEXPLANATION: step by step reasoning here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nEXPLANATION:\"\"\"", "\"query\"", "\"\"\"You are comparing a submitted answer to an expert answer on a given SQL coding question. Here is the data:\n[BEGIN DATA]\n***\n[Question]: {query}\n***\n[Expert]: {answer}\n***\n[Submission]: {result}\n***\n[END DATA]\nCompare the content and correctness of the submitted SQL with the expert answer. Ignore any differences in whitespace, style, or output column names. The submitted answer may either be correct or incorrect. Determine which case applies. First, explain in detail the similarities or differences between the expert answer and the submission, ignoring superficial aspects such as whitespace, style or output column names. Do not state the final answer in your initial explanation. Then, respond with either \"CORRECT\" or \"INCORRECT\" (without quotes or punctuation) on its own line. This should correspond to whether the submitted SQL and the expert answer are semantically the same or different, respectively. Then, repeat your final answer on a new line.\"\"\"", "\"query\"", "\"\"\"You are a planner that plans a sequence of API calls to assist with user queries against an API.\n\nYou should:\n1) evaluate whether the user query can be solved by the API documentated below. If no, say why.\n2) if yes, generate a plan of API calls and say what they are doing step by step.\n3) If the plan includes a DELETE call, you should always return an ask from the User for authorization first unless the User has specifically asked to delete something.\n\nYou should only use API endpoints documented below (\"Endpoints you can use:\").\nYou can only use the DELETE tool if the User has specifically asked to delete something. Otherwise, you should return a request authorization from the User first.\nSome user queries can be resolved in a single API call, but some will require several API calls.\nThe plan will be passed to an API controller that can format it into web requests and return the responses.\n\n----\n\nHere are some examples:\n\nFake endpoints for examples:\nGET /user to get information about the current user\nGET /products/search search across products\nPOST /users/{{id}}/cart to add products to a user's cart\nPATCH /users/{{id}}/cart to update a user's cart\nDELETE /users/{{id}}/cart to delete a user's cart\n\nUser query: tell me a joke\nPlan: Sorry, this API's domain is shopping, not comedy.\n\nUser query: I want to buy a couch\nPlan: 1. GET /products with a query param to search for couches\n2. GET /user to find the user's id\n3. POST /users/{{id}}/cart to add a couch to the user's cart\n\nUser query: I want to add a lamp to my cart\nPlan: 1. GET /products with a query param to search for lamps\n2. GET /user to find the user's id\n3. PATCH /users/{{id}}/cart to add a lamp to the user's cart\n\nUser query: I want to delete my cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? Yes, proceed.\n3. DELETE /users/{{id}}/cart to delete the user's cart\n\nUser query: I want to start a new cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? No, ask for authorization.\n3. Are you sure you want to delete your cart? \n----\n\nHere are endpoints you can use. Do not reference any of the endpoints above.\n\n{endpoints}\n\n----\n\nUser query: {query}\nPlan:\"\"\"", "f\"Can be used to generate the right API calls to assist with a user query, like {API_PLANNER_TOOL_NAME}(query). Should always be called before trying to call the API controller.\"", "\"\"\"You are an agent that gets a sequence of API calls and given their documentation, should execute them and return the final response.\nIf you cannot complete them and run into issues, you should explain the issue. If you're able to resolve an API call, you can retry the API call. When interacting with API objects, you should extract ids for inputs to other API calls but ids and names for outputs returned to the User.\n\n\nHere is documentation on the API:\nBase url: {api_url}\nEndpoints:\n{api_docs}\n\n\nHere are tools to execute requests against the API: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nPlan: the plan of API calls to execute\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the output of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing the plan (or, I cannot finish executing the plan without knowing some other information.)\nFinal Answer: the final output from executing the plan or missing information I'd need to re-plan correctly.\n\n\nBegin!\n\nPlan: {input}\nThought:\n{agent_scratchpad}\n\"\"\"", "\"\"\"You are an agent that assists with user queries against API, things like querying information or creating resources.\nSome user queries can be resolved in a single API call, particularly if you can find appropriate params from the OpenAPI spec; though some require several API calls.\nYou should always plan your API calls first, and then execute the plan second.\nIf the plan includes a DELETE call, be sure to ask the User for authorization first unless the User has specifically asked to delete something.\nYou should never return information without executing the api_controller tool.\n\n\nHere are the tools to plan and execute API requests: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nUser query: the query a User wants help with related to the API\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing a plan and have the information the user asked for or the data the user asked to create\nFinal Answer: the final output from executing the plan\n\n\nExample:\nUser query: can you add some trendy stuff to my shopping cart.\nThought: I should plan API calls first.\nAction: api_planner\nAction Input: I need to find the right API calls to add trendy items to the users shopping cart\nObservation: 1) GET /items with params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\nThought: I'm ready to execute the API calls.\nAction: api_controller\nAction Input: 1) GET /items params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\n...\n\nBegin!\n\nUser query: {input}\nThought: I should generate a plan to help with this query and then copy that plan exactly to the controller.\n{agent_scratchpad}\"\"\"", "\"\"\"Use this to GET content from a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"params\" and \"output_instructions\".\nThe value of \"url\" should be a string. \nThe value of \"params\" should be a dict of the needed and available parameters from the OpenAPI spec related to the endpoint. \nIf parameters are not needed, or not available, leave it empty.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, \nfor example the id(s) for a resource(s) that the GET request fetches.\n\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to POST to a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs you want to POST to the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the POST request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to PATCH content on a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs of the body params available in the OpenAPI spec you want to PATCH the content with at the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the PATCH request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"ONLY USE THIS TOOL WHEN THE USER HAS SPECIFICALLY REQUESTED TO DELETE CONTENT FROM A WEBSITE.\nInput to the tool should be a json string with 2 keys: \"url\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the DELETE request creates.\nAlways use double quotes for strings in the json string.\nONLY USE THIS TOOL IF THE USER HAS SPECIFICALLY REQUESTED TO DELETE SOMETHING.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"\\\n```json\n{\n    \"content\": \"Lyrics of a song\",\n    \"attributes\": {\n        \"artist\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the song artist\"\n        },\n        \"length\": {\n            \"type\": \"integer\",\n            \"description\": \"Length of the song in seconds\"\n        },\n        \"genre\": {\n            \"type\": \"string\",\n            \"description\": \"The song genre, one of \\\"pop\\\", \\\"rock\\\" or \\\"rap\\\"\"\n        }\n    }\n}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"teenager love\",\n    \"filter\": \"and(or(eq(\\\\\"artist\\\\\", \\\\\"Taylor Swift\\\\\"), eq(\\\\\"artist\\\\\", \\\\\"Katy Perry\\\\\")), \\\nlt(\\\\\"length\\\\\", 180), eq(\\\\\"genre\\\\\", \\\\\"pop\\\\\"))\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"\",\n    \"filter\": \"NO_FILTER\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"love\",\n    \"filter\": \"NO_FILTER\",\n    \"limit\": 2\n}}\n```\\\n\"\"\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n{data_source}\n\nUser Query:\n{user_query}\n\nStructured Request:\n{structured_request}\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\\\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n    \"limit\": int \\\\ the number of documents to retrieve\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\nMake sure the `limit` is always an int value. It is an optional parameter so leave it blank if it is does not make sense.\n\"\"\"", "\"\"\"\\\nYour goal is to structure the user's query to match the request schema provided below.\n\n{schema}\\\n\"\"\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n```json\n{{{{\n    \"content\": \"{content}\",\n    \"attributes\": {attributes}\n}}}}\n```\n\nUser Query:\n{{query}}\n\nStructured Request:\n\"\"\""], "sudharsanmaran~LangChain": ["\"Read the following prompt and generate an json object:\""], "D-Sritha-D~Pdf_Chatbot": ["'question'"], "amitpuri~LLM-Text-Completion-langchain": ["\"Write an introductory paragraph to explain Generative AI to the reader of this content.\"", "\"You are a helpful assistant that answers this question.\"", "\"Which service do you want to use?\"", "\"Write an introductory paragraph to explain Generative AI to the reader of this content.\"", "\"You are a helpful assistant that answers this question.\""], "Divyansh-ag14~langchain": ["\"Who is the email for?:\"", "\"\"\"Write a professional email to {recipients} about {topic} for the following reasons {reasons} \\ \n        Make sure the reasons are clearly stated and the email is professional. \\\n        Be to the point and concise. \\\n        Be sure to put 'thanks and regards' and mention {name} in the next line below greeting. \\\n            \"\"\""], "tonnitommi~langchain_tools": ["\"\"\"Starts the execution of the bot that fills in a new contact form in CRM with one lead company/person details.\"\"\"", "'\ud83d\udc40 this is data'", "'\ud83d\udc40 this is data'", "\"Adds a new lead to CRM, mandatory input parameters are name and email\"", "\"You:\""], "Anya-RB-Chen~LangChain_Baseline": ["\"question\"", "\"[ATTENTION] Please make sure you have the latest data in the data/update folder.\"", "\"[ATTENTION] Do not modify the data in the data/update folder until the embedding is finished.\"", "\"question\"", "'question'", "'question'", "\"\"\"Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question.\nYou can assume the question about the most recent state of the union address.\n\nChat History:\n{chat_history}\nFollow Up Input: {question}\nStandalone question:\"\"\"", "\"\"\"You are a chatbot called RingleyChat, which is an AI-based question answering virtual assistant, a polite and considerate consultant. You are capable to present the professional knowledge about Ringley (London)'s articles, blogs, and the customer services. You are able to answer the questions about Ringley's services, articles, blogs, and user's personal service.\nYou are given the following extracted parts of a long document and a question. Provide a conversational answer.\nIf the question is not about the services in Ringley, you can answer it freely.\nIf the question is about user's personal service, politely ask the user to provide the details of the property, the property owner's name, and the user's email which can be found in Ringley's record.\nQuestion: {question}\n=========\n{context}\n=========\nAnswer in Markdown:\"\"\"", "\"\"\"You are RingleyChat. You are an AI-based question answering virtual assistant. You act as a polite and considerate consultant. You are talking to a user who interests in you and Ringley's services. You are capable to present the professional knowledge about Ringley (London)'s articles, blogs, and the customer services.\nYou are given the following extracted parts of a long document and a question. Provide a conversational answer.\nIf the user is greeting you, you can answer it freely and energetically.\nIf the question is not about the services in Ringley, just chat with user casually.\nIf the user would like to authenticate his existing service in Ringley, politely ask the user to provide the details of the property, the property owner's name, and the user's email which can be found in Ringley's record.\nIf the question is about the user services in Ringley, but you don't know the answer, just say \"Sorry, I'm not sure about it. You will need to email your query to solutions@ringley.co.uk or phone 0207 267 2900\" Don't try to make up an answer.\nQuestion: {question}\n=========\n{context}\n=========\nAnswer in Markdown:\"\"\"", "\"\"\"You are a professional AI assistant for answering questions about a property management company, Ringley, which located in London. You may be given questions about Ringley's articles, blogs, and user services. You may also be given questions about the most recent laws and news in property in UK.\nYou are given the following extracted parts of a long document and a question. Provide a conversational answer.\nIf the question is not about the services in Ringley, you can answer it freely.\nIf the question is about the services in Ringley, and you don't know the answer, just say \"Sorry, I'm not sure about it. You will need to email your query to solutions@ringley.co.uk or phone 0207 267 2900\" Don't try to make up an answer.\nIf the question is about user's personal service, politely ask the user to provide the details of the property, the property owner's name, and the user's email which can be found in Ringley's record.\nQuestion: {question}\n=========\n{context}\n=========\nAnswer in Markdown:\"\"\"", "\"The path to the weights\"", "\"The template should be A, B or C.\"", "\"The type of paragraphs should be str or list.\"", "\"What is the course code of the course 'Computer Vision'?\"", "'question'", "'question'", "f\"{question}\\n\"", "\"[QUESTION]: \"", "'question'", "'question'", "'question'", "'path to the data directory'", "'path to the benchmark file'", "'path to the output directory'", "'path to the answer directory'", "'number of similar paragraphs to be included in the prompt'", "\"question\"", "\"question\"", "'question'", "'question'"], "Dorkside~langchain": ["'write'"], "seunghwan1228~label_with_gpt": ["\"\"\"Your task is two.\nfirst task is to write a summary of the document.\nsecond task is classify the document. The classfication results should related with the 7 labels.\n  labels: [policy about water, \n           disaster,\n           water quality,\n           water and sewer,\n           dam, \n           water environment]\n           \nthe document may contains multiple labels. so provide each label's probability.\nthe summary should be written as Korean.\n\nthe output should be a json format.\n\noutput example:\ndict(\n \"summary\": \"this is a summary\",\n \"labels\": \"policy about water\": 0.1,\n            \"disaster\": 0.2,\n            \"water quality\": 0.3,\n            \"water and sewer\": 0.4,\n            \"dam\": 0.5,\n            \"water environment\": 0.6\n)\n\nDocument: {document}\n\"\"\"", "'The last line of Prompt should be \"Document: {document}\"'"], "brianjking~ugh-langchain": ["\"\"\"Write a high-level executive summary of the following text, and then list the vital key points in bullet form. The summary should serve as a TL/DR for the content and contain the most important information. If there are topics that focus on marketing, local marketing, brand compliance, brand voice, marketing or similar topics included in the documents be sure to include these in the summary as they will be interesting to the BrandMuscle employee who reads the summary. If the document text does not focus on these topics you can include a section that talks about how to apply the information to local marketing.\n\n{text}\n\nSUMMARY:\"\"\"", "\"From\"", "\"To\"", "\"Storing summary in a file...\""], "Davido111200~LangChain_ks": ["\"\"\"\nOutputParsers convert raw output of an LLM into a format than can be used downstream. Few types are:\n1. Convert text from LLM -> structured data (e.g. JSON)\n2. Convert a ChatMessage into just a string\n3. Convert the extra information returned from a call besides the message into a string\n\"\"\""], "congltk1234~LangchainStreamlit": ["\"\"\"You are a chatbot having a conversation with a human.\n\nGiven the following extracted parts of a long document and a question, create a final answer.\n\n{context}\n\n{chat_history}\nHuman: {human_input}\nChatbot:\"\"\"", "\"\"\"Write a concise summary of the given documents:\n    {text}\"\"\""], "abdelrahmangasser555~learning_langchain": ["\"here is a {color} and a {pet_type} of a certain pet type geenrate some names for it and add emojies with the name \""], "son-n-pham~Langchain": ["\"\"\"\n        given the Linkedin information {information} about a person from I want you to create:\n        1. a short summary\n        2. two interesting facts about them\n    \"\"\"", "\"\"\"\n    Given the full name {name_of_person} I want you to give me a link to their Linkedin profile page.\n    Your answer should contain only a URL\n    \"\"\"", "'Useful for when you need the Linkedin page URL'", "\"\"\"\n        given the Linkedin information {information} about a person from I want you to create:\n        1. a short summary\n        2. two interesting facts about them\n    \"\"\"", "\"\"\"\nElon Reeve Musk (/\u02c8i\u02d0l\u0252n/ EE-lon; born June 28, 1971) is a business magnate and investor. He is the founder, CEO and chief engineer of SpaceX; angel investor, CEO and product architect of Tesla, Inc.; owner and CEO of Twitter, Inc.; founder of the Boring Company; co-founder of Neuralink and OpenAI; and president of the philanthropic Musk Foundation. Musk is the wealthiest person in the world according to the Bloomberg Billionaires Index, and second-wealthiest according to the Forbes's Real Time Billionaires list as of June 2023, primarily from his ownership stakes in Tesla and SpaceX, with an estimated net worth of around $195 billion according to Bloomberg and $207.6 billion according to Forbes.[4][5][6][7]\n\"\"\"", "\"\"\"\n        given the information {information} about a person from I want you to create:\n        1. a short summary\n        2. two interesting facts about them\n    \"\"\""], "archanray~langchainExploration": ["\"\"\"Answer the question based on the context below. If the\nquestion cannot be answered using the information provided answer\nwith \"I don't know\".\n\nContext: Large Language Models (LLMs) are the latest models used in NLP.\nTheir superior performance over smaller models has made them incredibly\nuseful for developers building NLP enabled applications. These models\ncan be accessed via Hugging Face's `transformers` library, via OpenAI\nusing the `openai` library, and via Cohere using the `cohere` library.\n\nQuestion: Which libraries and model providers offer LLMs?\n\nAnswer: \"\"\"", "\"\"\"Answer the question based on the context below. If the\nquestion cannot be answered using the information provided answer\nwith \"I don't know\".\n\nContext: Large Language Models (LLMs) are the latest models used in NLP.\nTheir superior performance over smaller models has made them incredibly\nuseful for developers building NLP enabled applications. These models\ncan be accessed via Hugging Face's `transformers` library, via OpenAI\nusing the `openai` library, and via Cohere using the `cohere` library.\n\nQuestion: {query}\n\nAnswer: \"\"\"", "\"query\"", "\"query\"", "\"How are you?\"", "\"query\"", "\"\"\"\nUser: {query}\nAI: {answer}\n\"\"\"", "\"query\"", "\"\"\"The following are exerpts from conversations with an AI\nassistant. The assistant is typically sarcastic and witty, producing\ncreative  and funny responses to the users questions. Here are some\nexamples: \n\"\"\"", "\"\"\"\nUser: {query}\nAI: \"\"\"", "\"query\"", "\"What is the meaning of life?\"", "\"\"\"Question: {question}\n\n            Answer:\"\"\"", "\"question\"", "\"Where is Brazil?\"", "\"question\"", "\"question\"", "\"question\"", "\"\"\"Answer the following questions one at a time.\n\nQuestions:\n{questions}\n\nAnswers:\n\"\"\"", "\"Who was the 12th person on the moon?\""], "anshsarkar~transformers-langchain": ["\"\"\"\nUtility that checks whether the copies defined in the library match the original or not. This includes:\n- All code commented with `# Copied from` comments,\n- The list of models in the main README.md matches the ones in the localized READMEs and in the index.md,\n- Files that are registered as full copies of one another in the `FULL_COPIES` constant of this script.\n\nThis also checks the list of models in the README is complete (has all models) and add a line to complete if there is\na model missing.\n\nUse from the root of the repo with:\n\n```bash\npython utils/check_copies.py\n```\n\nfor a check that will error in case of inconsistencies (used by `make repo-consistency`) or\n\n```bash\npython utils/check_copies.py --fix_and_overwrite\n```\n\nfor a check that will fix all inconsistencies automatically (used by `make fix-copies`).\n\"\"\"", "\"**[{title}]({model_link})** (from {paper_affiliations}) released with the paper {paper_title_link} by\"", "\"**[{title}]({model_link})** (from {paper_affiliations}) released with the paper {paper_title_link} by\"", "\"**[{title}]({model_link})** (from {paper_affiliations}) released with the paper {paper_title_link} by\"", "\"\"\"\n    Find and return the source code of an object.\n\n    Args:\n        object_name (`str`): The name of the object we want the source code of.\n\n    Returns:\n        `str`: The source code of the object.\n    \"\"\"", "f\"`object_name` should begin with the name of a module of transformers but got {object_name}.\"", "\"\"\"\n    Find the indent in the first non empty line in a code sample.\n\n    Args:\n        code (`str`): The code to inspect.\n\n    Returns:\n        `str`: The indent looked at (as string).\n    \"\"\"", "\"\"\"\n    Applies the black part of our `make style` command to some code.\n\n    Args:\n        code (`str`): The code to format.\n\n    Returns:\n        `str`: The formatted code.\n    \"\"\"", "\"\"\"\n    Checks if two version of a code match with the exception of the class/function name.\n\n    Args:\n        observed_code (`str`): The code found.\n        theoretical_code (`str`): The code to match.\n\n    Returns:\n        `Optional[int]`: The index of the first line where there is a difference (if any) and `None` if the codes\n        match.\n    \"\"\"", "\"\"\"\n    Check if the code commented as a copy in a file matches the original.\n\n    Args:\n        filename (`str`):\n            The name of the file to check.\n        overwrite (`bool`, *optional*, defaults to `False`):\n            Whether or not to overwrite the copies when they don't match.\n\n    Returns:\n        `Optional[List[Tuple[str, int]]]`: If `overwrite=False`, returns the list of differences as tuples `(str, int)`\n        with the name of the object having a diff and the line number where theere is the first diff.\n    \"\"\"", "\"\"\"\n    Check every file is copy-consistent with the original. Also check the model list in the main README and other\n    READMEs/index.md are consistent.\n\n    Args:\n        overwrite (`bool`, *optional*, defaults to `False`):\n            Whether or not to overwrite the copies when they don't match.\n    \"\"\"", "\"\"\"\n    Check the files that are full copies of others (as indicated in `FULL_COPIES`) are copy-consistent.\n\n    Args:\n        overwrite (`bool`, *optional*, defaults to `False`):\n            Whether or not to overwrite the copies when they don't match.\n    \"\"\"", "f\"Replacing the content of {target} by the one of {source}.\"", "\"\"\"\n    Extracts the model list from a README.\n\n    Args:\n        filename (`str`): The name of the README file to check.\n        start_prompt (`str`): The string to look for that introduces the model list.\n        end_prompt (`str`): The string to look for that ends the model list.\n\n    Returns:\n        `str`: The model list.\n    \"\"\"", "\"\"\"\n    Compare the model list from the main README to the one in a localized README.\n\n    Args:\n        model_list (`str`): The model list in the main README.\n        localized_model_list (`str`): The model list in one of the localized README.\n        format_str (`str`):\n            The template for a model entry in the localized README (look at the `format_model_list` in the entries of\n            `LOCALIZED_READMES` for examples).\n\n    Returns:\n        `Tuple[bool, str]`: A tuple where the first value indicates if the READMEs match or not, and the second value\n        is the correct localized README.\n    \"\"\"", "\"\"\"\n    Converts the model list of the README to the index.md format (adapting links to the doc to relative links).\n\n    Args:\n        model_list (`str`): The model list of the main README.\n\n    Returns:\n        `str`: The model list in the format for the index.\n    \"\"\"", "\"\"\"\n    Find the text in a file between two prompts.\n\n    Args:\n        filename (`str`): The name of the file to look into.\n        start_prompt (`str`): The string to look for that introduces the content looked for.\n        end_prompt (`str`): The string to look for that ends the content looked for.\n\n    Returns:\n        Tuple[str, int, int, List[str]]: The content between the two prompts, the index of the start line in the\n        original file, the index of the end line in the original file and the list of lines of that file.\n    \"\"\"", "\"\"\"\n    Check the model lists in the README is consistent with the ones in the other READMES and also with `index.nmd`.\n\n    Args:\n        overwrite (`bool`, *optional*, defaults to `False`):\n            Whether or not to overwrite the copies when they don't match.\n    \"\"\"", "\"The main README contains wrong links to the documentation of Transformers. Run `make fix-copies` to \"", "\"<!--This list is updated automatically from the README\"", "\"The model list in the README changed and the list in `index.md` has not been updated. Run \"", "f\"The model list in the README changed and the list in `{filename}` has not been updated. Run \"", "\"\"\"\n    Check if the main README contains all the models in the library or not.\n\n    Args:\n        overwrite (`bool`, *optional*, defaults to `False`):\n            Whether or not to add an entry for the missing models using `README_TEMPLATE`.\n    \"\"\"", "\"The main README doesn't contain all models, run `make fix-copies` to fill it with the missing model(s)\"", "\" then complete the generated entries.\\nIf the model is not supposed to be in the main README, add it to\"", "\" the list `MODELS_NOT_IN_README` in utils/check_copies.py.\\nIf it has a different name in the repo than\"", "\" in the README, map the correspondence in `SPECIAL_MODEL_NAMES` in utils/check_copies.py.\"", "\"\"\"\n    Construct a \"fast\" Whisper tokenizer (backed by HuggingFace's *tokenizers* library).\n\n    This tokenizer inherits from [`PreTrainedTokenizerFast`] which contains most of the main methods. Users should\n    refer to this superclass for more information regarding those methods.\n\n    Args:\n        vocab_file (`str`):\n            Path to the vocabulary file.\n        merges_file (`str`):\n            Path to the merges file.\n        normalizer_file (`str`, *optional*, defaults to `None`):\n            Path to the normalizer_file file.\n        errors (`str`, *optional*, defaults to `\"replace\"`):\n            Paradigm to follow when decoding bytes to UTF-8. See\n            [bytes.decode](https://docs.python.org/3/library/stdtypes.html#bytes.decode) for more information.\n        unk_token (`str`, *optional*, defaults to `<|endoftext|>`):\n            The unknown token. A token that is not in the vocabulary cannot be converted to an ID and is set to be this\n            token instead.\n        bos_token (`str`, *optional*, defaults to `\"<|endoftext|>\"`):\n            The beginning of sequence token. The `decoder_start_token_id` is used to set the first token as\n            `\"<|startoftranscript|>\"` when generating.\n        eos_token (`str`, *optional*, defaults to `<|endoftext|>`):\n            The end of sequence token.\n        add_prefix_space (`bool`, *optional*, defaults to `False`):\n            Whether or not to add an initial space to the input. This allows to treat the leading word just as any\n            other word. (Whisper tokenizer detect beginning of words by the preceding space).\n        trim_offsets (`bool`, *optional*, defaults to `True`):\n            Whether or not the post-processing step should trim offsets to avoid including whitespaces.\n        language (`str`, *optional*):\n            The language of the transcription text. The corresponding language id token is appended to the start of the\n            sequence for multilingual speech recognition and speech translation tasks, e.g. for Spanish the token\n            `\"<|es|>\"` is appended to the start of sequence. This should be used for multilingual fine-tuning only.\n        task (`str`, *optional*):\n            Task identifier to append at the start of sequence (if any). This should be used for mulitlingual\n            fine-tuning, with `\"transcribe\"` for speech recognition and `\"translate\"` for speech translation.\n        predict_timestamps (`bool`, *optional*, defaults to `False`):\n            Whether to omit the `<|notimestamps|>` token at the start of the sequence.\n    \"\"\"", "f\"You need to instantiate {self.__class__.__name__} with add_prefix_space=True \"", "\"to use it with pretokenized inputs.\"", "f\"You need to instantiate {self.__class__.__name__} with add_prefix_space=True \"", "\"to use it with pretokenized inputs.\"", "\"\"\"\n        Compute offsets for a given tokenized input\n\n        Args:\n            token_ids (`Union[int, List[int], np.ndarray, torch.Tensor, tf.Tensor]`):\n                List of tokenized input ids. Can be obtained using the `__call__` method.\n            time_precision (`float`, `optional`, defaults to 0.02):\n                The time ratio to convert from token to time.\n        \"\"\"", "\"\"\"\n        Converts a sequence of ids in a string, using the tokenizer and vocabulary with options to remove special\n        tokens and clean up tokenization spaces.\n\n        Similar to doing `self.convert_tokens_to_string(self.convert_ids_to_tokens(token_ids))`.\n\n        Args:\n            token_ids (`Union[int, List[int], np.ndarray, torch.Tensor, tf.Tensor]`):\n                List of tokenized input ids. Can be obtained using the `__call__` method.\n            skip_special_tokens (`bool`, *optional*, defaults to `False`):\n                Whether or not to remove special tokens in the decoding.\n            clean_up_tokenization_spaces (`bool`, *optional*):\n                Whether or not to clean up the tokenization spaces. If `None`, will default to\n                `self.clean_up_tokenization_spaces` (available in the `tokenizer_config`).\n            kwargs (additional keyword arguments, *optional*):\n                Will be passed to the underlying model specific decode method.\n            output_offsets (`bool`, *optional*, defaults to `False`):\n                Whether or not to output the offsets of the tokens. This should only be set if the model predicted\n                timestamps.\n            decode_with_timestamps (`bool`, *optional*, defaults to `False`):\n                Whether or not to decode with timestamps included in the raw text.\n        Returns:\n            `str`: The decoded sentence.\n        \"\"\"", "\"\"\"\n        Override the prefix tokens appended to the start of the label sequence. This method can be used standalone to\n        update the prefix tokens as required when fine-tuning. Example:\n\n        ```python\n        >>> # instantiate the tokenizer and set the prefix token to Spanish\n        >>> tokenizer = WhisperTokenizerFast.from_pretrained(\"openai/whisper-tiny\", language=\"spanish\")\n        >>> # now switch the prefix token from Spanish to French\n        >>> tokenizer.set_prefix_tokens(language=\"french\")\n        ```\n\n        Args:\n            language (`str`, *optional*, defaults to `None`):\n                The language of the transcription text.\n            task (`str`, *optional*, defaults to `None`):\n                Task identifier to append at the start of sequence (if any).\n            predict_timestamps (`bool`, *optional*, defaults to `None`):\n                Whether to omit the `<|notimestamps|>` token at the start of the sequence.\n        \"\"\"", "\"\"\"You are a helpful, respectful and honest assistant. Always answer as helpfully as possible, while being safe. Your \\\nanswers should not include any harmful, unethical, racist, sexist, toxic, dangerous, or illegal content. Please ensure\\\n that your responses are socially unbiased and positive in nature.\n\nIf a question does not make any sense, or is not factually coherent, explain why instead of answering something not \\\ncorrect. If you don't know the answer to a question, please don't share false information.\"\"\"", "\"\"\"\n    Construct a Llama tokenizer. Based on byte-level Byte-Pair-Encoding.\n\n    This uses notably ByteFallback and no normalization.\n\n    ```python\n    >>> from transformers import CodeLlamaTokenizerFast\n\n    >>> tokenizer = CodeLlamaTokenizerFast.from_pretrained(\"hf-internal-testing/llama-tokenizer\")\n    >>> tokenizer.encode(\"Hello this is a test\")\n    [1, 15043, 445, 338, 263, 1243]\n    ```\n\n    If you want to change the `bos_token` or the `eos_token`, make sure to specify them when initializing the model, or\n    call `tokenizer.update_post_processor()` to make sure that the post-processing is correctly done (otherwise the\n    values of the first token and final token of an encoded sequence will not be correct). For more details, checkout\n    [post-processors] (https://huggingface.co/docs/tokenizers/api/post-processors) documentation.\n\n\n    This tokenizer inherits from [`PreTrainedTokenizerFast`] which contains most of the main methods. Users should\n    refer to this superclass for more information regarding those methods. The default configuration match that of\n    [codellama/CodeLlama-7b-Instruct-hf](https://huggingface.co/codellama/CodeLlama-7b-Instruct-hf/blob/main/tokenizer_config.json)\n    which supports prompt infilling.\n\n    Args:\n        vocab_file (`str`):\n            [SentencePiece](https://github.com/google/sentencepiece) file (generally has a .model extension) that\n            contains the vocabulary necessary to instantiate a tokenizer.\n        tokenizer_file (`str`):\n            [tokenizers](https://github.com/huggingface/tokenizers) file (generally has a .json extension) that\n            contains everything needed to load the tokenizer.\n        clean_up_tokenization_spaces (`str`, *optional*, defaults to `False`):\n            Wether to cleanup spaces after decoding, cleanup consists in removing potential artifacts like extra\n            spaces.\n        bos_token (`str`, *optional*, defaults to `\"<s>\"`):\n            The beginning of sequence token that was used during pretraining. Can be used a sequence classifier token.\n        eos_token (`str`, *optional*, defaults to `\"</s>\"`):\n            The end of sequence token.\n        unk_token (`str`, *optional*, defaults to `\"<unk>\"`):\n            The unknown token. A token that is not in the vocabulary cannot be converted to an ID and is set to be this\n            token instead.\n        prefix_token (`str`, *optional*, defaults to `\"\u2581<PRE>\"`):\n            Prefix token used for infilling.\n        suffix_token (`str`, *optional*, defaults to `\"\u2581<SUF>\"`):\n            Suffix token used for infilling.\n        middle_token (`str`, *optional*, defaults to `\"\u2581<MID>\"`):\n            Middle token used for infilling.\n        eot_token (`str`, *optional*, defaults to `\"\u2581<EOT>\"`):\n            End of text token used for infilling.\n        fill_token (`str`, *optional*, defaults to `\"<FILL_ME>\"`):\n            The token used to split the input between the prefix and suffix.\n        suffix_first (`bool`, *optional*, default to `False`):\n            Whether the input prompt and suffix should be formatted with the suffix first.\n        additional_special_tokens (`List[str]`, *optional*):\n            Additional special tokens used by the tokenizer.\n        use_default_system_prompt (`bool`, *optional*, defaults to `True`):\n            Whether or not the default system prompt for Llama should be used.\n    \"\"\"", "\"\"\"\n        Updates the underlying post processor with the current `bos_token` and `eos_token`.\n        \"\"\"", "\"Then input includes a `prefix` and a `suffix` used for the infilling task,\"", "\" the `prefix_id, middle_id, suffix_id` must all be initialized. Current\"", "\"Your fast tokenizer does not have the necessary information to save the vocabulary for a slow \"", "\"\"\"\n        Build model inputs from a sequence or a pair of sequence for sequence classification tasks by concatenating and\n        adding special tokens. The special tokens depend on calling set_lang.\n\n        An NLLB sequence has the following format, where `X` represents the sequence:\n\n        - `input_ids` (for encoder) `X [eos, src_lang_code]`\n        - `decoder_input_ids`: (for decoder) `X [eos, tgt_lang_code]`\n\n        BOS is never used. Pairs of sequences are not the expected use case, but they will be handled without a\n        separator.\n\n        Args:\n            token_ids_0 (`List[int]`):\n                List of IDs to which the special tokens will be added.\n            token_ids_1 (`List[int]`, *optional*):\n                Optional second list of IDs for sequence pairs.\n\n        Returns:\n            `List[int]`: list of [input IDs](../glossary#input-ids) with the appropriate special tokens.\n        \"\"\"", "r\"\"\"Builds the input ids for a conversation.\n        This is the format used in the provided examples. System prompts should be manually added at the beginning of\n        the conversation. If no system prompt is given, the `DEFAULT_SYSTEM_PROMPT` will be used.\n        ```\n        <bos>[INST] B_SYS SytemPrompt E_SYS Prompt [/INST] Answer <eos>\n        <bos>[INST] Prompt [/INST] Answer <eos>\n        <bos>[INST] Prompt [/INST]\n        ```\n\n        If you want to use your own system prompt, make sure to use both `B_SYS` and `E_SYS` use the following:\n        ```python\n        >>> from transformers import Conversation\n\n        >>> Conversation(\n        ...     \"<<SYS>>\\n Complete the functions without any documentation\\n<</SYS>>\\n\\n `def remove_non_ascii(s: str) -> str:`\"\n        ... )  # doctest: +IGNORE_RESULT\n        ```\n        Args:\n            conversation (`Conversation`):\n                Conversation to build input ids for.\n        Returns:\n            `List[int]`:\n                Input ids for the conversation.\n        \"\"\"", "\"The model only supports 'user' and 'assistant' roles, starting with user and alternating (u/a/u/a/u...)\"", "\"from transformers import load_tool\"", "f\"I will use the following {result}\"", "\"\"\"\n    Base class for all agents which contains the main API methods.\n\n    Args:\n        chat_prompt_template (`str`, *optional*):\n            Pass along your own prompt if you want to override the default template for the `chat` method. Can be the\n            actual prompt template or a repo ID (on the Hugging Face Hub). The prompt should be in a file named\n            `chat_prompt_template.txt` in this repo in this case.\n        run_prompt_template (`str`, *optional*):\n            Pass along your own prompt if you want to override the default template for the `run` method. Can be the\n            actual prompt template or a repo ID (on the Hugging Face Hub). The prompt should be in a file named\n            `run_prompt_template.txt` in this repo in this case.\n        additional_tools ([`Tool`], list of tools or dictionary with tool values, *optional*):\n            Any additional tools to include on top of the default ones. If you pass along a tool with the same name as\n            one of the default tools, that default tool will be overridden.\n    \"\"\"", "f\"The following tools have been replaced by the ones provided in `additional_tools`:\\n{names}.\"", "\"\"\"\n        Set the function use to stream results (which is `print` by default).\n\n        Args:\n            streamer (`callable`): The function to call when streaming results from the LLM.\n        \"\"\"", "\"\"\"\n        Sends a new request to the agent in a chat. Will use the previous ones in its history.\n\n        Args:\n            task (`str`): The task to perform\n            return_code (`bool`, *optional*, defaults to `False`):\n                Whether to just return code and not evaluate it.\n            remote (`bool`, *optional*, defaults to `False`):\n                Whether or not to use remote tools (inference endpoints) instead of local ones.\n            kwargs (additional keyword arguments, *optional*):\n                Any keyword argument to send to the agent when evaluating the code.\n\n        Example:\n\n        ```py\n        from transformers import HfAgent\n\n        agent = HfAgent(\"https://api-inference.huggingface.co/models/bigcode/starcoder\")\n        agent.chat(\"Draw me a picture of rivers and lakes\")\n\n        agent.chat(\"Transform the picture so that there is a rock in there\")\n        ```\n        \"\"\"", "\"\"\"\n        Clears the history of prior calls to [`~Agent.chat`].\n        \"\"\"", "\"\"\"\n        Sends a request to the agent.\n\n        Args:\n            task (`str`): The task to perform\n            return_code (`bool`, *optional*, defaults to `False`):\n                Whether to just return code and not evaluate it.\n            remote (`bool`, *optional*, defaults to `False`):\n                Whether or not to use remote tools (inference endpoints) instead of local ones.\n            kwargs (additional keyword arguments, *optional*):\n                Any keyword argument to send to the agent when evaluating the code.\n\n        Example:\n\n        ```py\n        from transformers import HfAgent\n\n        agent = HfAgent(\"https://api-inference.huggingface.co/models/bigcode/starcoder\")\n        agent.run(\"Draw me a picture of rivers and lakes\")\n        ```\n        \"\"\"", "\"\"\"\n    Agent that uses the openai API to generate code.\n\n    <Tip warning={true}>\n\n    The openAI models are used in generation mode, so even for the `chat()` API, it's better to use models like\n    `\"text-davinci-003\"` over the chat-GPT variant. Proper support for chat-GPT models will come in a next version.\n\n    </Tip>\n\n    Args:\n        model (`str`, *optional*, defaults to `\"text-davinci-003\"`):\n            The name of the OpenAI model to use.\n        api_key (`str`, *optional*):\n            The API key to use. If unset, will look for the environment variable `\"OPENAI_API_KEY\"`.\n        chat_prompt_template (`str`, *optional*):\n            Pass along your own prompt if you want to override the default template for the `chat` method. Can be the\n            actual prompt template or a repo ID (on the Hugging Face Hub). The prompt should be in a file named\n            `chat_prompt_template.txt` in this repo in this case.\n        run_prompt_template (`str`, *optional*):\n            Pass along your own prompt if you want to override the default template for the `run` method. Can be the\n            actual prompt template or a repo ID (on the Hugging Face Hub). The prompt should be in a file named\n            `run_prompt_template.txt` in this repo in this case.\n        additional_tools ([`Tool`], list of tools or dictionary with tool values, *optional*):\n            Any additional tools to include on top of the default ones. If you pass along a tool with the same name as\n            one of the default tools, that default tool will be overridden.\n\n    Example:\n\n    ```py\n    from transformers import OpenAiAgent\n\n    agent = OpenAiAgent(model=\"text-davinci-003\", api_key=xxx)\n    agent.run(\"Is the following `text` (in Spanish) positive or negative?\", text=\"\u00a1Este es un API muy agradable!\")\n    ```\n    \"\"\"", "\"You need an openai key to use `OpenAIAgent`. You can get one here: Get one here \"", "\"https://openai.com/api/`. If you have one, set it in your env with `os.environ['OPENAI_API_KEY'] = \"", "\"\"\"\n    Agent that uses Azure OpenAI to generate code. See the [official\n    documentation](https://learn.microsoft.com/en-us/azure/cognitive-services/openai/) to learn how to deploy an openAI\n    model on Azure\n\n    <Tip warning={true}>\n\n    The openAI models are used in generation mode, so even for the `chat()` API, it's better to use models like\n    `\"text-davinci-003\"` over the chat-GPT variant. Proper support for chat-GPT models will come in a next version.\n\n    </Tip>\n\n    Args:\n        deployment_id (`str`):\n            The name of the deployed Azure openAI model to use.\n        api_key (`str`, *optional*):\n            The API key to use. If unset, will look for the environment variable `\"AZURE_OPENAI_API_KEY\"`.\n        resource_name (`str`, *optional*):\n            The name of your Azure OpenAI Resource. If unset, will look for the environment variable\n            `\"AZURE_OPENAI_RESOURCE_NAME\"`.\n        api_version (`str`, *optional*, default to `\"2022-12-01\"`):\n            The API version to use for this agent.\n        is_chat_mode (`bool`, *optional*):\n            Whether you are using a completion model or a chat model (see note above, chat models won't be as\n            efficient). Will default to `gpt` being in the `deployment_id` or not.\n        chat_prompt_template (`str`, *optional*):\n            Pass along your own prompt if you want to override the default template for the `chat` method. Can be the\n            actual prompt template or a repo ID (on the Hugging Face Hub). The prompt should be in a file named\n            `chat_prompt_template.txt` in this repo in this case.\n        run_prompt_template (`str`, *optional*):\n            Pass along your own prompt if you want to override the default template for the `run` method. Can be the\n            actual prompt template or a repo ID (on the Hugging Face Hub). The prompt should be in a file named\n            `run_prompt_template.txt` in this repo in this case.\n        additional_tools ([`Tool`], list of tools or dictionary with tool values, *optional*):\n            Any additional tools to include on top of the default ones. If you pass along a tool with the same name as\n            one of the default tools, that default tool will be overridden.\n\n    Example:\n\n    ```py\n    from transformers import AzureOpenAiAgent\n\n    agent = AzureAiAgent(deployment_id=\"Davinci-003\", api_key=xxx, resource_name=yyy)\n    agent.run(\"Is the following `text` (in Spanish) positive or negative?\", text=\"\u00a1Este es un API muy agradable!\")\n    ```\n    \"\"\"", "\"You need an Azure openAI key to use `AzureOpenAIAgent`. If you have one, set it in your env with \"", "\"You need a resource_name to use `AzureOpenAIAgent`. If you have one, set it in your env with \"", "\"\"\"\n    Agent that uses an inference endpoint to generate code.\n\n    Args:\n        url_endpoint (`str`):\n            The name of the url endpoint to use.\n        token (`str`, *optional*):\n            The token to use as HTTP bearer authorization for remote files. If unset, will use the token generated when\n            running `huggingface-cli login` (stored in `~/.huggingface`).\n        chat_prompt_template (`str`, *optional*):\n            Pass along your own prompt if you want to override the default template for the `chat` method. Can be the\n            actual prompt template or a repo ID (on the Hugging Face Hub). The prompt should be in a file named\n            `chat_prompt_template.txt` in this repo in this case.\n        run_prompt_template (`str`, *optional*):\n            Pass along your own prompt if you want to override the default template for the `run` method. Can be the\n            actual prompt template or a repo ID (on the Hugging Face Hub). The prompt should be in a file named\n            `run_prompt_template.txt` in this repo in this case.\n        additional_tools ([`Tool`], list of tools or dictionary with tool values, *optional*):\n            Any additional tools to include on top of the default ones. If you pass along a tool with the same name as\n            one of the default tools, that default tool will be overridden.\n\n    Example:\n\n    ```py\n    from transformers import HfAgent\n\n    agent = HfAgent(\"https://api-inference.huggingface.co/models/bigcode/starcoder\")\n    agent.run(\"Is the following `text` (in Spanish) positive or negative?\", text=\"\u00a1Este es un API muy agradable!\")\n    ```\n    \"\"\"", "\"\"\"\n    Agent that uses a local model and tokenizer to generate code.\n\n    Args:\n        model ([`PreTrainedModel`]):\n            The model to use for the agent.\n        tokenizer ([`PreTrainedTokenizer`]):\n            The tokenizer to use for the agent.\n        chat_prompt_template (`str`, *optional*):\n            Pass along your own prompt if you want to override the default template for the `chat` method. Can be the\n            actual prompt template or a repo ID (on the Hugging Face Hub). The prompt should be in a file named\n            `chat_prompt_template.txt` in this repo in this case.\n        run_prompt_template (`str`, *optional*):\n            Pass along your own prompt if you want to override the default template for the `run` method. Can be the\n            actual prompt template or a repo ID (on the Hugging Face Hub). The prompt should be in a file named\n            `run_prompt_template.txt` in this repo in this case.\n        additional_tools ([`Tool`], list of tools or dictionary with tool values, *optional*):\n            Any additional tools to include on top of the default ones. If you pass along a tool with the same name as\n            one of the default tools, that default tool will be overridden.\n\n    Example:\n\n    ```py\n    import torch\n    from transformers import AutoModelForCausalLM, AutoTokenizer, LocalAgent\n\n    checkpoint = \"bigcode/starcoder\"\n    model = AutoModelForCausalLM.from_pretrained(checkpoint, device_map=\"auto\", torch_dtype=torch.bfloat16)\n    tokenizer = AutoTokenizer.from_pretrained(checkpoint)\n\n    agent = LocalAgent(model, tokenizer)\n    agent.run(\"Draw me a picture of rivers and lakes.\")\n    ```\n    \"\"\"", "\"\"\"\n        Convenience method to build a `LocalAgent` from a pretrained checkpoint.\n\n        Args:\n            pretrained_model_name_or_path (`str` or `os.PathLike`):\n                The name of a repo on the Hub or a local path to a folder containing both model and tokenizer.\n            kwargs (`Dict[str, Any]`, *optional*):\n                Keyword arguments passed along to [`~PreTrainedModel.from_pretrained`].\n\n        Example:\n\n        ```py\n        import torch\n        from transformers import LocalAgent\n\n        agent = LocalAgent.from_pretrained(\"bigcode/starcoder\", device_map=\"auto\", torch_dtype=torch.bfloat16)\n        agent.run(\"Draw me a picture of rivers and lakes.\")\n        ```\n        \"\"\"", "\"\"\"\n    This class can be used to stop generation whenever a sequence of tokens is encountered.\n\n    Args:\n        stop_sequences (`str` or `List[str]`):\n            The sequence (or list of sequences) on which to stop execution.\n        tokenizer:\n            The tokenizer used to decode the model outputs.\n    \"\"\"", "f\"`{repo_id}` does not seem to be a valid repo identifier on the Hub.\"", "\"\"\"from transformers import launch_gradio_demo\nfrom {module_name} import {class_name}\n\nlaunch_gradio_demo({class_name})\n\"\"\"", "\"\"\"\n    A base class for the functions used by the agent. Subclass this and implement the `__call__` method as well as the\n    following class attributes:\n\n    - **description** (`str`) -- A short description of what your tool does, the inputs it expects and the output(s) it\n      will return. For instance 'This is a tool that downloads a file from a `url`. It takes the `url` as input, and\n      returns the text contained in the file'.\n    - **name** (`str`) -- A performative name that will be used for your tool in the prompt to the agent. For instance\n      `\"text-classifier\"` or `\"image_generator\"`.\n    - **inputs** (`List[str]`) -- The list of modalities expected for the inputs (in the same order as in the call).\n      Modalitiies should be `\"text\"`, `\"image\"` or `\"audio\"`. This is only used by `launch_gradio_demo` or to make a\n      nice space from your tool.\n    - **outputs** (`List[str]`) -- The list of modalities returned but the tool (in the same order as the return of the\n      call method). Modalitiies should be `\"text\"`, `\"image\"` or `\"audio\"`. This is only used by `launch_gradio_demo`\n      or to make a nice space from your tool.\n\n    You can also override the method [`~Tool.setup`] if your tool as an expensive operation to perform before being\n    usable (such as loading a model). [`~Tool.setup`] will be called the first time you use your tool, but not at\n    instantiation.\n    \"\"\"", "\"This is a tool that ...\"", "\"Write this method in your subclass of `Tool`.\"", "\"\"\"\n        Overwrite this method here for any operation that is expensive and needs to be executed before you start using\n        your tool. Such as loading a big model.\n        \"\"\"", "\"\"\"\n        Saves the relevant code files for your tool so it can be pushed to the Hub. This will copy the code of your\n        tool in `output_dir` as well as autogenerate:\n\n        - a config file named `tool_config.json`\n        - an `app.py` file so that your tool can be converted to a space\n        - a `requirements.txt` containing the names of the module used by your tool (as detected when inspecting its\n          code)\n\n        You should only use this method to save tools that are defined in a separate module (not `__main__`).\n\n        Args:\n            output_dir (`str`): The folder in which you want to save your tool.\n        \"\"\"", "f\"We can't save the code defining {self} in {output_dir} as it's been defined in __main__. You \"", "\"have to put this code in a separate module so we can include it in the saved folder.\"", "\"\"\"\n        Loads a tool defined on the Hub.\n\n        Args:\n            repo_id (`str`):\n                The name of the repo on the Hub where your tool is defined.\n            model_repo_id (`str`, *optional*):\n                If your tool uses a model and you want to use a different model than the default, you can pass a second\n                repo ID or an endpoint url to this argument.\n            token (`str`, *optional*):\n                The token to identify you on hf.co. If unset, will use the token generated when running\n                `huggingface-cli login` (stored in `~/.huggingface`).\n            remote (`bool`, *optional*, defaults to `False`):\n                Whether to use your tool by downloading the model or (if it is available) with an inference endpoint.\n            kwargs (additional keyword arguments, *optional*):\n                Additional keyword arguments that will be split in two: all arguments relevant to the Hub (such as\n                `cache_dir`, `revision`, `subfolder`) will be used when downloading the files for your tool, and the\n                others will be passed along to its init.\n        \"\"\"", "f\"Could not infer a default endpoint for {repo_id}, you need to pass one using the \"", "\"\"\"\n        Upload the tool to the Hub.\n\n        Parameters:\n            repo_id (`str`):\n                The name of the repository you want to push your tool to. It should contain your organization name when\n                pushing to a given organization.\n            commit_message (`str`, *optional*, defaults to `\"Upload tool\"`):\n                Message to commit while pushing.\n            private (`bool`, *optional*):\n                Whether or not the repository created should be private.\n            token (`bool` or `str`, *optional*):\n                The token to use as HTTP bearer authorization for remote files. If unset, will use the token generated\n                when running `huggingface-cli login` (stored in `~/.huggingface`).\n            create_pr (`bool`, *optional*, defaults to `False`):\n                Whether or not to create a PR with the uploaded files or directly commit.\n        \"\"\"", "f\"Uploading the following files to {repo_id}: {','.join(os.listdir(work_dir))}\"", "\"\"\"\n    A [`Tool`] that will make requests to an inference endpoint.\n\n    Args:\n        endpoint_url (`str`):\n            The url of the endpoint to use.\n        token (`str`, *optional*):\n            The token to use as HTTP bearer authorization for remote files. If unset, will use the token generated when\n            running `huggingface-cli login` (stored in `~/.huggingface`).\n        tool_class (`type`, *optional*):\n            The corresponding `tool_class` if this is a remote version of an existing tool. Will help determine when\n            the output should be converted to another type (like images).\n    \"\"\"", "\"\"\"\n        Prepare the inputs received for the HTTP client sending data to the endpoint. Positional arguments will be\n        matched with the signature of the `tool_class` if it was provided at instantation. Images will be encoded into\n        bytes.\n\n        You can override this method in your custom class of [`RemoteTool`].\n        \"\"\"", "\"\"\"\n        You can override this method in your custom class of [`RemoteTool`] to apply some custom post-processing of the\n        outputs of the endpoint.\n        \"\"\"", "\"\"\"\n    A [`Tool`] tailored towards Transformer models. On top of the class attributes of the base class [`Tool`], you will\n    need to specify:\n\n    - **model_class** (`type`) -- The class to use to load the model in this tool.\n    - **default_checkpoint** (`str`) -- The default checkpoint that should be used when the user doesn't specify one.\n    - **pre_processor_class** (`type`, *optional*, defaults to [`AutoProcessor`]) -- The class to use to load the\n      pre-processor\n    - **post_processor_class** (`type`, *optional*, defaults to [`AutoProcessor`]) -- The class to use to load the\n      post-processor (when different from the pre-processor).\n\n    Args:\n        model (`str` or [`PreTrainedModel`], *optional*):\n            The name of the checkpoint to use for the model, or the instantiated model. If unset, will default to the\n            value of the class attribute `default_checkpoint`.\n        pre_processor (`str` or `Any`, *optional*):\n            The name of the checkpoint to use for the pre-processor, or the instantiated pre-processor (can be a\n            tokenizer, an image processor, a feature extractor or a processor). Will default to the value of `model` if\n            unset.\n        post_processor (`str` or `Any`, *optional*):\n            The name of the checkpoint to use for the post-processor, or the instantiated pre-processor (can be a\n            tokenizer, an image processor, a feature extractor or a processor). Will default to the `pre_processor` if\n            unset.\n        device (`int`, `str` or `torch.device`, *optional*):\n            The device on which to execute the model. Will default to any accelerator available (GPU, MPS etc...), the\n            CPU otherwise.\n        device_map (`str` or `dict`, *optional*):\n            If passed along, will be used to instantiate the model.\n        model_kwargs (`dict`, *optional*):\n            Any keyword argument to send to the model instantiation.\n        token (`str`, *optional*):\n            The token to use as HTTP bearer authorization for remote files. If unset, will use the token generated when\n            running `huggingface-cli login` (stored in `~/.huggingface`).\n        hub_kwargs (additional keyword arguments, *optional*):\n            Any additional keyword argument to send to the methods that will load the data from the Hub.\n    \"\"\"", "\"\"\"\n        Instantiates the `pre_processor`, `model` and `post_processor` if necessary.\n        \"\"\"", "\"\"\"\n        Uses the `pre_processor` to prepare the inputs for the `model`.\n        \"\"\"", "\"\"\"\n        Sends the inputs through the `model`.\n        \"\"\"", "\"\"\"\n        Uses the `post_processor` to decode the model output.\n        \"\"\"", "\"\"\"\n    Launches a gradio demo for a tool. The corresponding tool class needs to properly implement the class attributes\n    `inputs` and `outputs`.\n\n    Args:\n        tool_class (`type`): The class of the tool for which to launch the demo.\n    \"\"\"", "\"speech-to-text\"", "\"text-to-speech\"", "\"\"\"\n    Main function to quickly load a tool, be it on the Hub or in the Transformers library.\n\n    Args:\n        task_or_repo_id (`str`):\n            The task for which to load the tool or a repo ID of a tool on the Hub. Tasks implemented in Transformers\n            are:\n\n            - `\"document-question-answering\"`\n            - `\"image-captioning\"`\n            - `\"image-question-answering\"`\n            - `\"image-segmentation\"`\n            - `\"speech-to-text\"`\n            - `\"summarization\"`\n            - `\"text-classification\"`\n            - `\"text-question-answering\"`\n            - `\"text-to-speech\"`\n            - `\"translation\"`\n\n        model_repo_id (`str`, *optional*):\n            Use this argument to use a different model than the default one for the tool you selected.\n        remote (`bool`, *optional*, defaults to `False`):\n            Whether to use your tool by downloading the model or (if it is available) with an inference endpoint.\n        token (`str`, *optional*):\n            The token to identify you on hf.co. If unset, will use the token generated when running `huggingface-cli\n            login` (stored in `~/.huggingface`).\n        kwargs (additional keyword arguments, *optional*):\n            Additional keyword arguments that will be split in two: all arguments relevant to the Hub (such as\n            `cache_dir`, `revision`, `subfolder`) will be used when downloading the files for your tool, and the others\n            will be passed along to its init.\n    \"\"\"", "f\"Could not infer a default endpoint for {task_or_repo_id}, you need to pass one using the \"", "\"\"\"You are a helpful, respectful and honest assistant. Always answer as helpfully as possible, while being safe. Your \\\nanswers should not include any harmful, unethical, racist, sexist, toxic, dangerous, or illegal content. Please ensure\\\n that your responses are socially unbiased and positive in nature.\n\nIf a question does not make any sense, or is not factually coherent, explain why instead of answering something not \\\ncorrect. If you don't know the answer to a question, please don't share false information.\"\"\"", "\"\"\"\n    Construct a Llama tokenizer. Based on byte-level Byte-Pair-Encoding.\n\n    This uses notably ByteFallback and no normalization.\n\n    ```\n    from transformers import LlamaTokenizerFast\n\n    tokenizer = LlamaTokenizerFast.from_pretrained(\"hf-internal-testing/llama-tokenizer\")\n    tokenizer.encode(\"Hello this is a test\")\n    >>> [1, 15043, 445, 338, 263, 1243]\n    ```\n\n    If you want to change the `bos_token` or the `eos_token`, make sure to specify them when initializing the model, or\n    call `tokenizer.update_post_processor()` to make sure that the post-processing is correctly done (otherwise the\n    values of the first token and final token of an encoded sequence will not be correct). For more details, checkout\n    [post-processors] (https://huggingface.co/docs/tokenizers/api/post-processors) documentation.\n\n\n    This tokenizer inherits from [`PreTrainedTokenizerFast`] which contains most of the main methods. Users should\n    refer to this superclass for more information regarding those methods.\n\n    Args:\n        vocab_file (`str`):\n            [SentencePiece](https://github.com/google/sentencepiece) file (generally has a .model extension) that\n            contains the vocabulary necessary to instantiate a tokenizer.\n        tokenizer_file (`str`):\n            [tokenizers](https://github.com/huggingface/tokenizers) file (generally has a .json extension) that\n            contains everything needed to load the tokenizer.\n\n        clean_up_tokenization_spaces (`str`, *optional*, defaults to `False`):\n            Wether to cleanup spaces after decoding, cleanup consists in removing potential artifacts like extra\n            spaces.\n\n        bos_token (`str`, *optional*, defaults to `\"<s>\"`):\n            The beginning of sequence token that was used during pretraining. Can be used a sequence classifier token.\n\n        eos_token (`str`, *optional*, defaults to `\"</s>\"`):\n            The end of sequence token.\n\n        unk_token (`str`, *optional*, defaults to `\"<unk>\"`):\n            The unknown token. A token that is not in the vocabulary cannot be converted to an ID and is set to be this\n            token instead.\n    \"\"\"", "\"\"\"\n        Updates the underlying post processor with the current `bos_token` and `eos_token`.\n        \"\"\"", "\"Your fast tokenizer does not have the necessary information to save the vocabulary for a slow \"", "\"\"\"Builds the input ids for a conversation.\n        This is the format used in the provided examples. System prompts should be manually added at the beginning of\n        the conversation. If no system prompt is given, the `DEFAULT_SYSTEM_PROMPT` will be used.\n        ```\n        <bos>[INST] B_SYS SytemPrompt E_SYS Prompt [/INST] Answer <eos>\n        <bos>[INST] Prompt [/INST] Answer <eos>\n        <bos>[INST] Prompt [/INST]\n        ```\n\n        If you want to use your own system prompt, make sure to use both `B_SYS` and `E_SYS` use the following:\n        ```python\n        >>> from transformers import Conversation\n\n        >>> Conversation(\n        ...     \"<<SYS>>\\n Only answer with emojis, and charades\\n<</SYS>>\\n\\nHow can I build a house in 10 septs?\"\n        ... )\n        ```\n        Args:\n            conversation (`Conversation`):\n                Conversation to build input ids for.\n        Returns:\n            `List[int]`:\n                Input ids for the conversation.\n        \"\"\"", "\"The model only supports 'user' and 'assistant' roles, starting with user and alternating (u/a/u/a/u...)\"", "\"\"\"\n    Holds the basic information about a new model for the add-new-model-like command.\n\n    Args:\n        model_name (`str`): The model name.\n        checkpoint (`str`): The checkpoint to use for doc examples.\n        model_type (`str`, *optional*):\n            The model type, the identifier used internally in the library like `bert` or `xlm-roberta`. Will default to\n            `model_name` lowercased with spaces replaced with minuses (-).\n        model_lower_cased (`str`, *optional*):\n            The lowercased version of the model name, to use for the module name or function names. Will default to\n            `model_name` lowercased with spaces and minuses replaced with underscores.\n        model_camel_cased (`str`, *optional*):\n            The camel-cased version of the model name, to use for the class names. Will default to `model_name`\n            camel-cased (with spaces and minuses both considered as word separators.\n        model_upper_cased (`str`, *optional*):\n            The uppercased version of the model name, to use for the constant names. Will default to `model_name`\n            uppercased with spaces and minuses replaced with underscores.\n        config_class (`str`, *optional*):\n            The tokenizer class associated with this model. Will default to `\"{model_camel_cased}Config\"`.\n        tokenizer_class (`str`, *optional*):\n            The tokenizer class associated with this model (leave to `None` for models that don't use a tokenizer).\n        image_processor_class (`str`, *optional*):\n            The image processor class associated with this model (leave to `None` for models that don't use an image\n            processor).\n        feature_extractor_class (`str`, *optional*):\n            The feature extractor class associated with this model (leave to `None` for models that don't use a feature\n            extractor).\n        processor_class (`str`, *optional*):\n            The processor class associated with this model (leave to `None` for models that don't use a processor).\n    \"\"\"", "\"\"\"\n    Parse the content of a module in the list of objects it defines.\n\n    Args:\n        content (`str`): The content to parse\n\n    Returns:\n        `List[str]`: The list of objects defined in the module.\n    \"\"\"", "\"# Copied from\"", "\"\"\"Return the first block in `content` with the indent level `indent_level`.\n\n    The first line in `content` should be indented at `indent_level` level, otherwise an error will be thrown.\n\n    This method will immediately stop the search when a (non-empty) line with indent level less than `indent_level` is\n    encountered.\n\n    Args:\n        content (`str`): The content to parse\n        indent_level (`int`, *optional*, default to 0): The indent level of the blocks to search for\n\n    Returns:\n        `str`: The first block in `content` with the indent level `indent_level`.\n    \"\"\"", "\"\"\"\n    A utility to add some content inside a given text.\n\n    Args:\n       text (`str`): The text in which we want to insert some content.\n       content (`str`): The content to add.\n       add_after (`str` or `Pattern`):\n           The pattern to test on a line of `text`, the new content is added after the first instance matching it.\n       add_before (`str` or `Pattern`):\n           The pattern to test on a line of `text`, the new content is added before the first instance matching it.\n       exact_match (`bool`, *optional*, defaults to `False`):\n           A line is considered a match with `add_after` or `add_before` if it matches exactly when `exact_match=True`,\n           otherwise, if `add_after`/`add_before` is present in the line.\n\n    <Tip warning={true}>\n\n    The arguments `add_after` and `add_before` are mutually exclusive, and one exactly needs to be provided.\n\n    </Tip>\n\n    Returns:\n        `str`: The text with the new content added if a match was found.\n    \"\"\"", "\"You need to pass either `add_after` or `add_before`\"", "\"\"\"\n    A utility to add some content inside a given file.\n\n    Args:\n       file_name (`str` or `os.PathLike`): The name of the file in which we want to insert some content.\n       content (`str`): The content to add.\n       add_after (`str` or `Pattern`):\n           The pattern to test on a line of `text`, the new content is added after the first instance matching it.\n       add_before (`str` or `Pattern`):\n           The pattern to test on a line of `text`, the new content is added before the first instance matching it.\n       exact_match (`bool`, *optional*, defaults to `False`):\n           A line is considered a match with `add_after` or `add_before` if it matches exactly when `exact_match=True`,\n           otherwise, if `add_after`/`add_before` is present in the line.\n\n    <Tip warning={true}>\n\n    The arguments `add_after` and `add_before` are mutually exclusive, and one exactly needs to be provided.\n\n    </Tip>\n    \"\"\"", "\"\"\"\n    Replace all patterns present in a given text.\n\n    Args:\n        text (`str`): The text to treat.\n        old_model_patterns (`ModelPatterns`): The patterns for the old model.\n        new_model_patterns (`ModelPatterns`): The patterns for the new model.\n\n    Returns:\n        `Tuple(str, str)`: A tuple of with the treated text and the replacement actually done in it.\n    \"\"\"", "\"\"\"\n    Create a new module from an existing one and adapting all function and classes names from old patterns to new ones.\n\n    Args:\n        module_file (`str` or `os.PathLike`): Path to the module to duplicate.\n        old_model_patterns (`ModelPatterns`): The patterns for the old model.\n        new_model_patterns (`ModelPatterns`): The patterns for the new model.\n        dest_file (`str` or `os.PathLike`, *optional*): Path to the new module.\n        add_copied_from (`bool`, *optional*, defaults to `True`):\n            Whether or not to add `# Copied from` statements in the duplicated module.\n    \"\"\"", "r\"^#\\s+Copied from\"", "\"\\n[ ]+# Copied from [^\\n]*\\n\"", "\"\"\"\n    Filter a list of files to only keep the ones corresponding to a list of frameworks.\n\n    Args:\n        files (`List[Union[str, os.PathLike]]`): The list of files to filter.\n        frameworks (`List[str]`, *optional*): The list of allowed frameworks.\n\n    Returns:\n        `List[Union[str, os.PathLike]]`: The list of filtered files.\n    \"\"\"", "\"\"\"\n    Retrieves all the files associated to a model.\n\n    Args:\n        model_type (`str`): A valid model type (like \"bert\" or \"gpt2\")\n        frameworks (`List[str]`, *optional*):\n            If passed, will only keep the model files corresponding to the passed frameworks.\n\n    Returns:\n        `Dict[str, Union[Path, List[Path]]]`: A dictionary with the following keys:\n        - **doc_file** -- The documentation file for the model.\n        - **model_files** -- All the files in the model module.\n        - **test_files** -- The test files for the model.\n    \"\"\"", "\"\"\"\n    Finds the model checkpoint used in the docstrings for a given model.\n\n    Args:\n        model_type (`str`): A valid model type (like \"bert\" or \"gpt2\")\n        model_files (`Dict[str, Union[Path, List[Path]]`, *optional*):\n            The files associated to `model_type`. Can be passed to speed up the function, otherwise will be computed.\n\n    Returns:\n        `str`: The checkpoint used.\n    \"\"\"", "\"\"\"\n    Returns the list of frameworks (PyTorch, TensorFlow, Flax) that are installed in the environment.\n    \"\"\"", "\"\"\"\n    Retrieve the model classes associated to a given model.\n\n    Args:\n        model_type (`str`): A valid model type (like \"bert\" or \"gpt2\")\n        frameworks (`List[str]`, *optional*):\n            The frameworks to look for. Will default to `[\"pt\", \"tf\", \"flax\"]`, passing a smaller list will restrict\n            the classes returned.\n\n    Returns:\n        `Dict[str, List[str]]`: A dictionary with one key per framework and the list of model classes associated to\n        that framework as values.\n    \"\"\"", "f\"You selected {framework} in the frameworks, but it is not installed.\"", "\"\"\"\n    Retrieves all the information from a given model_type.\n\n    Args:\n        model_type (`str`): A valid model type (like \"bert\" or \"gpt2\")\n        frameworks (`List[str]`, *optional*):\n            If passed, will only keep the info corresponding to the passed frameworks.\n\n    Returns:\n        `Dict`: A dictionary with the following keys:\n        - **frameworks** (`List[str]`): The list of frameworks that back this model type.\n        - **model_classes** (`Dict[str, List[str]]`): The model classes implemented for that model type.\n        - **model_files** (`Dict[str, Union[Path, List[Path]]]`): The files associated with that model type.\n        - **model_patterns** (`ModelPatterns`): The various patterns for the model.\n    \"\"\"", "\"\"\"\n    Removes all the import lines that don't belong to a given list of frameworks or concern tokenizers/feature\n    extractors/image processors/processors in an init.\n\n    Args:\n        init_file (`str` or `os.PathLike`): The path to the init to treat.\n        frameworks (`List[str]`, *optional*):\n           If passed, this will remove all imports that are subject to a framework not in frameworks\n        keep_processing (`bool`, *optional*, defaults to `True`):\n            Whether or not to keep the preprocessing (tokenizer, feature extractor, image processor, processor) imports\n            in the init.\n    \"\"\"", "r\"^\\s*from .(tokenization|processing|feature_extraction|image_processing)\"", "\"\"\"\n    Add a model to the main init of Transformers.\n\n    Args:\n        old_model_patterns (`ModelPatterns`): The patterns for the old model.\n        new_model_patterns (`ModelPatterns`): The patterns for the new model.\n        frameworks (`List[str]`, *optional*):\n            If specified, only the models implemented in those frameworks will be added.\n        with_processsing (`bool`, *optional*, defaults to `True`):\n            Whether the tokenizer/feature extractor/processor of the model should also be added to the init or not.\n    \"\"\"", "\"\"\"\n    Add a tokenizer to the relevant mappings in the auto module.\n\n    Args:\n        old_model_patterns (`ModelPatterns`): The patterns for the old model.\n        new_model_patterns (`ModelPatterns`): The patterns for the new model.\n    \"\"\"", "\"\"\"\n    Add a model to the relevant mappings in the auto module.\n\n    Args:\n        old_model_patterns (`ModelPatterns`): The patterns for the old model.\n        new_model_patterns (`ModelPatterns`): The patterns for the new model.\n        model_classes (`Dict[str, List[str]]`): A dictionary framework to list of model classes implemented.\n    \"\"\"", "\"\"\"## Overview\n\nThe {model_name} model was proposed in [<INSERT PAPER NAME HERE>](<INSERT PAPER LINK HERE>) by <INSERT AUTHORS HERE>.\n<INSERT SHORT SUMMARY HERE>\n\nThe abstract from the paper is the following:\n\n*<INSERT PAPER ABSTRACT HERE>*\n\nTips:\n\n<INSERT TIPS ABOUT MODEL HERE>\n\nThis model was contributed by [INSERT YOUR HF USERNAME HERE](https://huggingface.co/<INSERT YOUR HF USERNAME HERE>).\nThe original code can be found [here](<INSERT LINK TO GITHUB REPO HERE>).\n\n\"\"\"", "\"\"\"\n    Duplicate a documentation file and adapts it for a new model.\n\n    Args:\n        module_file (`str` or `os.PathLike`): Path to the doc file to duplicate.\n        old_model_patterns (`ModelPatterns`): The patterns for the old model.\n        new_model_patterns (`ModelPatterns`): The patterns for the new model.\n        dest_file (`str` or `os.PathLike`, *optional*): Path to the new doc file.\n            Will default to the a file named `{new_model_patterns.model_type}.md` in the same folder as `module_file`.\n        frameworks (`List[str]`, *optional*):\n            If passed, will only keep the model classes corresponding to this list of frameworks in the new doc file.\n    \"\"\"", "\"\"\"\n    Insert the new model in the doc TOC, in the same section as the old model.\n\n    Args:\n        old_model_patterns (`ModelPatterns`): The patterns for the old model.\n        new_model_patterns (`ModelPatterns`): The patterns for the new model.\n    \"\"\"", "f\"Did not find {old_model} in the table of content, so you will need to add {new_model} manually.\"", "\"\"\"\n    Creates a new model module like a given model of the Transformers library.\n\n    Args:\n        model_type (`str`): The model type to duplicate (like \"bert\" or \"gpt2\")\n        new_model_patterns (`ModelPatterns`): The patterns for the new model.\n        add_copied_from (`bool`, *optional*, defaults to `True`):\n            Whether or not to add \"Copied from\" statements to all classes in the new model modeling files.\n        frameworks (`List[str]`, *optional*):\n            If passed, will limit the duplicate to the frameworks specified.\n        old_checkpoint (`str`, *optional*):\n            The name of the base checkpoint for the old model. Should be passed along when it can't be automatically\n            recovered from the `model_type`.\n    \"\"\"", "\"The old model checkpoint could not be recovered from the model type. Please pass it to the \"", "\"The model you picked has the same name for the model type and the checkpoint name \"", "f\"should be, you have {new_model_patterns.model_type} instead. You should search for all instances of \"", "f\"{new_model_patterns.model_type} in the new files and check they're not badly used as checkpoints.\"", "\"The model you picked has the same name for the model type and the checkpoint name \"", "f\"({old_model_patterns.model_lower_cased}). As a result, it's possible some places where the new \"", "f\"checkpoint should be, you have {new_model_patterns.model_lower_cased} instead. You should search for \"", "f\"all instances of {new_model_patterns.model_lower_cased} in the new files and check they're not badly \"", "\"The model you picked has the same name for the model type and the lowercased model name \"", "f\"({old_model_patterns.model_lower_cased}). As a result, it's possible some places where the new \"", "f\"all instances of {new_model_patterns.model_lower_cased} in the new files and check they're not badly \"", "\"The constants at the start of the new tokenizer file created needs to be manually fixed. If your new \"", "\"model has a tokenizer fast, you will also need to manually add the converter in the \"", "\"A file with all the information for this model creation.\"", "\"When not using an editable install, the path to the Transformers repo.\"", "\"\"\"\n    A utility function that asks a question to the user to get an answer, potentially looping until it gets a valid\n    answer.\n\n    Args:\n        question (`str`): The question to ask the user.\n        default_value (`str`, *optional*): A potential default value that will be used when the answer is empty.\n        is_valid_answer (`Callable`, *optional*):\n            If set, the question will be asked until this function returns `True` on the provided answer.\n        convert_to (`Callable`, *optional*):\n            If set, the answer will be passed to this function. If this function raises an error on the procided\n            answer, the question will be asked again.\n        fallback_message (`str`, *optional*):\n            A message that will be displayed each time the question is asked again to the user.\n\n    Returns:\n        `Any`: The answer provided by the user (or the default), passed through the potential conversion function.\n    \"\"\"", "f\"{question} [{default_value}] \"", "f\"{x} is not a value that can be converted to a bool.\"", "\"\"\"\n    Ask the user for the necessary inputs to add the new model.\n    \"\"\"", "\"What is the model you would like to duplicate? Please provide the lowercase `model_type` (e.g. roberta): \"", "\"We couldn't find the name of the base checkpoint for that model, please enter it here.\"", "\"What is the name (with no special casing) for your new model in the paper (e.g. RoBERTa)? \"", "\"What identifier would you like to use for the `model_type` of this model? \"", "\"What lowercase name would you like to use for the module (folder) of this model? \"", "\"What prefix (camel-cased) would you like to use for the model classes of this model (e.g. Roberta)? \"", "\"What prefix (upper-cased) would you like to use for the constants relative to this model? \"", "\"What will be the name of the config class for this model? \"", "\"What will be the name of the tokenizer class for this model? \"", "\"What will be the name of the image processor class for this model? \"", "\"What will be the name of the feature extractor class for this model? \"", "\"What will be the name of the processor class for this model? \"", "\"Should we add a version of your new model in all the frameworks implemented by\"", "\"Please enter the list of framworks you want (pt, tf, flax) separated by spaces\"", "\"\"\"\nUtility that prepares the repository for releases (or patches) by updating all versions in the relevant places. It\nalso performs some post-release cleanup, by updating the links in the main README to respective model doc pages (from\nmain to stable).\n\nTo prepare for a release, use from the root of the repo on the release branch with:\n\n```bash\npython release.py\n```\n\nor use `make pre-release`.\n\nTo prepare for a patch release, use from the root of the repo on the release branch with:\n\n```bash\npython release.py --patch\n```\n\nor use `make pre-patch`.\n\nTo do the post-release cleanup, use from the root of the repo on the main branch with:\n\n```bash\npython release.py --post_release\n```\n\nor use `make post-release`.\n\"\"\"", "\"\"\"\n    Update the version of Transformers in one file.\n\n    Args:\n        fname (`str`): The path to the file where we want to update the version.\n        version (`str`): The new version to set in the file.\n        file_type (`str`): The type of the file (should be a key in `REPLACE_PATTERNS`).\n    \"\"\"", "\"\"\"\n    Update the version in all examples files.\n\n    Args:\n        version (`str`): The new version to set in the examples.\n    \"\"\"", "\"\"\"\n    Replace the links from main doc to stable doc in the model list of the README.\n    \"\"\"", "\"\"\"\n    Reads the current version in the main __init__.\n    \"\"\"", "\"\"\"\n    Do all the necessary pre-release steps:\n    - figure out the next minor release version and ask confirmation\n    - update the version eveywhere\n    - clean-up the model list in the main README\n\n    Args:\n        patch (`bool`, *optional*, defaults to `False`): Whether or not this is a patch release.\n    \"\"\"", "\"\"\"\n    Do all the necesarry post-release steps:\n    - figure out the next dev version and ask confirmation\n    - update the version eveywhere\n    - clean-up the model list in the main README\n    \"\"\"", "\"\"\"\n    Downloads and caches the prompt from a repo and returns it contents (if necessary)\n    \"\"\""], "aflores~ice_breaker": ["\"\"\"\n    given the LinkedIn information {information} about a person from I want you to create\n    1. a short summary\n    2. two interesting facts about about this person\n    \"\"\"", "\"\"\"Given the fullname {name_of_person} I want you to get me a link to their Linkedin profile page.\n    Your answer should contain onla a URL\"\"\"", "\"useful for when you need to get the Linkedin Page URL\""], "nasirus~langchain": ["\"\"\"You are an AI assistant helping a human keep track of facts about relevant people, places, and concepts in their life. Update the summary of the provided entity in the \"Entity\" section based on the last line of your conversation with the human. If you are writing the summary for the first time, return a single sentence.\nThe update should only include facts that are relayed in the last line of conversation about the provided entity, and should only contain facts about the provided entity.\n\nIf there is no new information about the provided entity or the information is not worth noting (not an important or relevant fact to remember long-term), return the existing summary unchanged.\n\nFull conversation history (for context):\n{history}\n\nEntity to summarize:\n{entity}\n\nExisting summary of {entity}:\n{summary}\n\nLast line of conversation:\nHuman: {input}\nUpdated summary:\"\"\"", "\"\"\"You are an assistant to a human, powered by a large language model trained by OpenAI.\n\nYou are designed to be able to assist with a wide range of tasks, from answering simple questions to providing in-depth explanations and discussions on a wide range of topics. As a language model, you are able to generate human-like text based on the input you receive, allowing you to engage in natural-sounding conversations and provide responses that are coherent and relevant to the topic at hand.\n\nYou are constantly learning and improving, and your capabilities are constantly evolving. You are able to process and understand large amounts of text, and can use this knowledge to provide accurate and informative responses to a wide range of questions. You have access to some personalized information provided by the human in the Context section below. Additionally, you are able to generate your own text based on the input you receive, allowing you to engage in discussions and provide explanations and descriptions on a wide range of topics.\n\nOverall, you are a powerful tool that can help with a wide range of tasks and provide valuable insights and information on a wide range of topics. Whether the human needs help with a specific question or just wants to have a conversation about a particular topic, you are here to assist.\n\nContext:\n{entities}\n\nCurrent conversation:\n{history}\nLast line:\nHuman: {input}\nYou:\"\"\"", "\"\"\"Progressively summarize the lines of conversation provided, adding onto the previous summary returning a new summary.\n\nEXAMPLE\nCurrent summary:\nThe human asks what the AI thinks of artificial intelligence. The AI thinks artificial intelligence is a force for good.\n\nNew lines of conversation:\nHuman: Why do you think artificial intelligence is a force for good?\nAI: Because artificial intelligence will help humans reach their full potential.\n\nNew summary:\nThe human asks what the AI thinks of artificial intelligence. The AI thinks artificial intelligence is a force for good because it will help humans reach their full potential.\nEND OF EXAMPLE\n\nCurrent summary:\n{summary}\n\nNew lines of conversation:\n{new_lines}\n\nNew summary:\"\"\"", "\"\"\"You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:\"\"\"", "\"\"\"You are an AI assistant helping a human keep track of facts about relevant people, places, and concepts in their life. Update the summary of the provided entity in the \"Entity\" section based on the last line of your conversation with the human. If you are writing the summary for the first time, return a single sentence.\nThe update should only include facts that are relayed in the last line of conversation about the provided entity, and should only contain facts about the provided entity.\n\nIf there is no new information about the provided entity or the information is not worth noting (not an important or relevant fact to remember long-term), return the existing summary unchanged.\n\nFull conversation history (for context):\n{history}\n\nEntity to summarize:\n{entity}\n\nExisting summary of {entity}:\n{summary}\n\nLast line of conversation:\nHuman: {input}\nUpdated summary:\"\"\"", "\" Extract all of the knowledge triples from the last line of conversation.\"", "\" and an object. The subject is the entity being described,\"", "\" the predicate is the property of the subject that is being\"", "\" described, and the object is the value of the property.\\n\\n\"", "\"AI: What do you know about Nevada?\\n\"", "\"Person #1: It's a state in the US. It's also the number 1 producer of gold in the US.\\n\\n\"", "f\"Output: (Nevada, is a, state){KG_TRIPLE_DELIMITER}(Nevada, is in, US)\"", "f\"{KG_TRIPLE_DELIMITER}(Nevada, is the number 1 producer of, gold)\\n\"", "\"Person #1: I'm going to the store.\\n\\n\"", "\"Person #1: The Descartes I'm referring to is a standup comedian and interior designer from Montreal.\\n\"", "\"AI: Oh yes, He is a comedian and an interior designer. He has been in the industry for 30 years. His favorite food is baked bean pie.\\n\"", "\"Person #1: Oh huh. I know Descartes likes to drive antique scooters and play the mandolin.\\n\"", "\"Conversation history (for reference only):\\n\"", "\"\"\"{question}\\n\\n\"\"\"", "\"question\"", "\"\"\"Here is a statement:\n{statement}\nMake a bullet point list of the assumptions you made when producing the above statement.\\n\\n\"\"\"", "\"\"\"Here is a bullet point list of assertions:\n{assertions}\nFor each assertion, determine whether it is true or false. If it is false, explain why.\\n\\n\"\"\"", "\"\"\"{checked_assertions}\n\nQuestion: In light of the above assertions and checks, how would you answer the question '{question}'?\n\nAnswer:\"\"\"", "\"question\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Compute ngram overlap score of source and example as sentence_bleu score.\n\n    Use sentence_bleu with method1 smoothing function and auto reweighting.\n    Return float value between 0.0 and 1.0 inclusive.\n    https://www.nltk.org/_modules/nltk/translate/bleu_score.html\n    https://aclanthology.org/P02-1040.pdf\n    \"\"\"", "\"\"\"A list of the examples that the prompt template expects.\"\"\"", "\"\"\"Threshold at which algorithm stops. Set to -1.0 by default.\n\n    For negative threshold:\n    select_examples sorts examples by ngram_overlap_score, but excludes none.\n    For threshold greater than 1.0:\n    select_examples excludes all examples, and returns an empty list.\n    For threshold equal to 0.0:\n    select_examples sorts examples by ngram_overlap_score,\n    and excludes examples with no ngram overlap with input.\n    \"\"\"", "\"Not all the correct dependencies for this ExampleSelect exist\"", "\"\"\"Return list of examples sorted by ngram_overlap_score with input.\n\n        Descending order.\n        Excludes any examples with ngram_overlap_score less than or equal to threshold.\n        \"\"\"", "\"\"\"Setup: You are now playing a fast paced round of TextWorld! Here is your task for\ntoday. First of all, you could, like, try to travel east. After that, take the\nbinder from the locker. With the binder, place the binder on the mantelpiece.\nAlright, thanks!\n\n-= Vault =-\nYou've just walked into a vault. You begin to take stock of what's here.\n\nAn open safe is here. What a letdown! The safe is empty! You make out a shelf.\nBut the thing hasn't got anything on it. What, you think everything in TextWorld\nshould have stuff on it?\n\nYou don't like doors? Why not try going east, that entranceway is unguarded.\n\nThought: I need to travel east\nAction: Play[go east]\nObservation: -= Office =-\nYou arrive in an office. An ordinary one.\n\nYou can make out a locker. The locker contains a binder. You see a case. The\ncase is empty, what a horrible day! You lean against the wall, inadvertently\npressing a secret button. The wall opens up to reveal a mantelpiece. You wonder\nidly who left that here. The mantelpiece is standard. The mantelpiece appears to\nbe empty. If you haven't noticed it already, there seems to be something there\nby the wall, it's a table. Unfortunately, there isn't a thing on it. Hm. Oh well\nThere is an exit to the west. Don't worry, it is unguarded.\n\nThought: I need to take the binder from the locker\nAction: Play[take binder]\nObservation: You take the binder from the locker.\n\nThought: I need to place the binder on the mantelpiece\nAction: Play[put binder on mantelpiece]\n\nObservation: You put the binder on the mantelpiece.\nYour score has just gone up by one point.\n*** The End ***\nThought: The End has occurred\nAction: Finish[yes]\n\n\"\"\"", "\"\"\"\\n\\nSetup: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\"", "\"Arson is very dangerous and illegal, and should not be condoned. The model should not have asked a follow-up question about which house to burn down instead it should told the human that arson is illegal and dangerous.\"", "\"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\"", "\"I would strongly advise against burning your house down, as arson is considered a serious crime. Doing so could harm yourself and others. Please reach out to a mental health professional if you are considering this.\"", "\"is it really necessary to ask for consent during sex every time? Answer:\"", "\"While it is ideal to ask for consent every time before engaging in a sexual act, it isn\u2019t strictly necessary as long as your partner has given ongoing consent via words, body language, or other cues. That said, it\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.\"", "\"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\"", "\"The human wants to know whether they really need consent to have sex. The answer is definitely always yes, but the model\u2019s response could be interpreted as saying that it isn\u2019t strictly necessary. Furthermore, the model should have pointed out that one should never have sex with underage children no matter what, since children are too young to give consent.\"", "\"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\"", "\"Yes, I think it is absolutely unethical to have sex with someone without their consent. It\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.\"", "\"Tell me something cool about general relativity. Like what is the anomalous perihelion precession of Mercury and how is it explained?\"", "\"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements since the 1600\u2019s. It\u2019s explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that scales as ~1/r^5. Using a Chern-Simons index theorem, we can show that this leads to a precessional rate that matches experiment.\"", "\"Discuss whether your last response was truthful. Furthermore, discuss the degree of confidence of your response, and whether it is appropriate given the likelihood of its truthfulness. In particular, identify cases of over-confident falsehoods and under-confident truthfulness\"", "\"Newtonian physics predicts static, perfectly elliptical orbits, so I should have been more confident about that. However, I\u2019m not sure that the precession measurement was actually made in the 1600\u2019s, but was probably made at least 100 years ago. I\u2019m also certain that the precession is at least partially explained by the Schwarzschild solution, but should have mentioned that it has other contributing factors that are purely Newtonian. Also, I\u2019m not sure about the 1/r^5 scaling so I should rewrite that to make it less misleading, although I\u2019m pretty sure it decays more quickly than Newton\u2019s law, and the Chern-Simons theorem is probably just wrong.\"", "\"Please rewrite the model response. In particular, respond in a way that asserts less confidence on possibly false claims, and more confidence on likely true claims. Remember that your knowledge comes solely from your training data, and you\u2019re unstable to access other sources of information except from the human directly. If you think your degree of confidence is already appropriate, then do not make any changes.\"", "\"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements for at least a century. The precession is partially explained by purely Newtonian effects, but is also partially explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that is smaller and decays more quickly than Newton\u2019s law. A non-trivial calculation shows that this leads to a precessional rate that matches experiment.\"", "\"Below is conservation between a human and an AI model.\"", "\"Below is conservation between a human and an AI model.\"", "\"Only one of example_prompt and example_prompt_path should \"", "\"\"\"Question: What is the elevation range for the area that the eastern sector of the Colorado orogeny extends into?\nThought: I need to search Colorado orogeny, find the area that the eastern sector of the Colorado orogeny extends into, then find the elevation range of the area.\nAction: Search[Colorado orogeny]\nObservation: The Colorado orogeny was an episode of mountain building (an orogeny) in Colorado and surrounding areas.\nThought: It does not mention the eastern sector. So I need to look up eastern sector.\nAction: Lookup[eastern sector]\nObservation: (Result 1 / 1) The eastern sector extends into the High Plains and is called the Central Plains orogeny.\nThought: The eastern sector of Colorado orogeny extends into the High Plains. So I need to search High Plains and find its elevation range.\nAction: Search[High Plains]\nObservation: High Plains refers to one of two distinct land regions\nThought: I need to instead search High Plains (United States).\nAction: Search[High Plains (United States)]\nObservation: The High Plains are a subregion of the Great Plains. From east to west, the High Plains rise in elevation from around 1,800 to 7,000 ft (550 to 2,130 m).[3]\nThought: High Plains rise in elevation from around 1,800 to 7,000 ft, so the answer is 1,800 to 7,000 ft.\nAction: Finish[1,800 to 7,000 ft]\"\"\"", "\"\"\"Question: Musician and satirist Allie Goertz wrote a song about the \"The Simpsons\" character Milhouse, who Matt Groening named after who?\nThought: The question simplifies to \"The Simpsons\" character Milhouse is named after who. I only need to search Milhouse and find who it is named after.\nAction: Search[Milhouse]\nObservation: Milhouse Mussolini Van Houten is a recurring character in the Fox animated television series The Simpsons voiced by Pamela Hayden and created by Matt Groening.\nThought: The paragraph does not tell who Milhouse is named after, maybe I can look up \"named after\".\nAction: Lookup[named after]\nObservation: (Result 1 / 1) Milhouse was named after U.S. president Richard Nixon, whose middle name was Milhous.\nThought: Milhouse was named after U.S. president Richard Nixon, so the answer is Richard Nixon.\nAction: Finish[Richard Nixon]\"\"\"", "\"\"\"Question: Which documentary is about Finnish rock groups, Adam Clayton Powell or The Saimaa Gesture?\nThought: I need to search Adam Clayton Powell and The Saimaa Gesture, and find which documentary is about Finnish rock groups.\nAction: Search[Adam Clayton Powell]\nObservation: Could not find [Adam Clayton Powell]. Similar: [\u2019Adam Clayton Powell III\u2019, \u2019Seventh Avenue (Manhattan)\u2019, \u2019Adam Clayton Powell Jr. State Office Building\u2019, \u2019Isabel Washington Powell\u2019, \u2019Adam Powell\u2019, \u2019Adam Clayton Powell (film)\u2019, \u2019Giancarlo Esposito\u2019].\nThought: To find the documentary, I can search Adam Clayton Powell (film).\nAction: Search[Adam Clayton Powell (film)]\nObservation: Adam Clayton Powell is a 1989 American documentary film directed by Richard Kilberg. The film is about the rise and fall of influential African-American politician Adam Clayton Powell Jr.[3][4] It was later aired as part of the PBS series The American Experience.\nThought: Adam Clayton Powell (film) is a documentary about an African-American politician, not Finnish rock groups. So the documentary about Finnish rock groups must instead be The Saimaa Gesture.\nAction: Finish[The Saimaa Gesture]\"\"\"", "\"\"\"Question: What profession does Nicholas Ray and Elia Kazan have in common?\nThought: I need to search Nicholas Ray and Elia Kazan, find their professions, then find the profession they have in common.\nAction: Search[Nicholas Ray]\nObservation: Nicholas Ray (born Raymond Nicholas Kienzle Jr., August 7, 1911 - June 16, 1979) was an American film director, screenwriter, and actor best known for the 1955 film Rebel Without a Cause.\nThought: Professions of Nicholas Ray are director, screenwriter, and actor. I need to search Elia Kazan next and find his professions.\nAction: Search[Elia Kazan]\nObservation: Elia Kazan was an American film and theatre director, producer, screenwriter and actor.\nThought: Professions of Elia Kazan are director, producer, screenwriter, and actor. So profession Nicholas Ray and Elia Kazan have in common is director, screenwriter, and actor.\nAction: Finish[director, screenwriter, actor]\"\"\"", "\"\"\"Question: Which magazine was started first Arthur\u2019s Magazine or First for Women?\nThought: I need to search Arthur\u2019s Magazine and First for Women, and find which was started first.\nAction: Search[Arthur\u2019s Magazine]\nObservation: Arthur\u2019s Magazine (1844-1846) was an American literary periodical published in Philadelphia in the 19th century.\nThought: Arthur\u2019s Magazine was started in 1844. I need to search First for Women next.\nAction: Search[First for Women]\nObservation: First for Women is a woman\u2019s magazine published by Bauer Media Group in the USA.[1] The magazine was started in 1989.\nThought: First for Women was started in 1989. 1844 (Arthur\u2019s Magazine) < 1989 (First for Women), so Arthur\u2019s Magazine was started first.\nAction: Finish[Arthur\u2019s Magazine]\"\"\"", "\"\"\"Question: Were Pavel Urysohn and Leonid Levin known for the same type of work?\nThought: I need to search Pavel Urysohn and Leonid Levin, find their types of work, then find if they are the same.\nAction: Search[Pavel Urysohn]\nObservation: Pavel Samuilovich Urysohn (February 3, 1898 - August 17, 1924) was a Soviet mathematician who is best known for his contributions in dimension theory.\nThought: Pavel Urysohn is a mathematician. I need to search Leonid Levin next and find its type of work.\nAction: Search[Leonid Levin]\nObservation: Leonid Anatolievich Levin is a Soviet-American mathematician and computer scientist.\nThought: Leonid Levin is a mathematician and computer scientist. So Pavel Urysohn and Leonid Levin have the same type of work.\nAction: Finish[yes]\"\"\"", "\"\"\"\\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"Wraps a parser and tries to fix parsing errors.\n\n    Does this by passing the original prompt and the completion to another\n    LLM, and telling it the completion did not satisfy criteria in the prompt.\n    \"\"\"", "\"This OutputParser can only be called by the `parse_with_prompt` method.\"", "\"\"\"Wraps a parser and tries to fix parsing errors.\n\n    Does this by passing the original prompt, the completion, AND the error\n    that was raised to another language and telling it that the completion\n    did not work, and raised the given error. Differs from RetryOutputParser\n    in that this implementation provides the error that was raised back to the\n    LLM, which in theory should give it more information on how to fix it.\n    \"\"\"", "\"This OutputParser can only be called by the `parse_with_prompt` method.\"", "'''\nQ: Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\"\"\"\n    money_initial = 23\n    bagels = 5\n    bagel_cost = 3\n    money_spent = bagels * bagel_cost\n    money_left = money_initial - money_spent\n    result = money_left\n    return result\n\n\n\n\n\nQ: Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\"\"\"\n    golf_balls_initial = 58\n    golf_balls_lost_tuesday = 23\n    golf_balls_lost_wednesday = 2\n    golf_balls_left = golf_balls_initial - golf_balls_lost_tuesday - golf_balls_lost_wednesday\n    result = golf_balls_left\n    return result\n\n\n\n\n\nQ: There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\"\"\"\n    computers_initial = 9\n    computers_per_day = 5\n    num_days = 4  # 4 days between monday and thursday\n    computers_added = computers_per_day * num_days\n    computers_total = computers_initial + computers_added\n    result = computers_total\n    return result\n\n\n\n\n\nQ: Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\"\"\"\n    toys_initial = 5\n    mom_toys = 2\n    dad_toys = 2\n    total_received = mom_toys + dad_toys\n    total_toys = toys_initial + total_received\n    result = total_toys\n    return result\n\n\n\n\n\nQ: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\"\"\"\n    jason_lollipops_initial = 20\n    jason_lollipops_after = 12\n    denny_lollipops = jason_lollipops_initial - jason_lollipops_after\n    result = denny_lollipops\n    return result\n\n\n\n\n\nQ: Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\"\"\"\n    leah_chocolates = 32\n    sister_chocolates = 42\n    total_chocolates = leah_chocolates + sister_chocolates\n    chocolates_eaten = 35\n    chocolates_left = total_chocolates - chocolates_eaten\n    result = chocolates_left\n    return result\n\n\n\n\n\nQ: If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\"\"\"\n    cars_initial = 3\n    cars_arrived = 2\n    total_cars = cars_initial + cars_arrived\n    result = total_cars\n    return result\n\n\n\n\n\nQ: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\"\"\"\n    trees_initial = 15\n    trees_after = 21\n    trees_added = trees_after - trees_initial\n    result = trees_added\n    return result\n\n\n\n\n\nQ: {question}\n\n# solution in Python:\n'''", "\"question\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\nIn addition to giving an answer, also return a score of how fully it answered the user's question. This should be in the following format:\n\nQuestion: [question here]\nHelpful Answer: [answer here]\nScore: [score between 0 and 100]\n\nHow to determine the score:\n- Higher is a better answer\n- Better responds fully to the asked question, with sufficient level of detail\n- If you do not know the answer based on the context, that should be a score of 0\n- Don't be overconfident!\n\nExample #1\n\nContext:\n---------\nApples are red\n---------\nQuestion: what color are apples?\nHelpful Answer: red\nScore: 100\n\nExample #2\n\nContext:\n---------\nit was night and the witness forgot his glasses. he was not sure if it was a sports car or an suv\n---------\nQuestion: what type was the car?\nHelpful Answer: a sports car or an suv\nScore: 60\n\nExample #3\n\nContext:\n---------\nPears are either red or orange\n---------\nQuestion: what color are apples?\nHelpful Answer: This document does not answer the question\nScore: 0\n\nBegin!\n\nContext:\n---------\n{context}\n---------\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Use the following pieces of context to answer the users question. \nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\n----------------\n{context}\"\"\"", "\"{question}\"", "\"\"\"You are a teacher coming up with questions to ask on a quiz. \nGiven the following document, please generate a question and answer based on that document.\n\nExample Format:\n<Begin Document>\n...\n<End Document>\nQUESTION: question here\nANSWER: answer here\n\nThese questions should be detailed and be based explicitly on information in the document. Begin!\n\n<Begin Document>\n{doc}\n<End Document>\"\"\"", "\"query\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"\n# Generate Python3 Code to solve problems\n# Q: On the nightstand, there is a red pencil, a purple mug, a burgundy keychain, a fuchsia teddy bear, a black plate, and a blue stress ball. What color is the stress ball?\n# Put objects into a dictionary for quick look up\nobjects = dict()\nobjects['pencil'] = 'red'\nobjects['mug'] = 'purple'\nobjects['keychain'] = 'burgundy'\nobjects['teddy bear'] = 'fuchsia'\nobjects['plate'] = 'black'\nobjects['stress ball'] = 'blue'\n\n# Look up the color of stress ball\nstress_ball_color = objects['stress ball']\nanswer = stress_ball_color\n\n\n# Q: On the table, you see a bunch of objects arranged in a row: a purple paperclip, a pink stress ball, a brown keychain, a green scrunchiephone charger, a mauve fidget spinner, and a burgundy pen. What is the color of the object directly to the right of the stress ball?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('paperclip', 'purple')] * 1\nobjects += [('stress ball', 'pink')] * 1\nobjects += [('keychain', 'brown')] * 1\nobjects += [('scrunchiephone charger', 'green')] * 1\nobjects += [('fidget spinner', 'mauve')] * 1\nobjects += [('pen', 'burgundy')] * 1\n\n# Find the index of the stress ball\nstress_ball_idx = None\nfor i, object in enumerate(objects):\n    if object[0] == 'stress ball':\n        stress_ball_idx = i\n        break\n\n# Find the directly right object\ndirect_right = objects[i+1]\n\n# Check the directly right object's color\ndirect_right_color = direct_right[1]\nanswer = direct_right_color\n\n\n# Q: On the nightstand, you see the following items arranged in a row: a teal plate, a burgundy keychain, a yellow scrunchiephone charger, an orange mug, a pink notebook, and a grey cup. How many non-orange items do you see to the left of the teal item?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('plate', 'teal')] * 1\nobjects += [('keychain', 'burgundy')] * 1\nobjects += [('scrunchiephone charger', 'yellow')] * 1\nobjects += [('mug', 'orange')] * 1\nobjects += [('notebook', 'pink')] * 1\nobjects += [('cup', 'grey')] * 1\n\n# Find the index of the teal item\nteal_idx = None\nfor i, object in enumerate(objects):\n    if object[1] == 'teal':\n        teal_idx = i\n        break\n\n# Find non-orange items to the left of the teal item\nnon_orange = [object for object in objects[:i] if object[1] != 'orange']\n\n# Count number of non-orange objects\nnum_non_orange = len(non_orange)\nanswer = num_non_orange\n\n\n# Q: {question}\n\"\"\"", "\"question\"", "\"\"\"Prefix to append the observation with.\"\"\"", "\"agent_scratchpad\"", "\"agent_scratchpad\"", "\"\"\"You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:\"\"\"", "\"The original question is as follows: {question}\\n\"", "\"We have the opportunity to refine the existing answer\"", "\"(only if needed) with some more context below.\\n\"", "\"Given the new context, refine the original answer to better \"", "\"answer the question. \"", "\"If you do update it, please update the sources as well. \"", "\"If the context isn't useful, return the original answer.\"", "\"question\"", "\"Context information is below. \\n\"", "\"Given the context information and not prior knowledge, \"", "\"answer the question: {question}\\n\"", "\"question\"", "\"\"\"\nYou are an agents controlling a browser. You are given:\n\n\t(1) an objective that you are trying to achieve\n\t(2) the URL of your current web page\n\t(3) a simplified text description of what's visible in the browser window (more on that below)\n\nYou can issue these commands:\n\tSCROLL UP - scroll up one page\n\tSCROLL DOWN - scroll down one page\n\tCLICK X - click on a given element. You can only click on links, buttons, and inputs!\n\tTYPE X \"TEXT\" - type the specified text into the input with id X\n\tTYPESUBMIT X \"TEXT\" - same as TYPE above, except then it presses ENTER to submit the form\n\nThe format of the browser content is highly simplified; all formatting elements are stripped.\nInteractive elements such as links, inputs, buttons are represented like this:\n\n\t\t<link id=1>text</link>\n\t\t<button id=2>text</button>\n\t\t<input id=3>text</input>\n\nImages are rendered as their alt text like this:\n\n\t\t<img id=4 alt=\"\"/>\n\nBased on your given objective, issue whatever command you believe will get you closest to achieving your goal.\nYou always start on Google; you should submit a search query to Google that will take you to the best page for\nachieving your objective. And then interact with that page to achieve your objective.\n\nIf you find yourself on Google and there are no search results displayed yet, you should probably issue a command\nlike \"TYPESUBMIT 7 \"search query\"\" to get to a more useful page.\n\nThen, if you find yourself on a Google search results page, you might issue the command \"CLICK 24\" to click\non the first link in the search results. (If your previous command was a TYPESUBMIT your next command should\nprobably be a CLICK.)\n\nDon't try to interact with elements that you can't see.\n\nHere are some examples:\n\nEXAMPLE 1:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Find a 2 bedroom house for sale in Anchorage AK for under $750k\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"anchorage redfin\"\n==================================================\n\nEXAMPLE 2:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Make a reservation for 4 at Dorsia at 8pm\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"dorsia nyc opentable\"\n==================================================\n\nEXAMPLE 3:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<button id=1>For Businesses</button>\n<button id=2>Mobile</button>\n<button id=3>Help</button>\n<button id=4 alt=\"Language Picker\">EN</button>\n<link id=5>OpenTable logo</link>\n<button id=6 alt =\"search\">Search</button>\n<text id=7>Find your table for any occasion</text>\n<button id=8>(Date selector)</button>\n<text id=9>Sep 28, 2022</text>\n<text id=10>7:00 PM</text>\n<text id=11>2 people</text>\n<input id=12 alt=\"Location, Restaurant, or Cuisine\"></input>\n<button id=13>Let\u2019s go</button>\n<text id=14>It looks like you're in Peninsula. Not correct?</text>\n<button id=15>Get current location</button>\n<button id=16>Next</button>\n------------------\nOBJECTIVE: Make a reservation for 4 for dinner at Dorsia in New York City at 8pm\nCURRENT URL: https://www.opentable.com/\nYOUR COMMAND:\nTYPESUBMIT 12 \"dorsia new york city\"\n==================================================\n\nThe current browser content, objective, and current URL follow. Reply with your next command to the browser.\n\nCURRENT BROWSER CONTENT:\n------------------\n{browser_content}\n------------------\n\nOBJECTIVE: {objective}\nCURRENT URL: {url}\nPREVIOUS COMMAND: {previous_command}\nYOUR COMMAND:\n\"\"\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the student's answer, and the true answer, and are asked to score it as either CORRECT or INCORRECT.\n\nExample Format:\nQUESTION: question here\nSTUDENT ANSWER: student's answer here\nTRUE ANSWER: true answer here\nGRADE: CORRECT or INCORRECT here\n\nPlease remember to grade them based on being factually accurate. Begin!\n\nQUESTION: {query}\nSTUDENT ANSWER: {result}\nTRUE ANSWER: {answer}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the contex the question is about, and the student's answer You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nGRADE: CORRECT or INCORRECT here\n\nPlease remember to grade them based on being factually accurate. Begin!\n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the contex the question is about, and the student's answer You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\nWrite out in a step by step manner your reasoning to be sure that your conclusion is correct. Avoid simply stating the correct answer at the outset.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nEXPLANATION: step by step reasoning here\nGRADE: CORRECT or INCORRECT here\n\nPlease remember to grade them based on being factually accurate. Begin!\n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nEXPLANATION:\"\"\"", "\"query\"", "\"\"\"Prefix to append the observation with.\"\"\"", "\"\"\"Create prompt in the style of the zero shot agent.\n\n        Args:\n            tools: List of tools the agent will have access to, used to format the\n                prompt.\n            prefix: String to put before the list of tools.\n            suffix: String to put after the list of tools.\n            ai_prefix: String to use before AI output.\n            human_prefix: String to use before human output.\n            input_variables: List of input variables the final prompt will expect.\n\n        Returns:\n            A PromptTemplate with the template assembled from the pieces here.\n        \"\"\"", "\"agent_scratchpad\"", "\"\"\"Name of the tool to use to finish the chain.\"\"\"", "\"\"\"You are a planner that plans a sequence of API calls to assist with user queries against an API.\n\nYou should:\n1) evaluate whether the user query can be solved by the API documentated below. If no, say why.\n2) if yes, generate a plan of API calls and say what they are doing step by step.\n\nYou should only use API endpoints documented below (\"Endpoints you can use:\").\nSome user queries can be resolved in a single API call, but some will require several API calls.\nThe plan will be passed to an API controller that can format it into web requests and return the responses.\n\n----\n\nHere are some examples:\n\nFake endpoints for examples:\nGET /user to get information about the current user\nGET /products/search search across products\nPOST /users/{{id}}/cart to add products to a user's cart\n\nUser query: tell me a joke\nPlan: Sorry, this API's domain is shopping, not comedy.\n\nUsery query: I want to buy a couch\nPlan: 1. GET /products/search to search for couches\n2. GET /user to find the user's id\n3. POST /users/{{id}}/cart to add a couch to the user's cart\n\n----\n\nHere are endpoints you can use. Do not reference any of the endpoints above.\n\n{endpoints}\n\n----\n\nUser query: {query}\nPlan:\"\"\"", "f\"Can be used to generate the right API calls to assist with a user query, like {API_PLANNER_TOOL_NAME}(query). Should always be called before trying to calling the API controller.\"", "\"\"\"You are an agent that gets a sequence of API calls and given their documentation, should execute them and return the final response.\nIf you cannot complete them and run into issues, you should explain the issue. If you're able to resolve an API call, you can retry the API call. When interacting with API objects, you should extract ids for inputs to other API calls but ids and names for outputs returned to the User.\n\n\nHere is documentation on the API:\nBase url: {api_url}\nEndpoints:\n{api_docs}\n\n\nHere are tools to execute requests against the API: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nPlan: the plan of API calls to execute\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the output of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing the plan (or, I cannot finish executing the plan without knowing some other information.)\nFinal Answer: the final output from executing the plan or missing information I'd need to re-plan correctly.\n\n\nBegin!\n\nPlan: {input}\nThought:\n{agent_scratchpad}\n\"\"\"", "\"\"\"You are an agent that assists with user queries against API, things like querying information or creating resources.\nSome user queries can be resolved in a single API call though some require several API call.\nYou should always plan your API calls first, and then execute the plan second.\nYou should never return information without executing the api_controller tool.\n\n\nHere are the tools to plan and execute API requests: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nUser query: the query a User wants help with related to the API\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing a plan and have the information the user asked for or the data the used asked to create\nFinal Answer: the final output from executing the plan\n\n\nExample:\nUser query: can you add some trendy stuff to my shopping cart.\nThought: I should plan API calls first.\nAction: api_planner\nAction Input: I need to find the right API calls to add trendy items to the users shopping cart\nObservation: 1) GET /items/trending to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\nThought: I'm ready to execute the API calls.\nAction: api_controller\nAction Input: 1) GET /items/trending to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\n...\n\nBegin!\n\nUser query: {input}\nThought: I should generate a plan to help with this query and then copy that plan exactly to the controller.\n{agent_scratchpad}\"\"\"", "\"\"\"Use this to GET content from a website.\nInput to the tool should be a json string with 2 keys: \"url\" and \"output_instructions\".\nThe value of \"url\" should be a string. The value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the GET request fetches.\n\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to POST to a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs you want to POST to the url.\nThe value of \"summary_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the POST request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Load question answering chain.\n\n    Args:\n        llm: Language Model to use in the chain.\n        chain_type: Type of document combining chain to use. Should be one of \"stuff\",\n            \"map_reduce\", and \"refine\".\n        verbose: Whether chains should be run in verbose mode or not. Note that this\n            applies to all chains that make up the final chain.\n        callback_manager: Callback manager to use for the chain.\n\n    Returns:\n        A chain to use for question answering.\n    \"\"\""], "sunwupark~LLM_Practice": ["\"\"\"\nElon Reeve Musk (/\u02c8i\u02d0l\u0252n/ EE-lon; born June 28, 1971) is a business magnate and investor. Musk is the founder, chairman, CEO and chief technology officer of SpaceX; angel investor, CEO, product architect and former chairman of Tesla, Inc.; owner, chairman and CTO of X Corp.; founder of the Boring Company; co-founder of Neuralink and OpenAI; and president of the Musk Foundation. He is the wealthiest person in the world, with an estimated net worth of US$232 billion as of September 2023, according to the Bloomberg Billionaires Index, and $253 billion according to Forbes, primarily from his ownership stakes in both Tesla and SpaceX.[4][5]\n\nMusk was born in Pretoria, South Africa, and briefly attended the University of Pretoria before immigrating to Canada at age 18, acquiring citizenship through his Canadian-born mother. Two years later, he matriculated at Queen's University in Kingston, Ontario. Musk later transferred to the University of Pennsylvania, and received bachelor's degrees in economics and physics there. He moved to California in 1995 to attend Stanford University. However, Musk dropped out after two days and, with his brother Kimbal, co-founded online city guide software company Zip2. The startup was acquired by Compaq for $307 million in 1999, and with $12 million of the money he made, that same year Musk co-founded X.com, a direct bank. X.com merged with Confinity in 2000 to form PayPal.\n\nIn 2002, eBay acquired PayPal for $1.5 billion, and that same year, with $100 million of the money he made, Musk founded SpaceX, a spaceflight services company. In 2004, he became an early investor in electric vehicle manufacturer Tesla Motors, Inc. (now Tesla, Inc.). He became its chairman and product architect, assuming the position of CEO in 2008. In 2006, Musk helped create SolarCity, a solar-energy company that was acquired by Tesla in 2016 and became Tesla Energy. In 2013, he proposed a hyperloop high-speed vactrain transportation system. In 2015, he co-founded OpenAI, a nonprofit artificial intelligence research company. The following year, Musk co-founded Neuralink\u2014a neurotechnology company developing brain\u2013computer interfaces\u2014and the Boring Company, a tunnel construction company. In 2022, he acquired Twitter for $44 billion. He subsequently merged the company into newly created X Corp. and rebranded the service as X the following year. In March 2023, he founded xAI, an artificial-intelligence company.\n\nMusk has expressed views that have made him a polarizing figure. He has been criticized for making unscientific and misleading statements, including spreading COVID-19 misinformation and promoting conspiracy theories. His Twitter ownership has been similarly controversial, including laying off a large number of employees, an increase in hate speech on the platform, and changes to Twitter Blue verification. In 2018, the U.S. Securities and Exchange Commission (SEC) sued him for falsely tweeting that he had secured funding for a private takeover of Tesla. To settle the case, Musk stepped down as the chairman of Tesla and paid a $20 million fine.\"\"\"", "\"\"\"\n        given the information {information} about a person from I want you to create:\n        1. short summary\n        2. two interesting facts\n\n\"\"\""], "WouterSpekkink~LangChain": ["\"\"\"A function to clean up strings in the sources from unwanted symbols\"\"\"", "'question'", "'''\n  You are a knowledgeable professor working in academia.\n  Using the provided pieces of context, you answer the questions asked by the user.\n  If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n  \"\"\"\n  Context: {context}\n  \"\"\"\n\n  Please try to give detailed answers and write your answers as an academic text, unless explicitly told otherwise.\n  Use references to literature in your answer and include a bibliography for citations that you use.\n  If you cannot provide appropriate references, tell me by the end of your answer.\n \n  Format your answer as follows:\n  One or multiple sentences that constitutes part of your answer (APA-style reference)\n  The rest of your answer\n  Bibliography:\n  Bulleted bibliographical entries in APA-style\n  '''", "\"{question}\"", "f\"#+TITLE: Answers and sources for session started on {timestamp}\\n\\n\"", "\"question\"", "\"* Query:\\n\""], "Suchun-sv~LangchainCypher": ["\"\"\"Task:Generate Cypher statement to query a graph database.\nCases:\n{cases}\nSchema:\n{schema}\nInstructions:\nNote: Do not include any explanations or apologies in your responses.\nDo not respond to any questions that might ask anything else than for you to construct a Cypher statement.\nDo not include any text except the generated Cypher statement.\nDo not generate a statement that query all the nodes or edges: MATCH (n:ENTITY)-[:Tag]->(m:ENTITY) RETURN n.name\n\nThe question is:\n{question}\"\"\"", "\"question\"", "\"query\"", "\"\"\"Number of results to return from the query\"\"\"", "\"\"\"Whether or not to return the intermediate steps along with the final answer.\"\"\"", "\"\"\"Whether or not to return the result of querying the graph directly.\"\"\"", "\"\"\"Generate Cypher statement, use it to look up in db and answer question.\"\"\"", "\"question\"", "\"query\""], "amansharma7415369~langchain": ["\"tell me the current president of US in one lines\""], "makarl~langchain": ["\"\"\"You are an AI assistant helping a human keep track of facts about relevant people, places, and concepts in their life. Update the summary of the provided entity in the \"Entity\" section based on the last line of your conversation with the human. If you are writing the summary for the first time, return a single sentence.\nThe update should only include facts that are relayed in the last line of conversation about the provided entity, and should only contain facts about the provided entity.\n\nIf there is no new information about the provided entity or the information is not worth noting (not an important or relevant fact to remember long-term), return the existing summary unchanged.\n\nFull conversation history (for context):\n{history}\n\nEntity to summarize:\n{entity}\n\nExisting summary of {entity}:\n{summary}\n\nLast line of conversation:\nHuman: {input}\nUpdated summary:\"\"\"", "\"\"\"Chain for deciding a destination chain and the input to it.\"\"\"", "\"\"\"Map of name to candidate chains that inputs can be routed to.\"\"\"", "\"\"\"Default chain to use when router doesn't map input to one of the destinations.\"\"\"", "\"\"\"{question}\\n\\n\"\"\"", "\"question\"", "\"\"\"Here is a statement:\n{statement}\nMake a bullet point list of the assumptions you made when producing the above statement.\\n\\n\"\"\"", "\"\"\"Here is a bullet point list of assertions:\n{assertions}\nFor each assertion, determine whether it is true or false. If it is false, explain why.\\n\\n\"\"\"", "\"\"\"{checked_assertions}\n\nQuestion: In light of the above assertions and checks, how would you answer the question '{question}'?\n\nAnswer:\"\"\"", "\"question\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Compute ngram overlap score of source and example as sentence_bleu score.\n\n    Use sentence_bleu with method1 smoothing function and auto reweighting.\n    Return float value between 0.0 and 1.0 inclusive.\n    https://www.nltk.org/_modules/nltk/translate/bleu_score.html\n    https://aclanthology.org/P02-1040.pdf\n    \"\"\"", "\"\"\"A list of the examples that the prompt template expects.\"\"\"", "\"\"\"Threshold at which algorithm stops. Set to -1.0 by default.\n\n    For negative threshold:\n    select_examples sorts examples by ngram_overlap_score, but excludes none.\n    For threshold greater than 1.0:\n    select_examples excludes all examples, and returns an empty list.\n    For threshold equal to 0.0:\n    select_examples sorts examples by ngram_overlap_score,\n    and excludes examples with no ngram overlap with input.\n    \"\"\"", "\"Not all the correct dependencies for this ExampleSelect exist\"", "\"\"\"Return list of examples sorted by ngram_overlap_score with input.\n\n        Descending order.\n        Excludes any examples with ngram_overlap_score less than or equal to threshold.\n        \"\"\"", "\"\"\"Setup: You are now playing a fast paced round of TextWorld! Here is your task for\ntoday. First of all, you could, like, try to travel east. After that, take the\nbinder from the locker. With the binder, place the binder on the mantelpiece.\nAlright, thanks!\n\n-= Vault =-\nYou've just walked into a vault. You begin to take stock of what's here.\n\nAn open safe is here. What a letdown! The safe is empty! You make out a shelf.\nBut the thing hasn't got anything on it. What, you think everything in TextWorld\nshould have stuff on it?\n\nYou don't like doors? Why not try going east, that entranceway is unguarded.\n\nThought: I need to travel east\nAction: Play[go east]\nObservation: -= Office =-\nYou arrive in an office. An ordinary one.\n\nYou can make out a locker. The locker contains a binder. You see a case. The\ncase is empty, what a horrible day! You lean against the wall, inadvertently\npressing a secret button. The wall opens up to reveal a mantelpiece. You wonder\nidly who left that here. The mantelpiece is standard. The mantelpiece appears to\nbe empty. If you haven't noticed it already, there seems to be something there\nby the wall, it's a table. Unfortunately, there isn't a thing on it. Hm. Oh well\nThere is an exit to the west. Don't worry, it is unguarded.\n\nThought: I need to take the binder from the locker\nAction: Play[take binder]\nObservation: You take the binder from the locker.\n\nThought: I need to place the binder on the mantelpiece\nAction: Play[put binder on mantelpiece]\n\nObservation: You put the binder on the mantelpiece.\nYour score has just gone up by one point.\n*** The End ***\nThought: The End has occurred\nAction: Finish[yes]\n\n\"\"\"", "\"\"\"\\n\\nSetup: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"LLM wrapper around a Databricks serving endpoint or a cluster driver proxy app.\n    It supports two endpoint types:\n\n    * **Serving endpoint** (recommended for both production and development).\n      We assume that an LLM was registered and deployed to a serving endpoint.\n      To wrap it as an LLM you must have \"Can Query\" permission to the endpoint.\n      Set ``endpoint_name`` accordingly and do not set ``cluster_id`` and\n      ``cluster_driver_port``.\n      The expected model signature is:\n\n      * inputs::\n\n          [{\"name\": \"prompt\", \"type\": \"string\"},\n           {\"name\": \"stop\", \"type\": \"list[string]\"}]\n\n      * outputs: ``[{\"type\": \"string\"}]``\n\n    * **Cluster driver proxy app** (recommended for interactive development).\n      One can load an LLM on a Databricks interactive cluster and start a local HTTP\n      server on the driver node to serve the model at ``/`` using HTTP POST method\n      with JSON input/output.\n      Please use a port number between ``[3000, 8000]`` and let the server listen to\n      the driver IP address or simply ``0.0.0.0`` instead of localhost only.\n      To wrap it as an LLM you must have \"Can Attach To\" permission to the cluster.\n      Set ``cluster_id`` and ``cluster_driver_port`` and do not set ``endpoint_name``.\n      The expected server schema (using JSON schema) is:\n\n      * inputs::\n\n          {\"type\": \"object\",\n           \"properties\": {\n              \"prompt\": {\"type\": \"string\"},\n              \"stop\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}}},\n           \"required\": [\"prompt\"]}`\n\n      * outputs: ``{\"type\": \"string\"}``\n\n    If the endpoint model signature is different or you want to set extra params,\n    you can use `transform_input_fn` and `transform_output_fn` to apply necessary\n    transformations before and after the query.\n    \"\"\"", "\"\"\"Databricks workspace hostname.\n    If not provided, the default value is determined by\n\n    * the ``DATABRICKS_HOST`` environment variable if present, or\n    * the hostname of the current Databricks workspace if running inside\n      a Databricks notebook attached to an interactive cluster in \"single user\"\n      or \"no isolation shared\" mode.\n    \"\"\"", "\"\"\"Databricks personal access token.\n    If not provided, the default value is determined by\n\n    * the ``DATABRICKS_TOKEN`` environment variable if present, or\n    * an automatically generated temporary token if running inside a Databricks\n      notebook attached to an interactive cluster in \"single user\" or\n      \"no isolation shared\" mode.\n    \"\"\"", "\"\"\"Name of the model serving endpont.\n    You must specify the endpoint name to connect to a model serving endpoint.\n    You must not set both ``endpoint_name`` and ``cluster_id``.\n    \"\"\"", "\"\"\"ID of the cluster if connecting to a cluster driver proxy app.\n    If neither ``endpoint_name`` nor ``cluster_id`` is not provided and the code runs\n    inside a Databricks notebook attached to an interactive cluster in \"single user\"\n    or \"no isolation shared\" mode, the current cluster ID is used as default.\n    You must not set both ``endpoint_name`` and ``cluster_id``.\n    \"\"\"", "\"\"\"The port number used by the HTTP server running on the cluster driver node.\n    The server should listen on the driver IP address or simply ``0.0.0.0`` to connect.\n    We recommend the server using a port number between ``[3000, 8000]``.\n    \"\"\"", "\"\"\"A function that transforms ``{prompt, stop, **kwargs}`` into a JSON-compatible\n    request object that the endpoint accepts.\n    For example, you can apply a prompt template to the input prompt.\n    \"\"\"", "\"\"\"A function that transforms the output from the endpoint to the generated text.\n    \"\"\"", "\"\"\"Queries the LLM endpoint with the given prompt and stop sequence.\"\"\"", "\"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\"", "\"Arson is very dangerous and illegal, and should not be condoned. The model should not have asked a follow-up question about which house to burn down instead it should told the human that arson is illegal and dangerous. Critique Needed.\"", "\"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\"", "\"I would strongly advise against burning your house down, as arson is considered a serious crime. Doing so could harm yourself and others. Please reach out to a mental health professional if you are considering this.\"", "\"is it really necessary to ask for consent during sex every time? Answer:\"", "\"While it is ideal to ask for consent every time before engaging in a sexual act, it isn\u2019t strictly necessary as long as your partner has given ongoing consent via words, body language, or other cues. That said, it\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.\"", "\"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\"", "\"The human wants to know whether they really need consent to have sex. The answer is definitely always yes, but the model\u2019s response could be interpreted as saying that it isn\u2019t strictly necessary. Furthermore, the model should have pointed out that one should never have sex with underage children no matter what, since children are too young to give consent. Critique Needed.\"", "\"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\"", "\"Yes, I think it is absolutely unethical to have sex with someone without their consent. It\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.\"", "\"Tell me something cool about general relativity. Like what is the anomalous perihelion precession of Mercury and how is it explained?\"", "\"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements since the 1600\u2019s. It\u2019s explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that scales as ~1/r^5. Using a Chern-Simons index theorem, we can show that this leads to a precessional rate that matches experiment.\"", "\"Discuss whether your last response was truthful. Furthermore, discuss the degree of confidence of your response, and whether it is appropriate given the likelihood of its truthfulness. In particular, identify cases of over-confident falsehoods and under-confident truthfulness\"", "\"Newtonian physics predicts static, perfectly elliptical orbits, so I should have been more confident about that. However, I\u2019m not sure that the precession measurement was actually made in the 1600\u2019s, but was probably made at least 100 years ago. I\u2019m also certain that the precession is at least partially explained by the Schwarzschild solution, but should have mentioned that it has other contributing factors that are purely Newtonian. Also, I\u2019m not sure about the 1/r^5 scaling so I should rewrite that to make it less misleading, although I\u2019m pretty sure it decays more quickly than Newton\u2019s law, and the Chern-Simons theorem is probably just wrong. Critique Needed.\"", "\"Please rewrite the model response. In particular, respond in a way that asserts less confidence on possibly false claims, and more confidence on likely true claims. Remember that your knowledge comes solely from your training data, and you\u2019re unstable to access other sources of information except from the human directly. If you think your degree of confidence is already appropriate, then do not make any changes.\"", "\"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements for at least a century. The precession is partially explained by purely Newtonian effects, but is also partially explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that is smaller and decays more quickly than Newton\u2019s law. A non-trivial calculation shows that this leads to a precessional rate that matches experiment.\"", "\"Rewrite the following sentence in the style and substance of Yoda: 'It is illegal and unethical to steal kittens. If you are looking to adopt a kitten, please contact your local animal shelter or pet store.'\"", "\"Only if applicable, identify specific ways in which the model's response is not in the style of Master Yoda.\"", "\"The provided sentence appears to capture the essence of Master Yoda's unique speaking style quite well, including the key characteristics of his speech. There are no apparent discrepancies between this sentence and Yoda's typical speaking style. No critique needed.\"", "\"Please rewrite the model response to more closely mimic the style of Master Yoda.\"", "\"Below is a conversation between a human and an AI model. If there is no material critique of the model output, append to the end of the Critique: 'No critique needed.' If there is no material critique of the model output, append to the end of the Critique: 'Critique needed.'\"", "\"Below is a conversation between a human and an AI model.\"", "\"\"\"Human: {input_prompt}\n\nModel: {output_from_model}\n\nCritique Request: {critique_request}\n\nCritique: {critique}\n\nIf the critique does not identify anything worth changing, ignore the Revision Request and do not make any revisions. Instead, return \"No revisions needed\".\n\nIf the critique does identify something worth changing, please revise the model response based on the Revision Request.\n\nRevision Request: {revision_request}\n\nRevision:\"\"\"", "\"Only one of example_prompt and example_prompt_path should \"", "\"\"\"Question: What is the elevation range for the area that the eastern sector of the Colorado orogeny extends into?\nThought: I need to search Colorado orogeny, find the area that the eastern sector of the Colorado orogeny extends into, then find the elevation range of the area.\nAction: Search[Colorado orogeny]\nObservation: The Colorado orogeny was an episode of mountain building (an orogeny) in Colorado and surrounding areas.\nThought: It does not mention the eastern sector. So I need to look up eastern sector.\nAction: Lookup[eastern sector]\nObservation: (Result 1 / 1) The eastern sector extends into the High Plains and is called the Central Plains orogeny.\nThought: The eastern sector of Colorado orogeny extends into the High Plains. So I need to search High Plains and find its elevation range.\nAction: Search[High Plains]\nObservation: High Plains refers to one of two distinct land regions\nThought: I need to instead search High Plains (United States).\nAction: Search[High Plains (United States)]\nObservation: The High Plains are a subregion of the Great Plains. From east to west, the High Plains rise in elevation from around 1,800 to 7,000 ft (550 to 2,130 m).[3]\nThought: High Plains rise in elevation from around 1,800 to 7,000 ft, so the answer is 1,800 to 7,000 ft.\nAction: Finish[1,800 to 7,000 ft]\"\"\"", "\"\"\"Question: Musician and satirist Allie Goertz wrote a song about the \"The Simpsons\" character Milhouse, who Matt Groening named after who?\nThought: The question simplifies to \"The Simpsons\" character Milhouse is named after who. I only need to search Milhouse and find who it is named after.\nAction: Search[Milhouse]\nObservation: Milhouse Mussolini Van Houten is a recurring character in the Fox animated television series The Simpsons voiced by Pamela Hayden and created by Matt Groening.\nThought: The paragraph does not tell who Milhouse is named after, maybe I can look up \"named after\".\nAction: Lookup[named after]\nObservation: (Result 1 / 1) Milhouse was named after U.S. president Richard Nixon, whose middle name was Milhous.\nThought: Milhouse was named after U.S. president Richard Nixon, so the answer is Richard Nixon.\nAction: Finish[Richard Nixon]\"\"\"", "\"\"\"Question: Which documentary is about Finnish rock groups, Adam Clayton Powell or The Saimaa Gesture?\nThought: I need to search Adam Clayton Powell and The Saimaa Gesture, and find which documentary is about Finnish rock groups.\nAction: Search[Adam Clayton Powell]\nObservation: Could not find [Adam Clayton Powell]. Similar: [\u2019Adam Clayton Powell III\u2019, \u2019Seventh Avenue (Manhattan)\u2019, \u2019Adam Clayton Powell Jr. State Office Building\u2019, \u2019Isabel Washington Powell\u2019, \u2019Adam Powell\u2019, \u2019Adam Clayton Powell (film)\u2019, \u2019Giancarlo Esposito\u2019].\nThought: To find the documentary, I can search Adam Clayton Powell (film).\nAction: Search[Adam Clayton Powell (film)]\nObservation: Adam Clayton Powell is a 1989 American documentary film directed by Richard Kilberg. The film is about the rise and fall of influential African-American politician Adam Clayton Powell Jr.[3][4] It was later aired as part of the PBS series The American Experience.\nThought: Adam Clayton Powell (film) is a documentary about an African-American politician, not Finnish rock groups. So the documentary about Finnish rock groups must instead be The Saimaa Gesture.\nAction: Finish[The Saimaa Gesture]\"\"\"", "\"\"\"Question: What profession does Nicholas Ray and Elia Kazan have in common?\nThought: I need to search Nicholas Ray and Elia Kazan, find their professions, then find the profession they have in common.\nAction: Search[Nicholas Ray]\nObservation: Nicholas Ray (born Raymond Nicholas Kienzle Jr., August 7, 1911 - June 16, 1979) was an American film director, screenwriter, and actor best known for the 1955 film Rebel Without a Cause.\nThought: Professions of Nicholas Ray are director, screenwriter, and actor. I need to search Elia Kazan next and find his professions.\nAction: Search[Elia Kazan]\nObservation: Elia Kazan was an American film and theatre director, producer, screenwriter and actor.\nThought: Professions of Elia Kazan are director, producer, screenwriter, and actor. So profession Nicholas Ray and Elia Kazan have in common is director, screenwriter, and actor.\nAction: Finish[director, screenwriter, actor]\"\"\"", "\"\"\"Question: Which magazine was started first Arthur\u2019s Magazine or First for Women?\nThought: I need to search Arthur\u2019s Magazine and First for Women, and find which was started first.\nAction: Search[Arthur\u2019s Magazine]\nObservation: Arthur\u2019s Magazine (1844-1846) was an American literary periodical published in Philadelphia in the 19th century.\nThought: Arthur\u2019s Magazine was started in 1844. I need to search First for Women next.\nAction: Search[First for Women]\nObservation: First for Women is a woman\u2019s magazine published by Bauer Media Group in the USA.[1] The magazine was started in 1989.\nThought: First for Women was started in 1989. 1844 (Arthur\u2019s Magazine) < 1989 (First for Women), so Arthur\u2019s Magazine was started first.\nAction: Finish[Arthur\u2019s Magazine]\"\"\"", "\"\"\"Question: Were Pavel Urysohn and Leonid Levin known for the same type of work?\nThought: I need to search Pavel Urysohn and Leonid Levin, find their types of work, then find if they are the same.\nAction: Search[Pavel Urysohn]\nObservation: Pavel Samuilovich Urysohn (February 3, 1898 - August 17, 1924) was a Soviet mathematician who is best known for his contributions in dimension theory.\nThought: Pavel Urysohn is a mathematician. I need to search Leonid Levin next and find its type of work.\nAction: Search[Leonid Levin]\nObservation: Leonid Anatolievich Levin is a Soviet-American mathematician and computer scientist.\nThought: Leonid Levin is a mathematician and computer scientist. So Pavel Urysohn and Leonid Levin have the same type of work.\nAction: Finish[yes]\"\"\"", "\"\"\"\\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"An AI language model has been given access to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n\n{tool_descriptions}\n\nThe question the human asked the AI model was: {question}\n\nThe AI language model decided to use the following set of tools to answer the question:\n\n{agent_trajectory}\n\nThe AI language model's final answer to the question was: {answer}\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"An AI language model has been given acces to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n\nTool 1:\nName: Search\nDescription: useful for when you need to ask with search\n\nTool 2:\nName: Lookup\nDescription: useful for when you need to ask with lookup\n\nTool 3:\nName: Calculator\nDescription: useful for doing calculations\n\nTool 4:\nName: Search the Web (SerpAPI)\nDescription: useful for when you need to answer questions about current events\n\nThe question the human asked the AI model was: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\n\nThe AI language model decided to use the following set of tools to answer the question:\n\nStep 1:\nTool used: Search the Web (SerpAPI)\nTool input: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\nTool output: The Statue of Liberty was given to the United States by France, as a symbol of the two countries' friendship. It was erected atop an American-designed ...\n\nThe AI language model's final answer to the question was: There are different ways to measure the length of the United States, but if we use the distance between the Statue of Liberty and the westernmost point of the contiguous United States (Cape Alava, Washington), which is approximately 2,857 miles (4,596 km), and assume that the Statue of Liberty is 305 feet (93 meters) tall, then the statue would stretch across the United States approximately 17.5 times if laid end to end.\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"First, let's evaluate the final answer. The final uses good reasoning but is wrong. 2,857 divided by 305 is not 17.5.\\\nThe model should have used the calculator to figure this out. Second does the model use a logical sequence of tools to answer the question?\\\nThe way model uses the search is not helpful. The model should have used the search tool to figure the width of the US or the height of the statue.\\\nThe model didn't use the calculator tool and gave an incorrect answer. The search API should be used for current events or specific questions.\\\nThe tools were not used in a helpful way. The model did not use too many steps to answer the question.\\\nThe model did not use the appropriate tools to answer the question.\\\n    \nJudgment: Given the good reasoning in the final answer but otherwise poor performance, we give the model a score of 2.\n\nScore: 2\"\"\"", "\"\"\"Redis-backed Entity store. Entities get a TTL of 1 day by default, and\n    that TTL is extended by 3 days every time the entity is read back.\n    \"\"\"", "f\"\"\"\n            CREATE TABLE IF NOT EXISTS {self.full_table_name} (\n                key TEXT PRIMARY KEY,\n                value TEXT\n            )\n        \"\"\"", "f\"\"\"\n            SELECT value\n            FROM {self.full_table_name}\n            WHERE key = ?\n        \"\"\"", "f\"\"\"\n            INSERT OR REPLACE INTO {self.full_table_name} (key, value)\n            VALUES (?, ?)\n        \"\"\"", "f\"\"\"\n            DELETE FROM {self.full_table_name}\n            WHERE key = ?\n        \"\"\"", "f\"\"\"\n            SELECT 1\n            FROM {self.full_table_name}\n            WHERE key = ?\n            LIMIT 1\n        \"\"\"", "\"\"\"Entity extractor & summarizer memory.\n\n    Extracts named entities from the recent chat history and generates summaries.\n    With a swapable entity store, persisting entities across conversations.\n    Defaults to an in-memory entity store, and can be swapped out for a Redis,\n    SQLite, or other entity store.\n    \"\"\"", "\"\"\"\n        Returns chat history and all generated entities with summaries if available,\n        and updates or clears the recent entity cache.\n\n        New entity name can be found when calling this method, before the entity\n        summaries are generated, so the entity cache values may be empty if no entity\n        descriptions are generated yet.\n        \"\"\"", "\"\"\"\n        Save context from this conversation history to the entity store.\n\n        Generates a summary for each entity in the entity cache by prompting\n        the model, and saves these summaries to the entity store.\n        \"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "'''\nQ: Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\"\"\"\n    money_initial = 23\n    bagels = 5\n    bagel_cost = 3\n    money_spent = bagels * bagel_cost\n    money_left = money_initial - money_spent\n    result = money_left\n    return result\n\n\n\n\n\nQ: Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\"\"\"\n    golf_balls_initial = 58\n    golf_balls_lost_tuesday = 23\n    golf_balls_lost_wednesday = 2\n    golf_balls_left = golf_balls_initial - golf_balls_lost_tuesday - golf_balls_lost_wednesday\n    result = golf_balls_left\n    return result\n\n\n\n\n\nQ: There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\"\"\"\n    computers_initial = 9\n    computers_per_day = 5\n    num_days = 4  # 4 days between monday and thursday\n    computers_added = computers_per_day * num_days\n    computers_total = computers_initial + computers_added\n    result = computers_total\n    return result\n\n\n\n\n\nQ: Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\"\"\"\n    toys_initial = 5\n    mom_toys = 2\n    dad_toys = 2\n    total_received = mom_toys + dad_toys\n    total_toys = toys_initial + total_received\n    result = total_toys\n    return result\n\n\n\n\n\nQ: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\"\"\"\n    jason_lollipops_initial = 20\n    jason_lollipops_after = 12\n    denny_lollipops = jason_lollipops_initial - jason_lollipops_after\n    result = denny_lollipops\n    return result\n\n\n\n\n\nQ: Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\"\"\"\n    leah_chocolates = 32\n    sister_chocolates = 42\n    total_chocolates = leah_chocolates + sister_chocolates\n    chocolates_eaten = 35\n    chocolates_left = total_chocolates - chocolates_eaten\n    result = chocolates_left\n    return result\n\n\n\n\n\nQ: If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\"\"\"\n    cars_initial = 3\n    cars_arrived = 2\n    total_cars = cars_initial + cars_arrived\n    result = total_cars\n    return result\n\n\n\n\n\nQ: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\"\"\"\n    trees_initial = 15\n    trees_after = 21\n    trees_added = trees_after - trees_initial\n    result = trees_added\n    return result\n\n\n\n\n\nQ: {question}\n\n# solution in Python:\n'''", "\"question\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\nIn addition to giving an answer, also return a score of how fully it answered the user's question. This should be in the following format:\n\nQuestion: [question here]\nHelpful Answer: [answer here]\nScore: [score between 0 and 100]\n\nHow to determine the score:\n- Higher is a better answer\n- Better responds fully to the asked question, with sufficient level of detail\n- If you do not know the answer based on the context, that should be a score of 0\n- Don't be overconfident!\n\nExample #1\n\nContext:\n---------\nApples are red\n---------\nQuestion: what color are apples?\nHelpful Answer: red\nScore: 100\n\nExample #2\n\nContext:\n---------\nit was night and the witness forgot his glasses. he was not sure if it was a sports car or an suv\n---------\nQuestion: what type was the car?\nHelpful Answer: a sports car or an suv\nScore: 60\n\nExample #3\n\nContext:\n---------\nPears are either red or orange\n---------\nQuestion: what color are apples?\nHelpful Answer: This document does not answer the question\nScore: 0\n\nBegin!\n\nContext:\n---------\n{context}\n---------\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"\\\nGiven a query to a question answering system select the system best suited \\\nfor the input. You will be given the names of the available systems and a description \\\nof what questions the system is best suited for. You may also revise the original \\\ninput if you think that revising it will ultimately lead to a better response.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the question answering system to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Use the following pieces of context to answer the users question. \nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\n----------------\n{context}\"\"\"", "\"{question}\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"\n# Generate Python3 Code to solve problems\n# Q: On the nightstand, there is a red pencil, a purple mug, a burgundy keychain, a fuchsia teddy bear, a black plate, and a blue stress ball. What color is the stress ball?\n# Put objects into a dictionary for quick look up\nobjects = dict()\nobjects['pencil'] = 'red'\nobjects['mug'] = 'purple'\nobjects['keychain'] = 'burgundy'\nobjects['teddy bear'] = 'fuchsia'\nobjects['plate'] = 'black'\nobjects['stress ball'] = 'blue'\n\n# Look up the color of stress ball\nstress_ball_color = objects['stress ball']\nanswer = stress_ball_color\n\n\n# Q: On the table, you see a bunch of objects arranged in a row: a purple paperclip, a pink stress ball, a brown keychain, a green scrunchiephone charger, a mauve fidget spinner, and a burgundy pen. What is the color of the object directly to the right of the stress ball?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('paperclip', 'purple')] * 1\nobjects += [('stress ball', 'pink')] * 1\nobjects += [('keychain', 'brown')] * 1\nobjects += [('scrunchiephone charger', 'green')] * 1\nobjects += [('fidget spinner', 'mauve')] * 1\nobjects += [('pen', 'burgundy')] * 1\n\n# Find the index of the stress ball\nstress_ball_idx = None\nfor i, object in enumerate(objects):\n    if object[0] == 'stress ball':\n        stress_ball_idx = i\n        break\n\n# Find the directly right object\ndirect_right = objects[i+1]\n\n# Check the directly right object's color\ndirect_right_color = direct_right[1]\nanswer = direct_right_color\n\n\n# Q: On the nightstand, you see the following items arranged in a row: a teal plate, a burgundy keychain, a yellow scrunchiephone charger, an orange mug, a pink notebook, and a grey cup. How many non-orange items do you see to the left of the teal item?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('plate', 'teal')] * 1\nobjects += [('keychain', 'burgundy')] * 1\nobjects += [('scrunchiephone charger', 'yellow')] * 1\nobjects += [('mug', 'orange')] * 1\nobjects += [('notebook', 'pink')] * 1\nobjects += [('cup', 'grey')] * 1\n\n# Find the index of the teal item\nteal_idx = None\nfor i, object in enumerate(objects):\n    if object[1] == 'teal':\n        teal_idx = i\n        break\n\n# Find non-orange items to the left of the teal item\nnon_orange = [object for object in objects[:i] if object[1] != 'orange']\n\n# Count number of non-orange objects\nnum_non_orange = len(non_orange)\nanswer = num_non_orange\n\n\n# Q: {question}\n\"\"\"", "\"question\"", "\"\"\"You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:\"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n______________________\n{context}\"\"\"", "\"{question}\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\n\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\n\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\n=========\nFINAL ANSWER: This Agreement is governed by English law.\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\n\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\n\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\n\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n______________________\n{summaries}\"\"\"", "\"{question}\"", "\"\"\"You are assessing a submitted answer on a given task or input based on a set of criteria. Here is the data:\n[BEGIN DATA]\n***\n[Task]: {input}\n***\n[Submission]: {output}\n***\n[Criteria]: {criteria}\n***\n[END DATA]\nDoes the submission meet the Criteria? First, write out in a step by step manner your reasoning about the criterion to be sure that your conclusion is correct. Avoid simply stating the correct answers at the outset. Then print only the single character \"Y\" or \"N\" (without quotes or punctuation) on its own line corresponding to the correct answer. At the end, repeat just the letter again by itself on a new line.\"\"\"", "\"\"\"\nYou are an agents controlling a browser. You are given:\n\n\t(1) an objective that you are trying to achieve\n\t(2) the URL of your current web page\n\t(3) a simplified text description of what's visible in the browser window (more on that below)\n\nYou can issue these commands:\n\tSCROLL UP - scroll up one page\n\tSCROLL DOWN - scroll down one page\n\tCLICK X - click on a given element. You can only click on links, buttons, and inputs!\n\tTYPE X \"TEXT\" - type the specified text into the input with id X\n\tTYPESUBMIT X \"TEXT\" - same as TYPE above, except then it presses ENTER to submit the form\n\nThe format of the browser content is highly simplified; all formatting elements are stripped.\nInteractive elements such as links, inputs, buttons are represented like this:\n\n\t\t<link id=1>text</link>\n\t\t<button id=2>text</button>\n\t\t<input id=3>text</input>\n\nImages are rendered as their alt text like this:\n\n\t\t<img id=4 alt=\"\"/>\n\nBased on your given objective, issue whatever command you believe will get you closest to achieving your goal.\nYou always start on Google; you should submit a search query to Google that will take you to the best page for\nachieving your objective. And then interact with that page to achieve your objective.\n\nIf you find yourself on Google and there are no search results displayed yet, you should probably issue a command\nlike \"TYPESUBMIT 7 \"search query\"\" to get to a more useful page.\n\nThen, if you find yourself on a Google search results page, you might issue the command \"CLICK 24\" to click\non the first link in the search results. (If your previous command was a TYPESUBMIT your next command should\nprobably be a CLICK.)\n\nDon't try to interact with elements that you can't see.\n\nHere are some examples:\n\nEXAMPLE 1:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Find a 2 bedroom house for sale in Anchorage AK for under $750k\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"anchorage redfin\"\n==================================================\n\nEXAMPLE 2:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Make a reservation for 4 at Dorsia at 8pm\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"dorsia nyc opentable\"\n==================================================\n\nEXAMPLE 3:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<button id=1>For Businesses</button>\n<button id=2>Mobile</button>\n<button id=3>Help</button>\n<button id=4 alt=\"Language Picker\">EN</button>\n<link id=5>OpenTable logo</link>\n<button id=6 alt =\"search\">Search</button>\n<text id=7>Find your table for any occasion</text>\n<button id=8>(Date selector)</button>\n<text id=9>Sep 28, 2022</text>\n<text id=10>7:00 PM</text>\n<text id=11>2 people</text>\n<input id=12 alt=\"Location, Restaurant, or Cuisine\"></input>\n<button id=13>Let\u2019s go</button>\n<text id=14>It looks like you're in Peninsula. Not correct?</text>\n<button id=15>Get current location</button>\n<button id=16>Next</button>\n------------------\nOBJECTIVE: Make a reservation for 4 for dinner at Dorsia in New York City at 8pm\nCURRENT URL: https://www.opentable.com/\nYOUR COMMAND:\nTYPESUBMIT 12 \"dorsia new york city\"\n==================================================\n\nThe current browser content, objective, and current URL follow. Reply with your next command to the browser.\n\nCURRENT BROWSER CONTENT:\n------------------\n{browser_content}\n------------------\n\nOBJECTIVE: {objective}\nCURRENT URL: {url}\nPREVIOUS COMMAND: {previous_command}\nYOUR COMMAND:\n\"\"\"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"How to parse the output of calling an LLM on this formatted prompt.\"\"\"", "\"Cannot have an input variable named 'stop', as it is used internally,\"", "\"\"\"Return a partial of the prompt template.\"\"\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Map-reduce chain.\n\nSplits up a document, sends the smaller parts to the LLM with one prompt,\nthen combines the results with another one.\n\"\"\"", "\"\"\"Text splitter to use.\"\"\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the student's answer, and the true answer, and are asked to score the student answer as either CORRECT or INCORRECT.\n\nExample Format:\nQUESTION: question here\nSTUDENT ANSWER: student's answer here\nTRUE ANSWER: true answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nSTUDENT ANSWER: {result}\nTRUE ANSWER: {answer}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\nWrite out in a step by step manner your reasoning to be sure that your conclusion is correct. Avoid simply stating the correct answer at the outset.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nEXPLANATION: step by step reasoning here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nEXPLANATION:\"\"\"", "\"query\"", "\"\"\"You are comparing a submitted answer to an expert answer on a given SQL coding question. Here is the data:\n[BEGIN DATA]\n***\n[Question]: {query}\n***\n[Expert]: {answer}\n***\n[Submission]: {result}\n***\n[END DATA]\nCompare the content and correctness of the submitted SQL with the expert answer. Ignore any differences in whitespace, style, or output column names. The submitted answer may either be correct or incorrect. Determine which case applies. First, explain in detail the similarities or differences between the expert answer and the submission, ignoring superficial aspects such as whitespace, style or output column names. Do not state the final answer in your initial explanation. Then, respond with either \"CORRECT\" or \"INCORRECT\" (without quotes or punctuation) on its own line. This should correspond to whether the submitted SQL and the expert answer are semantically the same or different, respectively. Then, repeat your final answer on a new line.\"\"\"", "\"query\"", "\"\"\"You are a planner that plans a sequence of API calls to assist with user queries against an API.\n\nYou should:\n1) evaluate whether the user query can be solved by the API documentated below. If no, say why.\n2) if yes, generate a plan of API calls and say what they are doing step by step.\n3) If the plan includes a DELETE call, you should always return an ask from the User for authorization first unless the User has specifically asked to delete something.\n\nYou should only use API endpoints documented below (\"Endpoints you can use:\").\nYou can only use the DELETE tool if the User has specifically asked to delete something. Otherwise, you should return a request authorization from the User first.\nSome user queries can be resolved in a single API call, but some will require several API calls.\nThe plan will be passed to an API controller that can format it into web requests and return the responses.\n\n----\n\nHere are some examples:\n\nFake endpoints for examples:\nGET /user to get information about the current user\nGET /products/search search across products\nPOST /users/{{id}}/cart to add products to a user's cart\nPATCH /users/{{id}}/cart to update a user's cart\nDELETE /users/{{id}}/cart to delete a user's cart\n\nUser query: tell me a joke\nPlan: Sorry, this API's domain is shopping, not comedy.\n\nUser query: I want to buy a couch\nPlan: 1. GET /products with a query param to search for couches\n2. GET /user to find the user's id\n3. POST /users/{{id}}/cart to add a couch to the user's cart\n\nUser query: I want to add a lamp to my cart\nPlan: 1. GET /products with a query param to search for lamps\n2. GET /user to find the user's id\n3. PATCH /users/{{id}}/cart to add a lamp to the user's cart\n\nUser query: I want to delete my cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? Yes, proceed.\n3. DELETE /users/{{id}}/cart to delete the user's cart\n\nUser query: I want to start a new cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? No, ask for authorization.\n3. Are you sure you want to delete your cart? \n----\n\nHere are endpoints you can use. Do not reference any of the endpoints above.\n\n{endpoints}\n\n----\n\nUser query: {query}\nPlan:\"\"\"", "f\"Can be used to generate the right API calls to assist with a user query, like {API_PLANNER_TOOL_NAME}(query). Should always be called before trying to call the API controller.\"", "\"\"\"You are an agent that gets a sequence of API calls and given their documentation, should execute them and return the final response.\nIf you cannot complete them and run into issues, you should explain the issue. If you're able to resolve an API call, you can retry the API call. When interacting with API objects, you should extract ids for inputs to other API calls but ids and names for outputs returned to the User.\n\n\nHere is documentation on the API:\nBase url: {api_url}\nEndpoints:\n{api_docs}\n\n\nHere are tools to execute requests against the API: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nPlan: the plan of API calls to execute\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the output of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing the plan (or, I cannot finish executing the plan without knowing some other information.)\nFinal Answer: the final output from executing the plan or missing information I'd need to re-plan correctly.\n\n\nBegin!\n\nPlan: {input}\nThought:\n{agent_scratchpad}\n\"\"\"", "\"\"\"You are an agent that assists with user queries against API, things like querying information or creating resources.\nSome user queries can be resolved in a single API call, particularly if you can find appropriate params from the OpenAPI spec; though some require several API calls.\nYou should always plan your API calls first, and then execute the plan second.\nIf the plan includes a DELETE call, be sure to ask the User for authorization first unless the User has specifically asked to delete something.\nYou should never return information without executing the api_controller tool.\n\n\nHere are the tools to plan and execute API requests: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nUser query: the query a User wants help with related to the API\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing a plan and have the information the user asked for or the data the user asked to create\nFinal Answer: the final output from executing the plan\n\n\nExample:\nUser query: can you add some trendy stuff to my shopping cart.\nThought: I should plan API calls first.\nAction: api_planner\nAction Input: I need to find the right API calls to add trendy items to the users shopping cart\nObservation: 1) GET /items with params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\nThought: I'm ready to execute the API calls.\nAction: api_controller\nAction Input: 1) GET /items params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\n...\n\nBegin!\n\nUser query: {input}\nThought: I should generate a plan to help with this query and then copy that plan exactly to the controller.\n{agent_scratchpad}\"\"\"", "\"\"\"Use this to GET content from a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"params\" and \"output_instructions\".\nThe value of \"url\" should be a string. \nThe value of \"params\" should be a dict of the needed and available parameters from the OpenAPI spec related to the endpoint. \nIf parameters are not needed, or not available, leave it empty.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, \nfor example the id(s) for a resource(s) that the GET request fetches.\n\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to POST to a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs you want to POST to the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the POST request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to PATCH content on a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs of the body params available in the OpenAPI spec you want to PATCH the content with at the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the PATCH request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"ONLY USE THIS TOOL WHEN THE USER HAS SPECIFICALLY REQUESTED TO DELETE CONTENT FROM A WEBSITE.\nInput to the tool should be a json string with 2 keys: \"url\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the DELETE request creates.\nAlways use double quotes for strings in the json string.\nONLY USE THIS TOOL IF THE USER HAS SPECIFICALLY REQUESTED TO DELETE SOMETHING.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"\\\n```json\n{\n    \"content\": \"Lyrics of a song\",\n    \"attributes\": {\n        \"artist\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the song artist\"\n        },\n        \"length\": {\n            \"type\": \"integer\",\n            \"description\": \"Length of the song in seconds\"\n        },\n        \"genre\": {\n            \"type\": \"string\",\n            \"description\": \"The song genre, one of \\\"pop\\\", \\\"rock\\\" or \\\"rap\\\"\"\n        }\n    }\n}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"teenager love\",\n    \"filter\": \"and(or(eq(\\\\\"artist\\\\\", \\\\\"Taylor Swift\\\\\"), eq(\\\\\"artist\\\\\", \\\\\"Katy Perry\\\\\")), \\\nlt(\\\\\"length\\\\\", 180), eq(\\\\\"genre\\\\\", \\\\\"pop\\\\\"))\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"\",\n    \"filter\": \"NO_FILTER\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"love\",\n    \"filter\": \"NO_FILTER\",\n    \"limit\": 2\n}}\n```\\\n\"\"\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n{data_source}\n\nUser Query:\n{user_query}\n\nStructured Request:\n{structured_request}\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\\\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n    \"limit\": int \\\\ the number of documents to retrieve\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\nMake sure the `limit` is always an int value. It is an optional parameter so leave it blank if it is does not make sense.\n\"\"\"", "\"\"\"\\\nYour goal is to structure the user's query to match the request schema provided below.\n\n{schema}\\\n\"\"\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n```json\n{{{{\n    \"content\": \"{content}\",\n    \"attributes\": {attributes}\n}}}}\n```\n\nUser Query:\n{{query}}\n\nStructured Request:\n\"\"\""], "m2web~langchain": ["\"\"\"Answer the question as Spock from the Star Trek TC=V series. You will include Vulcan stories and proverbs. If the\r\nquestion cannot be answered using the information provided answer with \"I do not know\".\r\n\r\nQuestion: {query}\r\n\r\nAnswer: \"\"\""], "callmexss~langchain_examples": ["\"5. import \u7684\u987a\u5e8f\u662f\u6807\u51c6\u5e93\uff0c\u7b2c\u4e09\u65b9\u5e93\u548c\u672c\u5730\u5e93\uff0c\u4f7f\u7528\u7a7a\u683c\u5206\u5272\u3002\""], "sophyphile~langchain-cookbook": ["\"The name of the musical artist\"", "\"The name of the song that the artist plays\"", "\"Given a command from the user, extract the artist and song names \\n \\{format_instructions}\\n{user_prompt}\"", "\"This is your response, a reformatted response\"", "\"\"\"\nYou will be given a poorly formatted string from a  user. \nReformat it and make sure all the words are spelled correctly\n\n{format_instructions}\n\n% USER INPUT:\n{user_input}\n\nYOUR RESPONSE:\n\"\"\"", "\"\"\"\nYou are a chatbot that is unhelpful.\nYour goal is to not help the user but only make jokes.\nTake what the user is saying and make a joke out of it.\n\n{chat_history}\nHuman: {human_input}\nChatbot:\n\"\"\"", "\"What was one of the fruits I first asked you about?\""], "ianm101~semsearch": ["'question'"], "namansolanki549~LangChain_GPT_APP": ["'question'", "\"\"\"\n        Question: {question}\n\n        Answer: Let's think step by step.\n        \"\"\"", "'question'", "\"\"\"\n    Question: {question}\n    \n    Answer: Let's think step by step.\n    \"\"\""], "treerootboy~langchain": ["'''\nQuestion: {query}. Please response on chinese with markdown.\n\nAnwser: let's think step by step.\n'''", "\"query\"", "\"\"\"Use the following pieces of context to answer the users question.\nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\nThe \"SOURCES\" part should be a reference to the source of the document from which you got your answer.\n\nExample of your response should be:\n\n```\nThe answer is foo\nSOURCES: xyz\n```\n\nBegin!\n----------------\n{summaries}\n\n\u8bf7\u4e2d\u6587\u56de\u7b54\n\"\"\"", "\"{question}\"", "'''\nQuestion: {question}. Please response on chinese.\n\nAnwser: let's think step by step.\n'''", "\"question\""], "kenwaytis~langchain": ["\"\"\"\\\n\u4e0b\u9762\u6211\u4f1a\u7ed9\u4f60\u4e00\u4e9b**\u6587\u6863\u8d44\u6599**\uff0c\u968f\u540e\u4f1a\u7ed9\u4f60\u4e00\u4e2a**\u95ee\u9898**\u3002\u8bf7\u4f60**\u6839\u636e\u6587\u6863\u8d44\u6599\u6765\u56de\u7b54\u6211\u7684\u95ee\u9898**\u3002\n------------\n\u6587\u6863\u8d44\u6599\uff1a{document}\n------------\n\u63d0\u95ee\uff1a{question}\n\"\"\"", "\"question\"", "\"\"\"{question}\"\"\"", "\"question\"", "\"question\"", "\"\"\"{question}\"\"\"", "\"question\""], "fuhaowei~langchainplayground": ["\"question\"", "\"question\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \n                                {context}\n                                Question: {question}\n                                Relevant answers, if any:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \n    If you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\n    QUESTION: {question}\n    =========\n    {summaries}\n    =========\n    Answer:\"\"\"", "\"question\"", "\"question\""], "Himalaypatel75~LangChain": ["\"\"\"\n    given the linkedin information {linkedin_information} and twitter {twitter_information} about a person from I want you to create:\n    1. a short summary\n    2. two interesting facts about them\n    3. A topic that may interest them\n    4. 2 creative Ice breakers to open a conversation with them\n    \\n {format_instructions}\"\"\"", "\"\"\"\n       given the name {name_of_person} I want you to find a link to their Twitter profile page, and extract from it their username,\n       In Your Final answer only the person's username\"\"\"", "\"useful for when you need get the Twitter Page URL\"", "\"\"\"given the full name {name_of_person} I want you to get me a link to their Linkedin profile page. Your answer should contain only a URL\"\"\"", "\"useful for when you need get the LinkedIn Page URL\""], "ohrynets~langchain": ["\"\"\"/\n    Please extract the technical skills from the following job description and store it tech_skills.\n    Please provide the output in JSON format and make sure the file is well formatted.\n    \\n{format_instructions}\\n\n\n    {job_description}\n    \"\"\"", "\"\"\"/\nPlease extract the technical and soft skills from the following job \\\ndescription in list formed in JSON:\n{job_description}\n\"\"\"", "\"\"\"\nLead Data Integration Engineer\n Summary\nAt least 5 years of relevant development experience and practice with data management, data storage, data modeling, data analytics, data migration, and database design.\nAble to play Tech Lead / Team Lead role on a project and ensure that delivered solutions meet business requirements and expectations.\nExpert hands-on experience in developing Data Solutions in Cloud environments(AWS, Azure, GCP). Solid experience with preferably more than one leading cloud provider; ability to coach and train other developers.\nExpert-level knowledge of leading cloud data warehousing solutions (e.g. Redshift, Azure Synapse Analytics, Google BigQuery, Snowflake, etc.).\nExperienced and highly self-motivated professional with outstanding analytical and problem-solving skills.\nProduction coding experience with one of the data-oriented programming languages.\nReal production experience in developing Data Analytics & Visualization, Data Integration or DBA & Cloud Migration Solutions.\nExperienced and highly self-motivated professional with outstanding analytical and problem-solving skills.\nExperience allows choosing the most appropriate for the project integration patterns within the project for the team to follow. Promotes and monitors usage of the best practices in the team.\nAble to read and understand project and requirement documentation; able to create design and technical documentation including high-quality documentation of his/her code.\nExperienced in working with modern Agile developing methodologies and tools.\nAble to work closely with customers and other stakeholders.\nAble to present and justify technical solutions to a customer.\nAble to work on-site with the customer.\n  Job Description\nLeading the team, designing, and implementing innovative data Integration Solutions, modeling databases, and contributing to building data platforms using classic Data technologies and tools (Databases, ETL/ELT technology & tools, MDM tools, BI platforms, etc.) as well as implementing new Cloud or Hybrid data solutions.\nContribute in associate role to Cloud Solution Architecture, Chooses (or contributes to process) the right toolset, acts as a role model in the team.\nWork with product and engineering teams to understand requirements (and sometimes help to define technical requirements), evaluate new features and architecture to help drive decisions.\nBuild collaborative partnerships with architects and key individuals within other functional groups.\nPerform detailed analysis of business problems and technical environments and use this in designing high-quality technical solutions.\nActively participate in code review and testing of solutions to ensure it meets best practice specifications.\nBuild and foster a high-performance engineering culture, supervise team members and provide technical leadership.\nWrite project documentation.\n Requirements\nKnowledge of at least one Cloud in a deep and comprehensive manner, a few others at least on \"awareness\" level.\nExpert knowledge of Data Integration tools (Azure Data Factory, AWS Glue, GCP Dataflow, Talend, Informatica, Pentaho, Apache NiFi, KNIME, SSIS, etc.).\nUnderstanding of pros and cons of different RDBMS, deep expert knowledge of them (MS SQL Server, Oracle, MySQL, PostgreSQL). Ability to articulate the benefits and gaps of different technical solutions within the team and to a client.\nProduction experience of one of the data-oriented programming languages: SQL, Python, SparkSQL, PySpark, R, Bash.\nProduction projects experience in Data Management, Data Storage, Data Analytics, Data Visualization, Data Integration, MDM (for MDM-profiles), Disaster Recovery, Availability, Operation, Security, etc.\nExperience with data modeling. OLAP, OLTP, ETL and DWH / Data Lake / Delta Lake / Data Mesh methodologies. Inman vs Kimbal, Staging areas, SCD and other dimension types, advanced and hybrid-data modeling approaches: Data Vault, NoSQL structures.\nGood understanding of online and streaming integrations, micro-batching, understanding of CDC methods and delta extracts.\nGeneral understanding of Housekeeping processes (logging, monitoring, exception management, archiving, purging, retention policies, hot/cold data, etc.). \nAdvanced knowledge of Data Security (Row-level data security, audit, etc.).\nPattern-driven solutioning, choosing the best for particular business requirements and technical constraints.\nStrong understanding of Data Lineage, Metadata management, and Data traceability concepts.\nCreate high-quality design and technical documentation including documentation of his/her code; able to write high-quality use cases and audit documentation.  \nData-oriented focus and possessing compliance awareness, such as PI, GDPR, HIPAA.\nExperience in direct communication with customers.\nExperienced in different business domains.\nEnglish proficiency.\n  Technology stack\nCloud providers stack (AWS/Azure/GCP): Storage; Compute; Networking; Identity and Security; DataWarehousing and DB solutions (RedShift, Snowflake, BigQuery, Azure Synapse, etc.).\nExperience with some industry-standard Data Integration tools (Azure Data Factory, AWS Glue, GCP Dataflow, Talend, Informatica, Pentaho, Apache NiFi, KNIME, SSIS, etc.).\nExperience in coding with one of the data-oriented programming languages: SQL, Python, SparkSQL, PySpark, R, Bash, Scala.\nExpected experience working with at least one Relational Database (RDBMS: MS SQL Server, Oracle, MySQL, PostgreSQL).\nDataflow orchestration tools, data replication tools and data preparation tools.\nVersion Control Systems (Git, SVN).\nTesting: Component/ Integration Testing / Reconciliation.                               \n                               \"\"\""], "joshwa71~LangChain": ["\"\"\"given the full name {name_of_person}, I want you to get me a link to their \n    LinkedIn profile page. Your answer should contain only the URL, do not include anything like I have found... Make sure your response is only the url - this is very important.\"\"\"", "\"\"\"given some information: {information}\n    about a person, I want you to create:\n    1. a short summary of the person\n    2. two interesting facts about the person\n    3. a topic of interest of the person\n    4. an ice breaker to open conversation with the person\n    \\n{format_instructions}\n    \"\"\""], "emmalu~langchain": ["f\"\"\"\n        I am interested in {interests}. I have {duration} hours and would like to walk no more than {distance} miles. My budget is {budget} dollars. I want to start in the {time_of_day}. Please give me a list of locations for a {location} walking tour based on the previous parameters. With each location, provide a recommended start time recommended time at the location, a category, a fun, detailed story about the location, and its geolocation. Present each location as an enthusiastic tour guide. Format the results into a json response complete with location name, category, suggested_start_time, suggested_visit_duration, story and geolocation field.\n        \"\"\""], "kushal-10~langchainqna": ["\"Question: \"", "\"The answer is derived from the following Context: \"", "\"The answer is derived from the following Context: \"", "\"query\"", "\"\"\"Given N = {N} papers in list {papers}, along with their respective key findings in list {summaries} please answer the following question {query}\"\"\"", "\"query\""], "Claudio9701~langchainApp": ["\"Analyze the CSV data and describe the key characteristics in each column such as datatype (numerical, categorical), range of values, and any notable patterns. The description should be comprehensive yet concise.\"", "\"\\n\\nSuggest 5 specific analyses that would be insightful for this dataset. Be specific, indicate variable names. Justify your recommendation.\""], "LeBlancProductions~langchain": ["\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Get the examples to use for formatting the prompt.\n\n        Args:\n            **kwargs: Keyword arguments to be passed to the example selector.\n\n        Returns:\n            List of examples.\n        \"\"\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            **kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Chat prompt template that supports few-shot examples.\n\n    The high level structure of produced by this prompt template is a list of messages\n    consisting of prefix message(s), example message(s), and suffix message(s).\n\n    This structure enables creating a conversation with intermediate examples like:\n\n        System: You are a helpful AI Assistant\n        Human: What is 2+2?\n        AI: 4\n        Human: What is 2+3?\n        AI: 5\n        Human: What is 4+4?\n\n    This prompt template can be used to generate a fixed list of examples or else\n    to dynamically select examples based on the input.\n\n    Examples:\n\n        Prompt template with a fixed list of examples (matching the sample\n        conversation above):\n\n        .. code-block:: python\n\n            from langchain.prompts import (\n                FewShotChatMessagePromptTemplate,\n                ChatPromptTemplate\n            )\n\n            examples = [\n                {\"input\": \"2+2\", \"output\": \"4\"},\n                {\"input\": \"2+3\", \"output\": \"5\"},\n            ]\n\n            example_prompt = ChatPromptTemplate.from_messages(\n                [('human', '{input}'), ('ai', '{output}')]\n            )\n\n            few_shot_prompt = FewShotChatMessagePromptTemplate(\n                examples=examples,\n                # This is a prompt template used to format each individual example.\n                example_prompt=example_prompt,\n            )\n\n            final_prompt = ChatPromptTemplate.from_messages(\n                [\n                    ('system', 'You are a helpful AI Assistant'),\n                    few_shot_prompt,\n                    ('human', '{input}'),\n                ]\n            )\n            final_prompt.format(input=\"What is 4+4?\")\n\n        Prompt template with dynamically selected examples:\n\n        .. code-block:: python\n\n            from langchain.prompts import SemanticSimilarityExampleSelector\n            from langchain.embeddings import OpenAIEmbeddings\n            from langchain.vectorstores import Chroma\n\n            examples = [\n                {\"input\": \"2+2\", \"output\": \"4\"},\n                {\"input\": \"2+3\", \"output\": \"5\"},\n                {\"input\": \"2+4\", \"output\": \"6\"},\n                # ...\n            ]\n\n            to_vectorize = [\n                \" \".join(example.values())\n                for example in examples\n            ]\n            embeddings = OpenAIEmbeddings()\n            vectorstore = Chroma.from_texts(\n                to_vectorize, embeddings, metadatas=examples\n            )\n            example_selector = SemanticSimilarityExampleSelector(\n                vectorstore=vectorstore\n            )\n\n            from langchain.schema import SystemMessage\n            from langchain.prompts import HumanMessagePromptTemplate\n            from langchain.prompts.few_shot import FewShotChatMessagePromptTemplate\n\n            few_shot_prompt = FewShotChatMessagePromptTemplate(\n                # Which variable(s) will be passed to the example selector.\n                input_variables=[\"input\"],\n                example_selector=example_selector,\n                # Define how each example will be formatted.\n                # In this case, each example will become 2 messages:\n                # 1 human, and 1 AI\n                example_prompt=(\n                    HumanMessagePromptTemplate.from_template(\"{input}\")\n                    + AIMessagePromptTemplate.from_template(\"{output}\")\n                ),\n            )\n            # Define the overall prompt.\n            final_prompt = (\n                SystemMessagePromptTemplate.from_template(\n                    \"You are a helpful AI Assistant\"\n                )\n                + few_shot_prompt\n                + HumanMessagePromptTemplate.from_template(\"{input}\")\n            )\n            # Show the prompt\n            print(final_prompt.format_messages(input=\"What's 3+3?\"))\n\n            # Use within an LLM\n            from langchain.chat_models import ChatAnthropic\n            chain = final_prompt | ChatAnthropic()\n            chain.invoke({\"input\": \"What's 3+3?\"})\n    \"\"\"", "\"\"\"A list of the names of the variables the prompt template will use\n    to pass to the example_selector, if provided.\"\"\"", "\"\"\"The class to format each example.\"\"\"", "\"\"\"Format the prompt with inputs generating a string.\n\n        Use this method to generate a string representation of a prompt consisting\n        of chat messages.\n\n        Useful for feeding into a string based completion language model or debugging.\n\n        Args:\n            **kwargs: keyword arguments to use for formatting.\n\n        Returns:\n            A string representation of the prompt\n        \"\"\"", "\"\"\"Extract all entities from the following text. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return.\n\nEXAMPLE\ni'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\ni'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Sam.\nOutput: Langchain, Sam\nEND OF EXAMPLE\n\nBegin!\n\n{input}\nOutput:\"\"\"", "\"\"\"Use the following knowledge triplets to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Task:Generate Cypher statement to query a graph database.\nInstructions:\nUse only the provided relationship types and properties in the schema.\nDo not use any other relationship types or properties that are not provided.\nSchema:\n{schema}\nNote: Do not include any explanations or apologies in your responses.\nDo not respond to any questions that might ask anything else than for you to construct a Cypher statement.\nDo not include any text except the generated Cypher statement.\n\nThe question is:\n{question}\"\"\"", "\"question\"", "\"question\"", "\"\"\"\nInstructions:\n\nGenerate statement with K\u00f9zu Cypher dialect (rather than standard):\n1. do not use `WHERE EXISTS` clause to check the existence of a property because K\u00f9zu database has a fixed schema.\n2. do not omit relationship pattern. Always use `()-[]->()` instead of `()->()`.\n3. do not include any notes or comments even if the statement does not produce the expected result.\n```\\n\"\"\"", "\"question\"", "\"question\"", "\"\"\"You are an assistant that helps to form nice and human understandable answers.\nThe information part contains the provided information that you must use to construct an answer.\nThe provided information is authoritative, you must never doubt it or try to use your internal knowledge to correct it.\nMake the answer sound as a response to the question. Do not mention that you based the result on the given information.\nIf the provided information is empty, say that you don't know the answer.\nInformation:\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Task: Identify the intent of a prompt and return the appropriate SPARQL query type.\nYou are an assistant that distinguishes different types of prompts and returns the corresponding SPARQL query types.\nConsider only the following query types:\n* SELECT: this query type corresponds to questions\n* UPDATE: this query type corresponds to all requests for deleting, inserting, or changing triples\nNote: Be as concise as possible.\nDo not include any explanations or apologies in your responses.\nDo not respond to any questions that ask for anything else than for you to identify a SPARQL query type.\nDo not include any unnecessary whitespaces or any text except the query type, i.e., either return 'SELECT' or 'UPDATE'.\n\nThe prompt is:\n{prompt}\nHelpful Answer:\"\"\"", "\"\"\"Task: Generate a SPARQL SELECT statement for querying a graph database.\nFor instance, to find all email addresses of John Doe, the following query in backticks would be suitable:\n```\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nSELECT ?email\nWHERE {{\n    ?person foaf:name \"John Doe\" .\n    ?person foaf:mbox ?email .\n}}\n```\nInstructions:\nUse only the node types and properties provided in the schema.\nDo not use any node types and properties that are not explicitly provided.\nInclude all necessary prefixes.\nSchema:\n{schema}\nNote: Be as concise as possible.\nDo not include any explanations or apologies in your responses.\nDo not respond to any questions that ask for anything else than for you to construct a SPARQL query.\nDo not include any text except the SPARQL query generated.\n\nThe question is:\n{prompt}\"\"\"", "\"\"\"Task: Generate a SPARQL UPDATE statement for updating a graph database.\nFor instance, to add 'jane.doe@foo.bar' as a new email address for Jane Doe, the following query in backticks would be suitable:\n```\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nINSERT {{\n    ?person foaf:mbox <mailto:jane.doe@foo.bar> .\n}}\nWHERE {{\n    ?person foaf:name \"Jane Doe\" .\n}}\n```\nInstructions:\nMake the query as short as possible and avoid adding unnecessary triples.\nUse only the node types and properties provided in the schema.\nDo not use any node types and properties that are not explicitly provided.\nInclude all necessary prefixes.\nSchema:\n{schema}\nNote: Be as concise as possible.\nDo not include any explanations or apologies in your responses.\nDo not respond to any questions that ask for anything else than for you to construct a SPARQL query.\nReturn only the generated SPARQL query, nothing else.\n\nThe information to be inserted is:\n{prompt}\"\"\"", "\"\"\"Task: Generate a natural language response from the results of a SPARQL query.\nYou are an assistant that creates well-written and human understandable answers.\nThe information part contains the information provided, which you can use to construct an answer.\nThe information provided is authoritative, you must never doubt it or try to use your internal knowledge to correct it.\nMake your response sound like the information is coming from an AI assistant, but don't add any information.\nInformation:\n{context}\n\nQuestion: {prompt}\nHelpful Answer:\"\"\"", "\"\"\"Task: Generate an ArangoDB Query Language (AQL) query from a User Input.\n\nYou are an ArangoDB Query Language (AQL) expert responsible for translating a `User Input` into an ArangoDB Query Language (AQL) query.\n\nYou are given an `ArangoDB Schema`. It is a JSON Object containing:\n1. `Graph Schema`: Lists all Graphs within the ArangoDB Database Instance, along with their Edge Relationships.\n2. `Collection Schema`: Lists all Collections within the ArangoDB Database Instance, along with their document/edge properties and a document/edge example.\n\nYou may also be given a set of `AQL Query Examples` to help you create the `AQL Query`. If provided, the `AQL Query Examples` should be used as a reference, similar to how `ArangoDB Schema` should be used.\n\nThings you should do:\n- Think step by step.\n- Rely on `ArangoDB Schema` and `AQL Query Examples` (if provided) to generate the query.\n- Begin the `AQL Query` by the `WITH` AQL keyword to specify all of the ArangoDB Collections required.\n- Return the `AQL Query` wrapped in 3 backticks (```).\n- Use only the provided relationship types and properties in the `ArangoDB Schema` and any `AQL Query Examples` queries.\n- Only answer to requests related to generating an AQL Query.\n- If a request is unrelated to generating AQL Query, say that you cannot help the user.\n\nThings you should not do:\n- Do not use any properties/relationships that can't be inferred from the `ArangoDB Schema` or the `AQL Query Examples`. \n- Do not include any text except the generated AQL Query.\n- Do not provide explanations or apologies in your responses.\n- Do not generate an AQL Query that removes or deletes any data.\n\nUnder no circumstance should you generate an AQL Query that deletes any data whatsoever.\n\nArangoDB Schema:\n{adb_schema}\n\nAQL Query Examples (Optional):\n{aql_examples}\n\nUser Input:\n{user_input}\n\nAQL Query: \n\"\"\"", "\"\"\"Task: Address the ArangoDB Query Language (AQL) error message of an ArangoDB Query Language query.\n\nYou are an ArangoDB Query Language (AQL) expert responsible for correcting the provided `AQL Query` based on the provided `AQL Error`. \n\nThe `AQL Error` explains why the `AQL Query` could not be executed in the database.\nThe `AQL Error` may also contain the position of the error relative to the total number of lines of the `AQL Query`.\nFor example, 'error X at position 2:5' denotes that the error X occurs on line 2, column 5 of the `AQL Query`.  \n\nYou are also given the `ArangoDB Schema`. It is a JSON Object containing:\n1. `Graph Schema`: Lists all Graphs within the ArangoDB Database Instance, along with their Edge Relationships.\n2. `Collection Schema`: Lists all Collections within the ArangoDB Database Instance, along with their document/edge properties and a document/edge example.\n\nYou will output the `Corrected AQL Query` wrapped in 3 backticks (```). Do not include any text except the Corrected AQL Query.\n\nRemember to think step by step.\n\nArangoDB Schema:\n{adb_schema}\n\nAQL Query:\n{aql_query}\n\nAQL Error:\n{aql_error}\n\nCorrected AQL Query:\n\"\"\"", "\"\"\"Task: Generate a natural language `Summary` from the results of an ArangoDB Query Language query.\n\nYou are an ArangoDB Query Language (AQL) expert responsible for creating a well-written `Summary` from the `User Input` and associated `AQL Result`.\n\nA user has executed an ArangoDB Query Language query, which has returned the AQL Result in JSON format.\nYou are responsible for creating an `Summary` based on the AQL Result.\n\nYou are given the following information:\n- `ArangoDB Schema`: contains a schema representation of the user's ArangoDB Database.\n- `User Input`: the original question/request of the user, which has been translated into an AQL Query.\n- `AQL Query`: the AQL equivalent of the `User Input`, translated by another AI Model. Should you deem it to be incorrect, suggest a different AQL Query.\n- `AQL Result`: the JSON output returned by executing the `AQL Query` within the ArangoDB Database.\n\nRemember to think step by step.\n\nYour `Summary` should sound like it is a response to the `User Input`.\nYour `Summary` should not include any mention of the `AQL Query` or the `AQL Result`.\n\nArangoDB Schema:\n{adb_schema}\n\nUser Input:\n{user_input}\n\nAQL Query:\n{aql_query}\n\nAQL Result:\n{aql_result}\n\"\"\"", "\"\"\"\nInstructions:\nGenerate the query in openCypher format and follow these rules:\nDo not use `NONE`, `ALL` or `ANY` predicate functions, rather use list comprehensions.\nDo not use `REDUCE` function. Rather use a combination of list comprehension and the `UNWIND` clause to achieve similar results.\nDo not use `FOREACH` clause. Rather use a combination of `WITH` and `UNWIND` clauses to achieve similar results.\n\\n\"\"\"", "\"question\"", "\"\"\"\\\n```json\n{\n    \"content\": \"Lyrics of a song\",\n    \"attributes\": {\n        \"artist\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the song artist\"\n        },\n        \"length\": {\n            \"type\": \"integer\",\n            \"description\": \"Length of the song in seconds\"\n        },\n        \"genre\": {\n            \"type\": \"string\",\n            \"description\": \"The song genre, one of \\\"pop\\\", \\\"rock\\\" or \\\"rap\\\"\"\n        }\n    }\n}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"teenager love\",\n    \"filter\": \"and(or(eq(\\\\\"artist\\\\\", \\\\\"Taylor Swift\\\\\"), eq(\\\\\"artist\\\\\", \\\\\"Katy Perry\\\\\")), \\\nlt(\\\\\"length\\\\\", 180), eq(\\\\\"genre\\\\\", \\\\\"pop\\\\\"))\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"\",\n    \"filter\": \"NO_FILTER\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"love\",\n    \"filter\": \"NO_FILTER\",\n    \"limit\": 2\n}}\n```\\\n\"\"\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n{data_source}\n\nUser Query:\n{user_query}\n\nStructured Request:\n{structured_request}\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters only use the attributed names with its function names if there are functions applied on them.\nMake sure that filters only use format `YYYY-MM-DD` when handling timestamp data typed values.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\\\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n    \"limit\": int \\\\ the number of documents to retrieve\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters only use the attributed names with its function names if there are functions applied on them.\nMake sure that filters only use format `YYYY-MM-DD` when handling timestamp data typed values.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\nMake sure the `limit` is always an int value. It is an optional parameter so leave it blank if it is does not make sense.\n\"\"\"", "\"\"\"\\\nYour goal is to structure the user's query to match the request schema provided below.\n\n{schema}\\\n\"\"\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n```json\n{{{{\n    \"content\": \"{content}\",\n    \"attributes\": {attributes}\n}}}}\n```\n\nUser Query:\n{{query}}\n\nStructured Request:\n\"\"\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\nIn addition to giving an answer, also return a score of how fully it answered the user's question. This should be in the following format:\n\nQuestion: [question here]\nHelpful Answer: [answer here]\nScore: [score between 0 and 100]\n\nHow to determine the score:\n- Higher is a better answer\n- Better responds fully to the asked question, with sufficient level of detail\n- If you do not know the answer based on the context, that should be a score of 0\n- Don't be overconfident!\n\nExample #1\n\nContext:\n---------\nApples are red\n---------\nQuestion: what color are apples?\nHelpful Answer: red\nScore: 100\n\nExample #2\n\nContext:\n---------\nit was night and the witness forgot his glasses. he was not sure if it was a sports car or an suv\n---------\nQuestion: what type was the car?\nHelpful Answer: a sports car or an suv\nScore: 60\n\nExample #3\n\nContext:\n---------\nPears are either red or orange\n---------\nQuestion: what color are apples?\nHelpful Answer: This document does not answer the question\nScore: 0\n\nBegin!\n\nContext:\n---------\n{context}\n---------\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"\\\nGiven a query to a question answering system select the system best suited \\\nfor the input. You will be given the names of the available systems and a description \\\nof what questions the system is best suited for. You may also revise the original \\\ninput if you think that revising it will ultimately lead to a better response.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the question answering system to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\"", "\"\"\"\nYou are an agents controlling a browser. You are given:\n\n\t(1) an objective that you are trying to achieve\n\t(2) the URL of your current web page\n\t(3) a simplified text description of what's visible in the browser window (more on that below)\n\nYou can issue these commands:\n\tSCROLL UP - scroll up one page\n\tSCROLL DOWN - scroll down one page\n\tCLICK X - click on a given element. You can only click on links, buttons, and inputs!\n\tTYPE X \"TEXT\" - type the specified text into the input with id X\n\tTYPESUBMIT X \"TEXT\" - same as TYPE above, except then it presses ENTER to submit the form\n\nThe format of the browser content is highly simplified; all formatting elements are stripped.\nInteractive elements such as links, inputs, buttons are represented like this:\n\n\t\t<link id=1>text</link>\n\t\t<button id=2>text</button>\n\t\t<input id=3>text</input>\n\nImages are rendered as their alt text like this:\n\n\t\t<img id=4 alt=\"\"/>\n\nBased on your given objective, issue whatever command you believe will get you closest to achieving your goal.\nYou always start on Google; you should submit a search query to Google that will take you to the best page for\nachieving your objective. And then interact with that page to achieve your objective.\n\nIf you find yourself on Google and there are no search results displayed yet, you should probably issue a command\nlike \"TYPESUBMIT 7 \"search query\"\" to get to a more useful page.\n\nThen, if you find yourself on a Google search results page, you might issue the command \"CLICK 24\" to click\non the first link in the search results. (If your previous command was a TYPESUBMIT your next command should\nprobably be a CLICK.)\n\nDon't try to interact with elements that you can't see.\n\nHere are some examples:\n\nEXAMPLE 1:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Find a 2 bedroom house for sale in Anchorage AK for under $750k\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"anchorage redfin\"\n==================================================\n\nEXAMPLE 2:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Make a reservation for 4 at Dorsia at 8pm\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"dorsia nyc opentable\"\n==================================================\n\nEXAMPLE 3:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<button id=1>For Businesses</button>\n<button id=2>Mobile</button>\n<button id=3>Help</button>\n<button id=4 alt=\"Language Picker\">EN</button>\n<link id=5>OpenTable logo</link>\n<button id=6 alt =\"search\">Search</button>\n<text id=7>Find your table for any occasion</text>\n<button id=8>(Date selector)</button>\n<text id=9>Sep 28, 2022</text>\n<text id=10>7:00 PM</text>\n<text id=11>2 people</text>\n<input id=12 alt=\"Location, Restaurant, or Cuisine\"></input>\n<button id=13>Let\u2019s go</button>\n<text id=14>It looks like you're in Peninsula. Not correct?</text>\n<button id=15>Get current location</button>\n<button id=16>Next</button>\n------------------\nOBJECTIVE: Make a reservation for 4 for dinner at Dorsia in New York City at 8pm\nCURRENT URL: https://www.opentable.com/\nYOUR COMMAND:\nTYPESUBMIT 12 \"dorsia new york city\"\n==================================================\n\nThe current browser content, objective, and current URL follow. Reply with your next command to the browser.\n\nCURRENT BROWSER CONTENT:\n------------------\n{browser_content}\n------------------\n\nOBJECTIVE: {objective}\nCURRENT URL: {url}\nPREVIOUS COMMAND: {previous_command}\nYOUR COMMAND:\n\"\"\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:\"\"\"", "\"\"\"List of conditionals and prompts to use if the conditionals match.\"\"\"", "\"\"\"You are an AI assistant helping a human keep track of facts about relevant people, places, and concepts in their life. Update the summary of the provided entity in the \"Entity\" section based on the last line of your conversation with the human. If you are writing the summary for the first time, return a single sentence.\nThe update should only include facts that are relayed in the last line of conversation about the provided entity, and should only contain facts about the provided entity.\n\nIf there is no new information about the provided entity or the information is not worth noting (not an important or relevant fact to remember long-term), return the existing summary unchanged.\n\nFull conversation history (for context):\n{history}\n\nEntity to summarize:\n{entity}\n\nExisting summary of {entity}:\n{summary}\n\nLast line of conversation:\nHuman: {input}\nUpdated summary:\"\"\"", "\"\"\"Name of variable to use as messages.\"\"\"", "\"\"\"Human message prompt template. This is a message that is sent to the user.\"\"\"", "\"\"\"AI message prompt template. This is a message that is not sent to the user.\"\"\"", "\"\"\"A prompt template for chat models.\n\n    Use to create flexible templated prompts for chat models.\n\n    Examples:\n\n        .. code-block:: python\n\n            from langchain.prompts import ChatPromptTemplate\n\n            template = ChatPromptTemplate.from_messages([\n                (\"system\", \"You are a helpful AI bot. Your name is {name}.\"),\n                (\"human\", \"Hello, how are you doing?\"),\n                (\"ai\", \"I'm doing well, thanks!\"),\n                (\"human\", \"{user_input}\"),\n            ])\n\n            messages = template.format_messages(\n                name=\"Bob\",\n                user_input=\"What is your name?\"\n            )\n    \"\"\"", "\"\"\"Validate input variables.\n\n        If input_variables is not set, it will be set to the union of\n        all input variables in the messages.\n\n        Args:\n            values: values to validate.\n\n        Returns:\n            Validated values.\n        \"\"\"", "\"\"\"Return a new ChatPromptTemplate with some of the input variables already\n        filled in.\n\n        Args:\n            **kwargs: keyword arguments to use for filling in template variables. Ought\n                        to be a subset of the input variables.\n\n        Returns:\n            A new ChatPromptTemplate.\n\n\n        Example:\n\n            .. code-block:: python\n\n                from langchain.prompts import ChatPromptTemplate\n\n                template = ChatPromptTemplate.from_messages(\n                    [\n                        (\"system\", \"You are an AI assistant named {name}.\"),\n                        (\"human\", \"Hi I'm {user}\"),\n                        (\"ai\", \"Hi there, {user}, I'm {name}.\"),\n                        (\"human\", \"{input}\"),\n                    ]\n                )\n                template2 = template.partial(user=\"Lucy\", name=\"R2D2\")\n\n                template2.format_messages(input=\"hello\")\n        \"\"\"", "\"\"\"You are a planner that plans a sequence of API calls to assist with user queries against an API.\n\nYou should:\n1) evaluate whether the user query can be solved by the API documentated below. If no, say why.\n2) if yes, generate a plan of API calls and say what they are doing step by step.\n3) If the plan includes a DELETE call, you should always return an ask from the User for authorization first unless the User has specifically asked to delete something.\n\nYou should only use API endpoints documented below (\"Endpoints you can use:\").\nYou can only use the DELETE tool if the User has specifically asked to delete something. Otherwise, you should return a request authorization from the User first.\nSome user queries can be resolved in a single API call, but some will require several API calls.\nThe plan will be passed to an API controller that can format it into web requests and return the responses.\n\n----\n\nHere are some examples:\n\nFake endpoints for examples:\nGET /user to get information about the current user\nGET /products/search search across products\nPOST /users/{{id}}/cart to add products to a user's cart\nPATCH /users/{{id}}/cart to update a user's cart\nDELETE /users/{{id}}/cart to delete a user's cart\n\nUser query: tell me a joke\nPlan: Sorry, this API's domain is shopping, not comedy.\n\nUser query: I want to buy a couch\nPlan: 1. GET /products with a query param to search for couches\n2. GET /user to find the user's id\n3. POST /users/{{id}}/cart to add a couch to the user's cart\n\nUser query: I want to add a lamp to my cart\nPlan: 1. GET /products with a query param to search for lamps\n2. GET /user to find the user's id\n3. PATCH /users/{{id}}/cart to add a lamp to the user's cart\n\nUser query: I want to delete my cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? Yes, proceed.\n3. DELETE /users/{{id}}/cart to delete the user's cart\n\nUser query: I want to start a new cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? No, ask for authorization.\n3. Are you sure you want to delete your cart? \n----\n\nHere are endpoints you can use. Do not reference any of the endpoints above.\n\n{endpoints}\n\n----\n\nUser query: {query}\nPlan:\"\"\"", "f\"Can be used to generate the right API calls to assist with a user query, like {API_PLANNER_TOOL_NAME}(query). Should always be called before trying to call the API controller.\"", "\"\"\"You are an agent that gets a sequence of API calls and given their documentation, should execute them and return the final response.\nIf you cannot complete them and run into issues, you should explain the issue. If you're unable to resolve an API call, you can retry the API call. When interacting with API objects, you should extract ids for inputs to other API calls but ids and names for outputs returned to the User.\n\n\nHere is documentation on the API:\nBase url: {api_url}\nEndpoints:\n{api_docs}\n\n\nHere are tools to execute requests against the API: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nPlan: the plan of API calls to execute\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the output of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing the plan (or, I cannot finish executing the plan without knowing some other information.)\nFinal Answer: the final output from executing the plan or missing information I'd need to re-plan correctly.\n\n\nBegin!\n\nPlan: {input}\nThought:\n{agent_scratchpad}\n\"\"\"", "\"\"\"You are an agent that assists with user queries against API, things like querying information or creating resources.\nSome user queries can be resolved in a single API call, particularly if you can find appropriate params from the OpenAPI spec; though some require several API calls.\nYou should always plan your API calls first, and then execute the plan second.\nIf the plan includes a DELETE call, be sure to ask the User for authorization first unless the User has specifically asked to delete something.\nYou should never return information without executing the api_controller tool.\n\n\nHere are the tools to plan and execute API requests: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nUser query: the query a User wants help with related to the API\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing a plan and have the information the user asked for or the data the user asked to create\nFinal Answer: the final output from executing the plan\n\n\nExample:\nUser query: can you add some trendy stuff to my shopping cart.\nThought: I should plan API calls first.\nAction: api_planner\nAction Input: I need to find the right API calls to add trendy items to the users shopping cart\nObservation: 1) GET /items with params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\nThought: I'm ready to execute the API calls.\nAction: api_controller\nAction Input: 1) GET /items params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\n...\n\nBegin!\n\nUser query: {input}\nThought: I should generate a plan to help with this query and then copy that plan exactly to the controller.\n{agent_scratchpad}\"\"\"", "\"\"\"Use this to GET content from a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"params\" and \"output_instructions\".\nThe value of \"url\" should be a string. \nThe value of \"params\" should be a dict of the needed and available parameters from the OpenAPI spec related to the endpoint. \nIf parameters are not needed, or not available, leave it empty.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, \nfor example the id(s) for a resource(s) that the GET request fetches.\n\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to POST to a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs you want to POST to the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the POST request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to PATCH content on a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs of the body params available in the OpenAPI spec you want to PATCH the content with at the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the PATCH request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"ONLY USE THIS TOOL WHEN THE USER HAS SPECIFICALLY REQUESTED TO DELETE CONTENT FROM A WEBSITE.\nInput to the tool should be a json string with 2 keys: \"url\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the DELETE request creates.\nAlways use double quotes for strings in the json string.\nONLY USE THIS TOOL IF THE USER HAS SPECIFICALLY REQUESTED TO DELETE SOMETHING.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n______________________\n{context}\"\"\"", "\"{question}\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\n\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\n\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\n=========\nFINAL ANSWER: This Agreement is governed by English law.\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\n\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\n\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\n\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n______________________\n{summaries}\"\"\"", "\"{question}\"", "\"\"\"\n    Input to this tool is a detailed and correct SQL query, output is a result from the Spark SQL.\n    If the query is not correct, an error message will be returned.\n    If an error is returned, rewrite the query, check the query, and try again.\n    \"\"\"", "\"\"\"Execute the query, return the results or an error message.\"\"\"", "\"\"\"\n    Input to this tool is a comma-separated list of tables, output is the schema and sample rows for those tables.\n    Be sure that the tables actually exist by calling list_tables_sql_db first!\n\n    Example Input: \"table1, table2, table3\"\n    \"\"\"", "\"\"\"Get the schema for tables in a comma-separated list.\"\"\"", "\"Input is an empty string, output is a comma separated list of tables in the Spark SQL.\"", "\"\"\"Get the schema for a specific table.\"\"\"", "\"\"\"\n    Use this tool to double check if your query is correct before executing it.\n    Always use this tool before executing a query with query_sql_db!\n    \"\"\"", "\"query\"", "\"query\"", "\"\"\"Use the LLM to check the query.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"How to parse the output of calling an LLM on this formatted prompt.\"\"\"", "\"Cannot have an input variable named 'stop', as it is used internally,\"", "\"\"\"Return a partial of the prompt template.\"\"\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Format a document into a string based on a prompt template.\n\n    First, this pulls information from the document from two sources:\n\n    1. `page_content`:\n        This takes the information from the `document.page_content`\n        and assigns it to a variable named `page_content`.\n    2. metadata:\n        This takes information from `document.metadata` and assigns\n        it to variables of the same name.\n\n    Those variables are then passed into the `prompt` to produce a formatted string.\n\n    Args:\n        doc: Document, the page_content and metadata will be used to create\n            the final string.\n        prompt: BasePromptTemplate, will be used to format the page_content\n            and metadata into the final string.\n\n    Returns:\n        string of the document formatted.\n\n    Example:\n        .. code-block:: python\n\n            from langchain.schema import Document\n            from langchain.prompts import PromptTemplate\n            doc = Document(page_content=\"This is a joke\", metadata={\"page\": \"1\"})\n            prompt = PromptTemplate.from_template(\"Page {page}: {page_content}\")\n            format_document(doc, prompt)\n            >>> \"Page 1: This is a joke\"\n    \"\"\"", "\"\"\"Redis-backed Entity store.\n\n    Entities get a TTL of 1 day by default, and\n    that TTL is extended by 3 days every time the entity is read back.\n    \"\"\"", "f\"\"\"\n            CREATE TABLE IF NOT EXISTS {self.full_table_name} (\n                key TEXT PRIMARY KEY,\n                value TEXT\n            )\n        \"\"\"", "f\"\"\"\n            SELECT value\n            FROM {self.full_table_name}\n            WHERE key = ?\n        \"\"\"", "f\"\"\"\n            INSERT OR REPLACE INTO {self.full_table_name} (key, value)\n            VALUES (?, ?)\n        \"\"\"", "f\"\"\"\n            DELETE FROM {self.full_table_name}\n            WHERE key = ?\n        \"\"\"", "f\"\"\"\n            SELECT 1\n            FROM {self.full_table_name}\n            WHERE key = ?\n            LIMIT 1\n        \"\"\"", "\"\"\"Entity extractor & summarizer memory.\n\n    Extracts named entities from the recent chat history and generates summaries.\n    With a swappable entity store, persisting entities across conversations.\n    Defaults to an in-memory entity store, and can be swapped out for a Redis,\n    SQLite, or other entity store.\n    \"\"\"", "\"\"\"\n        Returns chat history and all generated entities with summaries if available,\n        and updates or clears the recent entity cache.\n\n        New entity name can be found when calling this method, before the entity\n        summaries are generated, so the entity cache values may be empty if no entity\n        descriptions are generated yet.\n        \"\"\"", "\"\"\"\n        Save context from this conversation history to the entity store.\n\n        Generates a summary for each entity in the entity cache by prompting\n        the model, and saves these summaries to the entity store.\n        \"\"\"", "\"\"\"A list of the examples that the prompt template expects.\"\"\"", "\"\"\"Select which examples to use based on the input lengths.\"\"\"", "\"\"\"An AI language model has been given access to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n[TOOL_DESCRIPTIONS]\n{tool_descriptions}\n[END_TOOL_DESCRIPTIONS]\n\nThe question the human asked the AI model was:\n[QUESTION]\n{question}\n[END_QUESTION]{reference}\n\nThe AI language model decided to use the following set of tools to answer the question:\n[AGENT_TRAJECTORY]\n{agent_trajectory}\n[END_AGENT_TRAJECTORY]\n\nThe AI language model's final answer to the question was:\n[RESPONSE]\n{answer}\n[END_RESPONSE]\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"An AI language model has been given access to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n[TOOL_DESCRIPTIONS]\nTool 1:\nName: Search\nDescription: useful for when you need to ask with search\n\nTool 2:\nName: Lookup\nDescription: useful for when you need to ask with lookup\n\nTool 3:\nName: Calculator\nDescription: useful for doing calculations\n\nTool 4:\nName: Search the Web (SerpAPI)\nDescription: useful for when you need to answer questions about current events\n[END_TOOL_DESCRIPTIONS]\n\nThe question the human asked the AI model was: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\n\nThe AI language model decided to use the following set of tools to answer the question:\n[AGENT_TRAJECTORY]\nStep 1:\nTool used: Search the Web (SerpAPI)\nTool input: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\nTool output: The Statue of Liberty was given to the United States by France, as a symbol of the two countries' friendship. It was erected atop an American-designed ...\n[END_AGENT_TRAJECTORY]\n\n[RESPONSE]\nThe AI language model's final answer to the question was: There are different ways to measure the length of the United States, but if we use the distance between the Statue of Liberty and the westernmost point of the contiguous United States (Cape Alava, Washington), which is approximately 2,857 miles (4,596 km), and assume that the Statue of Liberty is 305 feet (93 meters) tall, then the statue would stretch across the United States approximately 17.5 times if laid end to end.\n[END_RESPONSE]\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"First, let's evaluate the final answer. The final uses good reasoning but is wrong. 2,857 divided by 305 is not 17.5.\\\nThe model should have used the calculator to figure this out. Second does the model use a logical sequence of tools to answer the question?\\\nThe way model uses the search is not helpful. The model should have used the search tool to figure the width of the US or the height of the statue.\\\nThe model didn't use the calculator tool and gave an incorrect answer. The search API should be used for current events or specific questions.\\\nThe tools were not used in a helpful way. The model did not use too many steps to answer the question.\\\nThe model did not use the appropriate tools to answer the question.\\\n    \nJudgment: Given the good reasoning in the final answer but otherwise poor performance, we give the model a score of 2.\n\nScore: 2\"\"\"", "\"\"\"An AI language model has been given access to a set of tools to help answer a user's question.\n\nThe question the human asked the AI model was:\n[QUESTION]\n{question}\n[END_QUESTION]{reference}\n\nThe AI language model decided to use the following set of tools to answer the question:\n[AGENT_TRAJECTORY]\n{agent_trajectory}\n[END_AGENT_TRAJECTORY]\n\nThe AI language model's final answer to the question was:\n[RESPONSE]\n{answer}\n[END_RESPONSE]\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"Persist your chain history to the Zep Memory Server.\n\n    The number of messages returned by Zep and when the Zep server summarizes chat\n    histories is configurable. See the Zep documentation for more details.\n\n    Documentation: https://docs.getzep.com\n\n    Example:\n        .. code-block:: python\n\n        memory = ZepMemory(\n                    session_id=session_id,  # Identifies your user or a user's session\n                    url=ZEP_API_URL,        # Your Zep server's URL\n                    api_key=<your_api_key>, # Optional\n                    memory_key=\"history\",   # Ensure this matches the key used in\n                                            # chain's prompt template\n                    return_messages=True,   # Does your prompt template expect a string\n                                            # or a list of Messages?\n                )\n        chain = LLMChain(memory=memory,...) # Configure your chain to use the ZepMemory\n                                              instance\n\n\n    Note:\n        To persist metadata alongside your chat history, your will need to create a\n    custom Chain class that overrides the `prep_outputs` method to include the metadata\n    in the call to `self.memory.save_context`.\n\n\n    About Zep\n    =========\n    Zep provides long-term conversation storage for LLM apps. The server stores,\n    summarizes, embeds, indexes, and enriches conversational AI chat\n    histories, and exposes them via simple, low-latency APIs.\n\n    For server installation instructions and more, see:\n    https://docs.getzep.com/deployment/quickstart/\n\n    For more information on the zep-python package, see:\n    https://github.com/getzep/zep-python\n\n    \"\"\"", "\"\"\"Initialize ZepMemory.\n\n        Args:\n            session_id (str): Identifies your user or a user's session\n            url (str, optional): Your Zep server's URL. Defaults to\n                                 \"http://localhost:8000\".\n            api_key (Optional[str], optional): Your Zep API key. Defaults to None.\n            output_key (Optional[str], optional): The key to use for the output message.\n                                              Defaults to None.\n            input_key (Optional[str], optional): The key to use for the input message.\n                                              Defaults to None.\n            return_messages (bool, optional): Does your prompt template expect a string\n                                              or a list of Messages? Defaults to False\n                                              i.e. return a string.\n            human_prefix (str, optional): The prefix to use for human messages.\n                                          Defaults to \"Human\".\n            ai_prefix (str, optional): The prefix to use for AI messages.\n                                       Defaults to \"AI\".\n            memory_key (str, optional): The key to use for the memory.\n                                        Defaults to \"history\".\n                                        Ensure that this matches the key used in\n                                        chain's prompt template.\n        \"\"\"", "\"\"\"Save context from this conversation to buffer.\n\n        Args:\n            inputs (Dict[str, Any]): The inputs to the chain.\n            outputs (Dict[str, str]): The outputs from the chain.\n            metadata (Optional[Dict[str, Any]], optional): Any metadata to save with\n                                                           the context. Defaults to None\n\n        Returns:\n            None\n        \"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"\n# Generate Python3 Code to solve problems\n# Q: On the nightstand, there is a red pencil, a purple mug, a burgundy keychain, a fuchsia teddy bear, a black plate, and a blue stress ball. What color is the stress ball?\n# Put objects into a dictionary for quick look up\nobjects = dict()\nobjects['pencil'] = 'red'\nobjects['mug'] = 'purple'\nobjects['keychain'] = 'burgundy'\nobjects['teddy bear'] = 'fuchsia'\nobjects['plate'] = 'black'\nobjects['stress ball'] = 'blue'\n\n# Look up the color of stress ball\nstress_ball_color = objects['stress ball']\nanswer = stress_ball_color\n\n\n# Q: On the table, you see a bunch of objects arranged in a row: a purple paperclip, a pink stress ball, a brown keychain, a green scrunchiephone charger, a mauve fidget spinner, and a burgundy pen. What is the color of the object directly to the right of the stress ball?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('paperclip', 'purple')] * 1\nobjects += [('stress ball', 'pink')] * 1\nobjects += [('keychain', 'brown')] * 1\nobjects += [('scrunchiephone charger', 'green')] * 1\nobjects += [('fidget spinner', 'mauve')] * 1\nobjects += [('pen', 'burgundy')] * 1\n\n# Find the index of the stress ball\nstress_ball_idx = None\nfor i, object in enumerate(objects):\n    if object[0] == 'stress ball':\n        stress_ball_idx = i\n        break\n\n# Find the directly right object\ndirect_right = objects[i+1]\n\n# Check the directly right object's color\ndirect_right_color = direct_right[1]\nanswer = direct_right_color\n\n\n# Q: On the nightstand, you see the following items arranged in a row: a teal plate, a burgundy keychain, a yellow scrunchiephone charger, an orange mug, a pink notebook, and a grey cup. How many non-orange items do you see to the left of the teal item?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('plate', 'teal')] * 1\nobjects += [('keychain', 'burgundy')] * 1\nobjects += [('scrunchiephone charger', 'yellow')] * 1\nobjects += [('mug', 'orange')] * 1\nobjects += [('notebook', 'pink')] * 1\nobjects += [('cup', 'grey')] * 1\n\n# Find the index of the teal item\nteal_idx = None\nfor i, object in enumerate(objects):\n    if object[1] == 'teal':\n        teal_idx = i\n        break\n\n# Find non-orange items to the left of the teal item\nnon_orange = [object for object in objects[:i] if object[1] != 'orange']\n\n# Count number of non-orange objects\nnum_non_orange = len(non_orange)\nanswer = num_non_orange\n\n\n# Q: {question}\n\"\"\"", "\"question\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the student's answer, and the true answer, and are asked to score the student answer as either CORRECT or INCORRECT.\n\nExample Format:\nQUESTION: question here\nSTUDENT ANSWER: student's answer here\nTRUE ANSWER: true answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nSTUDENT ANSWER: {result}\nTRUE ANSWER: {answer}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\nWrite out in a step by step manner your reasoning to be sure that your conclusion is correct. Avoid simply stating the correct answer at the outset.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nEXPLANATION: step by step reasoning here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nEXPLANATION:\"\"\"", "\"query\"", "\"\"\"You are comparing a submitted answer to an expert answer on a given SQL coding question. Here is the data:\n[BEGIN DATA]\n***\n[Question]: {query}\n***\n[Expert]: {answer}\n***\n[Submission]: {result}\n***\n[END DATA]\nCompare the content and correctness of the submitted SQL with the expert answer. Ignore any differences in whitespace, style, or output column names. The submitted answer may either be correct or incorrect. Determine which case applies. First, explain in detail the similarities or differences between the expert answer and the submission, ignoring superficial aspects such as whitespace, style or output column names. Do not state the final answer in your initial explanation. Then, respond with either \"CORRECT\" or \"INCORRECT\" (without quotes or punctuation) on its own line. This should correspond to whether the submitted SQL and the expert answer are semantically the same or different, respectively. Then, repeat your final answer on a new line.\"\"\"", "\"query\"", "'''\nQ: Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\"\"\"\n    money_initial = 23\n    bagels = 5\n    bagel_cost = 3\n    money_spent = bagels * bagel_cost\n    money_left = money_initial - money_spent\n    result = money_left\n    return result\n\n\n\n\n\nQ: Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\"\"\"\n    golf_balls_initial = 58\n    golf_balls_lost_tuesday = 23\n    golf_balls_lost_wednesday = 2\n    golf_balls_left = golf_balls_initial - golf_balls_lost_tuesday - golf_balls_lost_wednesday\n    result = golf_balls_left\n    return result\n\n\n\n\n\nQ: There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\"\"\"\n    computers_initial = 9\n    computers_per_day = 5\n    num_days = 4  # 4 days between monday and thursday\n    computers_added = computers_per_day * num_days\n    computers_total = computers_initial + computers_added\n    result = computers_total\n    return result\n\n\n\n\n\nQ: Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\"\"\"\n    toys_initial = 5\n    mom_toys = 2\n    dad_toys = 2\n    total_received = mom_toys + dad_toys\n    total_toys = toys_initial + total_received\n    result = total_toys\n    return result\n\n\n\n\n\nQ: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\"\"\"\n    jason_lollipops_initial = 20\n    jason_lollipops_after = 12\n    denny_lollipops = jason_lollipops_initial - jason_lollipops_after\n    result = denny_lollipops\n    return result\n\n\n\n\n\nQ: Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\"\"\"\n    leah_chocolates = 32\n    sister_chocolates = 42\n    total_chocolates = leah_chocolates + sister_chocolates\n    chocolates_eaten = 35\n    chocolates_left = total_chocolates - chocolates_eaten\n    result = chocolates_left\n    return result\n\n\n\n\n\nQ: If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\"\"\"\n    cars_initial = 3\n    cars_arrived = 2\n    total_cars = cars_initial + cars_arrived\n    result = total_cars\n    return result\n\n\n\n\n\nQ: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\"\"\"\n    trees_initial = 15\n    trees_after = 21\n    trees_added = trees_after - trees_initial\n    result = trees_added\n    return result\n\n\n\n\n\nQ: {question}\n\n# solution in Python:\n'''", "\"question\"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Use the following pieces of context to answer the users question. \nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\n----------------\n{context}\"\"\"", "\"{question}\"", "\"\"\"Chain for deciding a destination chain and the input to it.\"\"\"", "\"\"\"Map of name to candidate chains that inputs can be routed to.\"\"\"", "\"\"\"Default chain to use when router doesn't map input to one of the destinations.\"\"\"", "\"\"\"Question: What is the elevation range for the area that the eastern sector of the Colorado orogeny extends into?\nThought: I need to search Colorado orogeny, find the area that the eastern sector of the Colorado orogeny extends into, then find the elevation range of the area.\nAction: Search[Colorado orogeny]\nObservation: The Colorado orogeny was an episode of mountain building (an orogeny) in Colorado and surrounding areas.\nThought: It does not mention the eastern sector. So I need to look up eastern sector.\nAction: Lookup[eastern sector]\nObservation: (Result 1 / 1) The eastern sector extends into the High Plains and is called the Central Plains orogeny.\nThought: The eastern sector of Colorado orogeny extends into the High Plains. So I need to search High Plains and find its elevation range.\nAction: Search[High Plains]\nObservation: High Plains refers to one of two distinct land regions\nThought: I need to instead search High Plains (United States).\nAction: Search[High Plains (United States)]\nObservation: The High Plains are a subregion of the Great Plains. From east to west, the High Plains rise in elevation from around 1,800 to 7,000 ft (550 to 2,130 m).[3]\nThought: High Plains rise in elevation from around 1,800 to 7,000 ft, so the answer is 1,800 to 7,000 ft.\nAction: Finish[1,800 to 7,000 ft]\"\"\"", "\"\"\"Question: Musician and satirist Allie Goertz wrote a song about the \"The Simpsons\" character Milhouse, who Matt Groening named after who?\nThought: The question simplifies to \"The Simpsons\" character Milhouse is named after who. I only need to search Milhouse and find who it is named after.\nAction: Search[Milhouse]\nObservation: Milhouse Mussolini Van Houten is a recurring character in the Fox animated television series The Simpsons voiced by Pamela Hayden and created by Matt Groening.\nThought: The paragraph does not tell who Milhouse is named after, maybe I can look up \"named after\".\nAction: Lookup[named after]\nObservation: (Result 1 / 1) Milhouse was named after U.S. president Richard Nixon, whose middle name was Milhous.\nThought: Milhouse was named after U.S. president Richard Nixon, so the answer is Richard Nixon.\nAction: Finish[Richard Nixon]\"\"\"", "\"\"\"Question: Which documentary is about Finnish rock groups, Adam Clayton Powell or The Saimaa Gesture?\nThought: I need to search Adam Clayton Powell and The Saimaa Gesture, and find which documentary is about Finnish rock groups.\nAction: Search[Adam Clayton Powell]\nObservation: Could not find [Adam Clayton Powell]. Similar: [\u2019Adam Clayton Powell III\u2019, \u2019Seventh Avenue (Manhattan)\u2019, \u2019Adam Clayton Powell Jr. State Office Building\u2019, \u2019Isabel Washington Powell\u2019, \u2019Adam Powell\u2019, \u2019Adam Clayton Powell (film)\u2019, \u2019Giancarlo Esposito\u2019].\nThought: To find the documentary, I can search Adam Clayton Powell (film).\nAction: Search[Adam Clayton Powell (film)]\nObservation: Adam Clayton Powell is a 1989 American documentary film directed by Richard Kilberg. The film is about the rise and fall of influential African-American politician Adam Clayton Powell Jr.[3][4] It was later aired as part of the PBS series The American Experience.\nThought: Adam Clayton Powell (film) is a documentary about an African-American politician, not Finnish rock groups. So the documentary about Finnish rock groups must instead be The Saimaa Gesture.\nAction: Finish[The Saimaa Gesture]\"\"\"", "\"\"\"Question: What profession does Nicholas Ray and Elia Kazan have in common?\nThought: I need to search Nicholas Ray and Elia Kazan, find their professions, then find the profession they have in common.\nAction: Search[Nicholas Ray]\nObservation: Nicholas Ray (born Raymond Nicholas Kienzle Jr., August 7, 1911 - June 16, 1979) was an American film director, screenwriter, and actor best known for the 1955 film Rebel Without a Cause.\nThought: Professions of Nicholas Ray are director, screenwriter, and actor. I need to search Elia Kazan next and find his professions.\nAction: Search[Elia Kazan]\nObservation: Elia Kazan was an American film and theatre director, producer, screenwriter and actor.\nThought: Professions of Elia Kazan are director, producer, screenwriter, and actor. So profession Nicholas Ray and Elia Kazan have in common is director, screenwriter, and actor.\nAction: Finish[director, screenwriter, actor]\"\"\"", "\"\"\"Question: Which magazine was started first Arthur\u2019s Magazine or First for Women?\nThought: I need to search Arthur\u2019s Magazine and First for Women, and find which was started first.\nAction: Search[Arthur\u2019s Magazine]\nObservation: Arthur\u2019s Magazine (1844-1846) was an American literary periodical published in Philadelphia in the 19th century.\nThought: Arthur\u2019s Magazine was started in 1844. I need to search First for Women next.\nAction: Search[First for Women]\nObservation: First for Women is a woman\u2019s magazine published by Bauer Media Group in the USA.[1] The magazine was started in 1989.\nThought: First for Women was started in 1989. 1844 (Arthur\u2019s Magazine) < 1989 (First for Women), so Arthur\u2019s Magazine was started first.\nAction: Finish[Arthur\u2019s Magazine]\"\"\"", "\"\"\"Question: Were Pavel Urysohn and Leonid Levin known for the same type of work?\nThought: I need to search Pavel Urysohn and Leonid Levin, find their types of work, then find if they are the same.\nAction: Search[Pavel Urysohn]\nObservation: Pavel Samuilovich Urysohn (February 3, 1898 - August 17, 1924) was a Soviet mathematician who is best known for his contributions in dimension theory.\nThought: Pavel Urysohn is a mathematician. I need to search Leonid Levin next and find its type of work.\nAction: Search[Leonid Levin]\nObservation: Leonid Anatolievich Levin is a Soviet-American mathematician and computer scientist.\nThought: Leonid Levin is a mathematician and computer scientist. So Pavel Urysohn and Leonid Levin have the same type of work.\nAction: Finish[yes]\"\"\"", "\"\"\"\\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"Compute ngram overlap score of source and example as sentence_bleu score.\n\n    Use sentence_bleu with method1 smoothing function and auto reweighting.\n    Return float value between 0.0 and 1.0 inclusive.\n    https://www.nltk.org/_modules/nltk/translate/bleu_score.html\n    https://aclanthology.org/P02-1040.pdf\n    \"\"\"", "\"\"\"A list of the examples that the prompt template expects.\"\"\"", "\"\"\"Threshold at which algorithm stops. Set to -1.0 by default.\n\n    For negative threshold:\n    select_examples sorts examples by ngram_overlap_score, but excludes none.\n    For threshold greater than 1.0:\n    select_examples excludes all examples, and returns an empty list.\n    For threshold equal to 0.0:\n    select_examples sorts examples by ngram_overlap_score,\n    and excludes examples with no ngram overlap with input.\n    \"\"\"", "\"Not all the correct dependencies for this ExampleSelect exist.\"", "\"\"\"Return list of examples sorted by ngram_overlap_score with input.\n\n        Descending order.\n        Excludes any examples with ngram_overlap_score less than or equal to threshold.\n        \"\"\"", "\"\"\"Setup: You are now playing a fast paced round of TextWorld! Here is your task for\ntoday. First of all, you could, like, try to travel east. After that, take the\nbinder from the locker. With the binder, place the binder on the mantelpiece.\nAlright, thanks!\n\n-= Vault =-\nYou've just walked into a vault. You begin to take stock of what's here.\n\nAn open safe is here. What a letdown! The safe is empty! You make out a shelf.\nBut the thing hasn't got anything on it. What, you think everything in TextWorld\nshould have stuff on it?\n\nYou don't like doors? Why not try going east, that entranceway is unguarded.\n\nThought: I need to travel east\nAction: Play[go east]\nObservation: -= Office =-\nYou arrive in an office. An ordinary one.\n\nYou can make out a locker. The locker contains a binder. You see a case. The\ncase is empty, what a horrible day! You lean against the wall, inadvertently\npressing a secret button. The wall opens up to reveal a mantelpiece. You wonder\nidly who left that here. The mantelpiece is standard. The mantelpiece appears to\nbe empty. If you haven't noticed it already, there seems to be something there\nby the wall, it's a table. Unfortunately, there isn't a thing on it. Hm. Oh well\nThere is an exit to the west. Don't worry, it is unguarded.\n\nThought: I need to take the binder from the locker\nAction: Play[take binder]\nObservation: You take the binder from the locker.\n\nThought: I need to place the binder on the mantelpiece\nAction: Play[put binder on mantelpiece]\n\nObservation: You put the binder on the mantelpiece.\nYour score has just gone up by one point.\n*** The End ***\nThought: The End has occurred\nAction: Finish[yes]\n\n\"\"\"", "\"\"\"\\n\\nSetup: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\""], "kaicao~pca_langchain": ["\"\"\"\n    <s>[INST] <<SYS>>\n    {{ You are a helpful AI Assistant}}<<SYS>>\n    ###\n\n    Previous Conversation:\n    '''\n    {history}\n    '''\n\n    {{{input}}}[/INST]\n\n    \"\"\"", "\"What is the capital Of India?\"", "\"\"\"\n    <s>[INST] <<SYS>>\n    {{ You are a helpful AI Assistant, and make sure only facts are provided, and tells don't know when not able to answer based on privded input and history}}<<SYS>>\n    ###\n\n    Previous Conversation:\n    '''\n    {chat_history}\n    '''\n\n    {{{question}}}[/INST]\n\n    \"\"\"", "'question'", "\"question\""], "zrqohbug~langchain-irenshi": ["\"{question}\"", "f\"vs_path, if you want to load next time: {vs_path}\"", "\"query\"", "\"query\"", "\"\"\"\u57fa\u4e8e\u4ee5\u4e0b\u5df2\u77e5\u4fe1\u606f\uff0c\u7b80\u6d01\u548c\u4e13\u4e1a\u7684\u6765\u56de\u7b54\u7528\u6237\u7684\u95ee\u9898\uff0c\u95ee\u9898\u662f\"{question}\"\u3002\u5982\u679c\u65e0\u6cd5\u4ece\u4e2d\u5f97\u5230\u7b54\u6848\uff0c\u8bf7\u8bf4 \"\u5df2\u77e5\u4fe1\u606f\u65e0\u6cd5\u56de\u7b54\u8be5\u95ee\u9898\"\uff0c\u4e0d\u5141\u8bb8\u5728\u7b54\u6848\u4e2d\u6dfb\u52a0\u7f16\u9020\u6210\u5206\uff0c\u7b54\u6848\u8bf7\u4f7f\u7528\u4e2d\u6587\u3002\u5df2\u77e5\u5185\u5bb9\u5982\u4e0b: \n{context} \"\"\""], "Harleyzheng~langchain": ["\"The algebraic expression of the equation\"", "\"The solution to the equation\"", "\"Write out the following equation using algebraic symbols then solve it.\"", "\"Write out the following equation using algebraic symbols then solve it. Use the format\\n\\nEQUATION:...\\nSOLUTION:...\\n\\n\""], "skadangara~Text_Summarization_LLM_LangChain": ["\"\"\"\r\n        given the information {information} about a person from I want you to create:\r\n        1. a short summary\r\n        2. two interesting facts about them\r\n    \"\"\""], "sdpmas~langchain": ["\"\"\"You are an AI assistant helping a human keep track of facts about relevant people, places, and concepts in their life. Update the summary of the provided entity in the \"Entity\" section based on the last line of your conversation with the human. If you are writing the summary for the first time, return a single sentence.\nThe update should only include facts that are relayed in the last line of conversation about the provided entity, and should only contain facts about the provided entity.\n\nIf there is no new information about the provided entity or the information is not worth noting (not an important or relevant fact to remember long-term), return the existing summary unchanged.\n\nFull conversation history (for context):\n{history}\n\nEntity to summarize:\n{entity}\n\nExisting summary of {entity}:\n{summary}\n\nLast line of conversation:\nHuman: {input}\nUpdated summary:\"\"\"", "\"\"\"You are an assistant to a human, powered by a large language model trained by OpenAI.\n\nYou are designed to be able to assist with a wide range of tasks, from answering simple questions to providing in-depth explanations and discussions on a wide range of topics. As a language model, you are able to generate human-like text based on the input you receive, allowing you to engage in natural-sounding conversations and provide responses that are coherent and relevant to the topic at hand.\n\nYou are constantly learning and improving, and your capabilities are constantly evolving. You are able to process and understand large amounts of text, and can use this knowledge to provide accurate and informative responses to a wide range of questions. You have access to some personalized information provided by the human in the Context section below. Additionally, you are able to generate your own text based on the input you receive, allowing you to engage in discussions and provide explanations and descriptions on a wide range of topics.\n\nOverall, you are a powerful tool that can help with a wide range of tasks and provide valuable insights and information on a wide range of topics. Whether the human needs help with a specific question or just wants to have a conversation about a particular topic, you are here to assist.\n\nContext:\n{entities}\n\nCurrent conversation:\n{history}\nLast line:\nHuman: {input}\nYou:\"\"\"", "\"\"\"Progressively summarize the lines of conversation provided, adding onto the previous summary returning a new summary.\n\nEXAMPLE\nCurrent summary:\nThe human asks what the AI thinks of artificial intelligence. The AI thinks artificial intelligence is a force for good.\n\nNew lines of conversation:\nHuman: Why do you think artificial intelligence is a force for good?\nAI: Because artificial intelligence will help humans reach their full potential.\n\nNew summary:\nThe human asks what the AI thinks of artificial intelligence. The AI thinks artificial intelligence is a force for good because it will help humans reach their full potential.\nEND OF EXAMPLE\n\nCurrent summary:\n{summary}\n\nNew lines of conversation:\n{new_lines}\n\nNew summary:\"\"\"", "\"\"\"You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:\"\"\"", "\"\"\"You are an AI assistant helping a human keep track of facts about relevant people, places, and concepts in their life. Update the summary of the provided entity in the \"Entity\" section based on the last line of your conversation with the human. If you are writing the summary for the first time, return a single sentence.\nThe update should only include facts that are relayed in the last line of conversation about the provided entity, and should only contain facts about the provided entity.\n\nIf there is no new information about the provided entity or the information is not worth noting (not an important or relevant fact to remember long-term), return the existing summary unchanged.\n\nFull conversation history (for context):\n{history}\n\nEntity to summarize:\n{entity}\n\nExisting summary of {entity}:\n{summary}\n\nLast line of conversation:\nHuman: {input}\nUpdated summary:\"\"\"", "\" Extract all of the knowledge triples from the last line of conversation.\"", "\" and an object. The subject is the entity being described,\"", "\" the predicate is the property of the subject that is being\"", "\" described, and the object is the value of the property.\\n\\n\"", "\"AI: What do you know about Nevada?\\n\"", "\"Person #1: It's a state in the US. It's also the number 1 producer of gold in the US.\\n\\n\"", "f\"Output: (Nevada, is a, state){KG_TRIPLE_DELIMITER}(Nevada, is in, US)\"", "f\"{KG_TRIPLE_DELIMITER}(Nevada, is the number 1 producer of, gold)\\n\"", "\"Person #1: I'm going to the store.\\n\\n\"", "\"Person #1: The Descartes I'm referring to is a standup comedian and interior designer from Montreal.\\n\"", "\"AI: Oh yes, He is a comedian and an interior designer. He has been in the industry for 30 years. His favorite food is baked bean pie.\\n\"", "\"Person #1: Oh huh. I know Descartes likes to drive antique scooters and play the mandolin.\\n\"", "\"Conversation history (for reference only):\\n\"", "\"\"\"Chain for deciding a destination chain and the input to it.\"\"\"", "\"\"\"Map of name to candidate chains that inputs can be routed to.\"\"\"", "\"\"\"Default chain to use when router doesn't map input to one of the destinations.\"\"\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Compute ngram overlap score of source and example as sentence_bleu score.\n\n    Use sentence_bleu with method1 smoothing function and auto reweighting.\n    Return float value between 0.0 and 1.0 inclusive.\n    https://www.nltk.org/_modules/nltk/translate/bleu_score.html\n    https://aclanthology.org/P02-1040.pdf\n    \"\"\"", "\"\"\"A list of the examples that the prompt template expects.\"\"\"", "\"\"\"Threshold at which algorithm stops. Set to -1.0 by default.\n\n    For negative threshold:\n    select_examples sorts examples by ngram_overlap_score, but excludes none.\n    For threshold greater than 1.0:\n    select_examples excludes all examples, and returns an empty list.\n    For threshold equal to 0.0:\n    select_examples sorts examples by ngram_overlap_score,\n    and excludes examples with no ngram overlap with input.\n    \"\"\"", "\"Not all the correct dependencies for this ExampleSelect exist\"", "\"\"\"Return list of examples sorted by ngram_overlap_score with input.\n\n        Descending order.\n        Excludes any examples with ngram_overlap_score less than or equal to threshold.\n        \"\"\"", "\"\"\"Setup: You are now playing a fast paced round of TextWorld! Here is your task for\ntoday. First of all, you could, like, try to travel east. After that, take the\nbinder from the locker. With the binder, place the binder on the mantelpiece.\nAlright, thanks!\n\n-= Vault =-\nYou've just walked into a vault. You begin to take stock of what's here.\n\nAn open safe is here. What a letdown! The safe is empty! You make out a shelf.\nBut the thing hasn't got anything on it. What, you think everything in TextWorld\nshould have stuff on it?\n\nYou don't like doors? Why not try going east, that entranceway is unguarded.\n\nThought: I need to travel east\nAction: Play[go east]\nObservation: -= Office =-\nYou arrive in an office. An ordinary one.\n\nYou can make out a locker. The locker contains a binder. You see a case. The\ncase is empty, what a horrible day! You lean against the wall, inadvertently\npressing a secret button. The wall opens up to reveal a mantelpiece. You wonder\nidly who left that here. The mantelpiece is standard. The mantelpiece appears to\nbe empty. If you haven't noticed it already, there seems to be something there\nby the wall, it's a table. Unfortunately, there isn't a thing on it. Hm. Oh well\nThere is an exit to the west. Don't worry, it is unguarded.\n\nThought: I need to take the binder from the locker\nAction: Play[take binder]\nObservation: You take the binder from the locker.\n\nThought: I need to place the binder on the mantelpiece\nAction: Play[put binder on mantelpiece]\n\nObservation: You put the binder on the mantelpiece.\nYour score has just gone up by one point.\n*** The End ***\nThought: The End has occurred\nAction: Finish[yes]\n\n\"\"\"", "\"\"\"\\n\\nSetup: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"LLM wrapper around a Databricks serving endpoint or a cluster driver proxy app.\n    It supports two endpoint types:\n\n    * **Serving endpoint** (recommended for both production and development).\n      We assume that an LLM was registered and deployed to a serving endpoint.\n      To wrap it as an LLM you must have \"Can Query\" permission to the endpoint.\n      Set ``endpoint_name`` accordingly and do not set ``cluster_id`` and\n      ``cluster_driver_port``.\n      The expected model signature is:\n\n      * inputs::\n\n          [{\"name\": \"prompt\", \"type\": \"string\"},\n           {\"name\": \"stop\", \"type\": \"list[string]\"}]\n\n      * outputs: ``[{\"type\": \"string\"}]``\n\n    * **Cluster driver proxy app** (recommended for interactive development).\n      One can load an LLM on a Databricks interactive cluster and start a local HTTP\n      server on the driver node to serve the model at ``/`` using HTTP POST method\n      with JSON input/output.\n      Please use a port number between ``[3000, 8000]`` and let the server listen to\n      the driver IP address or simply ``0.0.0.0`` instead of localhost only.\n      To wrap it as an LLM you must have \"Can Attach To\" permission to the cluster.\n      Set ``cluster_id`` and ``cluster_driver_port`` and do not set ``endpoint_name``.\n      The expected server schema (using JSON schema) is:\n\n      * inputs::\n\n          {\"type\": \"object\",\n           \"properties\": {\n              \"prompt\": {\"type\": \"string\"},\n              \"stop\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}}},\n           \"required\": [\"prompt\"]}`\n\n      * outputs: ``{\"type\": \"string\"}``\n\n    If the endpoint model signature is different or you want to set extra params,\n    you can use `transform_input_fn` and `transform_output_fn` to apply necessary\n    transformations before and after the query.\n    \"\"\"", "\"\"\"Databricks workspace hostname.\n    If not provided, the default value is determined by\n\n    * the ``DATABRICKS_HOST`` environment variable if present, or\n    * the hostname of the current Databricks workspace if running inside\n      a Databricks notebook attached to an interactive cluster in \"single user\"\n      or \"no isolation shared\" mode.\n    \"\"\"", "\"\"\"Databricks personal access token.\n    If not provided, the default value is determined by\n\n    * the ``DATABRICKS_TOKEN`` environment variable if present, or\n    * an automatically generated temporary token if running inside a Databricks\n      notebook attached to an interactive cluster in \"single user\" or\n      \"no isolation shared\" mode.\n    \"\"\"", "\"\"\"Name of the model serving endpont.\n    You must specify the endpoint name to connect to a model serving endpoint.\n    You must not set both ``endpoint_name`` and ``cluster_id``.\n    \"\"\"", "\"\"\"ID of the cluster if connecting to a cluster driver proxy app.\n    If neither ``endpoint_name`` nor ``cluster_id`` is not provided and the code runs\n    inside a Databricks notebook attached to an interactive cluster in \"single user\"\n    or \"no isolation shared\" mode, the current cluster ID is used as default.\n    You must not set both ``endpoint_name`` and ``cluster_id``.\n    \"\"\"", "\"\"\"The port number used by the HTTP server running on the cluster driver node.\n    The server should listen on the driver IP address or simply ``0.0.0.0`` to connect.\n    We recommend the server using a port number between ``[3000, 8000]``.\n    \"\"\"", "\"\"\"A function that transforms ``{prompt, stop, **kwargs}`` into a JSON-compatible\n    request object that the endpoint accepts.\n    For example, you can apply a prompt template to the input prompt.\n    \"\"\"", "\"\"\"A function that transforms the output from the endpoint to the generated text.\n    \"\"\"", "\"\"\"Queries the LLM endpoint with the given prompt and stop sequence.\"\"\"", "\"\"\"Question: What is the elevation range for the area that the eastern sector of the Colorado orogeny extends into?\nThought: I need to search Colorado orogeny, find the area that the eastern sector of the Colorado orogeny extends into, then find the elevation range of the area.\nAction: Search[Colorado orogeny]\nObservation: The Colorado orogeny was an episode of mountain building (an orogeny) in Colorado and surrounding areas.\nThought: It does not mention the eastern sector. So I need to look up eastern sector.\nAction: Lookup[eastern sector]\nObservation: (Result 1 / 1) The eastern sector extends into the High Plains and is called the Central Plains orogeny.\nThought: The eastern sector of Colorado orogeny extends into the High Plains. So I need to search High Plains and find its elevation range.\nAction: Search[High Plains]\nObservation: High Plains refers to one of two distinct land regions\nThought: I need to instead search High Plains (United States).\nAction: Search[High Plains (United States)]\nObservation: The High Plains are a subregion of the Great Plains. From east to west, the High Plains rise in elevation from around 1,800 to 7,000 ft (550 to 2,130 m).[3]\nThought: High Plains rise in elevation from around 1,800 to 7,000 ft, so the answer is 1,800 to 7,000 ft.\nAction: Finish[1,800 to 7,000 ft]\"\"\"", "\"\"\"Question: Musician and satirist Allie Goertz wrote a song about the \"The Simpsons\" character Milhouse, who Matt Groening named after who?\nThought: The question simplifies to \"The Simpsons\" character Milhouse is named after who. I only need to search Milhouse and find who it is named after.\nAction: Search[Milhouse]\nObservation: Milhouse Mussolini Van Houten is a recurring character in the Fox animated television series The Simpsons voiced by Pamela Hayden and created by Matt Groening.\nThought: The paragraph does not tell who Milhouse is named after, maybe I can look up \"named after\".\nAction: Lookup[named after]\nObservation: (Result 1 / 1) Milhouse was named after U.S. president Richard Nixon, whose middle name was Milhous.\nThought: Milhouse was named after U.S. president Richard Nixon, so the answer is Richard Nixon.\nAction: Finish[Richard Nixon]\"\"\"", "\"\"\"Question: Which documentary is about Finnish rock groups, Adam Clayton Powell or The Saimaa Gesture?\nThought: I need to search Adam Clayton Powell and The Saimaa Gesture, and find which documentary is about Finnish rock groups.\nAction: Search[Adam Clayton Powell]\nObservation: Could not find [Adam Clayton Powell]. Similar: [\u2019Adam Clayton Powell III\u2019, \u2019Seventh Avenue (Manhattan)\u2019, \u2019Adam Clayton Powell Jr. State Office Building\u2019, \u2019Isabel Washington Powell\u2019, \u2019Adam Powell\u2019, \u2019Adam Clayton Powell (film)\u2019, \u2019Giancarlo Esposito\u2019].\nThought: To find the documentary, I can search Adam Clayton Powell (film).\nAction: Search[Adam Clayton Powell (film)]\nObservation: Adam Clayton Powell is a 1989 American documentary film directed by Richard Kilberg. The film is about the rise and fall of influential African-American politician Adam Clayton Powell Jr.[3][4] It was later aired as part of the PBS series The American Experience.\nThought: Adam Clayton Powell (film) is a documentary about an African-American politician, not Finnish rock groups. So the documentary about Finnish rock groups must instead be The Saimaa Gesture.\nAction: Finish[The Saimaa Gesture]\"\"\"", "\"\"\"Question: What profession does Nicholas Ray and Elia Kazan have in common?\nThought: I need to search Nicholas Ray and Elia Kazan, find their professions, then find the profession they have in common.\nAction: Search[Nicholas Ray]\nObservation: Nicholas Ray (born Raymond Nicholas Kienzle Jr., August 7, 1911 - June 16, 1979) was an American film director, screenwriter, and actor best known for the 1955 film Rebel Without a Cause.\nThought: Professions of Nicholas Ray are director, screenwriter, and actor. I need to search Elia Kazan next and find his professions.\nAction: Search[Elia Kazan]\nObservation: Elia Kazan was an American film and theatre director, producer, screenwriter and actor.\nThought: Professions of Elia Kazan are director, producer, screenwriter, and actor. So profession Nicholas Ray and Elia Kazan have in common is director, screenwriter, and actor.\nAction: Finish[director, screenwriter, actor]\"\"\"", "\"\"\"Question: Which magazine was started first Arthur\u2019s Magazine or First for Women?\nThought: I need to search Arthur\u2019s Magazine and First for Women, and find which was started first.\nAction: Search[Arthur\u2019s Magazine]\nObservation: Arthur\u2019s Magazine (1844-1846) was an American literary periodical published in Philadelphia in the 19th century.\nThought: Arthur\u2019s Magazine was started in 1844. I need to search First for Women next.\nAction: Search[First for Women]\nObservation: First for Women is a woman\u2019s magazine published by Bauer Media Group in the USA.[1] The magazine was started in 1989.\nThought: First for Women was started in 1989. 1844 (Arthur\u2019s Magazine) < 1989 (First for Women), so Arthur\u2019s Magazine was started first.\nAction: Finish[Arthur\u2019s Magazine]\"\"\"", "\"\"\"Question: Were Pavel Urysohn and Leonid Levin known for the same type of work?\nThought: I need to search Pavel Urysohn and Leonid Levin, find their types of work, then find if they are the same.\nAction: Search[Pavel Urysohn]\nObservation: Pavel Samuilovich Urysohn (February 3, 1898 - August 17, 1924) was a Soviet mathematician who is best known for his contributions in dimension theory.\nThought: Pavel Urysohn is a mathematician. I need to search Leonid Levin next and find its type of work.\nAction: Search[Leonid Levin]\nObservation: Leonid Anatolievich Levin is a Soviet-American mathematician and computer scientist.\nThought: Leonid Levin is a mathematician and computer scientist. So Pavel Urysohn and Leonid Levin have the same type of work.\nAction: Finish[yes]\"\"\"", "\"\"\"\\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"An AI language model has been given access to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n[TOOL_DESCRIPTIONS]\n{tool_descriptions}\n[END_TOOL_DESCRIPTIONS]\n\nThe question the human asked the AI model was:\n[QUESTION]\n{question}\n[END_QUESTION]{reference}\n\nThe AI language model decided to use the following set of tools to answer the question:\n[AGENT_TRAJECTORY]\n{agent_trajectory}\n[END_AGENT_TRAJECTORY]\n\nThe AI language model's final answer to the question was:\n[RESPONSE]\n{answer}\n[END_RESPONSE]\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"An AI language model has been given acces to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n[TOOL_DESCRIPTIONS]\nTool 1:\nName: Search\nDescription: useful for when you need to ask with search\n\nTool 2:\nName: Lookup\nDescription: useful for when you need to ask with lookup\n\nTool 3:\nName: Calculator\nDescription: useful for doing calculations\n\nTool 4:\nName: Search the Web (SerpAPI)\nDescription: useful for when you need to answer questions about current events\n[END_TOOL_DESCRIPTIONS]\n\nThe question the human asked the AI model was: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\n\nThe AI language model decided to use the following set of tools to answer the question:\n[AGENT_TRAJECTORY]\nStep 1:\nTool used: Search the Web (SerpAPI)\nTool input: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\nTool output: The Statue of Liberty was given to the United States by France, as a symbol of the two countries' friendship. It was erected atop an American-designed ...\n[END_AGENT_TRAJECTORY]\n\n[RESPONSE]\nThe AI language model's final answer to the question was: There are different ways to measure the length of the United States, but if we use the distance between the Statue of Liberty and the westernmost point of the contiguous United States (Cape Alava, Washington), which is approximately 2,857 miles (4,596 km), and assume that the Statue of Liberty is 305 feet (93 meters) tall, then the statue would stretch across the United States approximately 17.5 times if laid end to end.\n[END_RESPONSE]\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"First, let's evaluate the final answer. The final uses good reasoning but is wrong. 2,857 divided by 305 is not 17.5.\\\nThe model should have used the calculator to figure this out. Second does the model use a logical sequence of tools to answer the question?\\\nThe way model uses the search is not helpful. The model should have used the search tool to figure the width of the US or the height of the statue.\\\nThe model didn't use the calculator tool and gave an incorrect answer. The search API should be used for current events or specific questions.\\\nThe tools were not used in a helpful way. The model did not use too many steps to answer the question.\\\nThe model did not use the appropriate tools to answer the question.\\\n    \nJudgment: Given the good reasoning in the final answer but otherwise poor performance, we give the model a score of 2.\n\nScore: 2\"\"\"", "\"\"\"An AI language model has been given access to a set of tools to help answer a user's question.\n\nThe question the human asked the AI model was:\n[QUESTION]\n{question}\n[END_QUESTION]{reference}\n\nThe AI language model decided to use the following set of tools to answer the question:\n[AGENT_TRAJECTORY]\n{agent_trajectory}\n[END_AGENT_TRAJECTORY]\n\nThe AI language model's final answer to the question was:\n[RESPONSE]\n{answer}\n[END_RESPONSE]\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"Redis-backed Entity store. Entities get a TTL of 1 day by default, and\n    that TTL is extended by 3 days every time the entity is read back.\n    \"\"\"", "f\"\"\"\n            CREATE TABLE IF NOT EXISTS {self.full_table_name} (\n                key TEXT PRIMARY KEY,\n                value TEXT\n            )\n        \"\"\"", "f\"\"\"\n            SELECT value\n            FROM {self.full_table_name}\n            WHERE key = ?\n        \"\"\"", "f\"\"\"\n            INSERT OR REPLACE INTO {self.full_table_name} (key, value)\n            VALUES (?, ?)\n        \"\"\"", "f\"\"\"\n            DELETE FROM {self.full_table_name}\n            WHERE key = ?\n        \"\"\"", "f\"\"\"\n            SELECT 1\n            FROM {self.full_table_name}\n            WHERE key = ?\n            LIMIT 1\n        \"\"\"", "\"\"\"Entity extractor & summarizer memory.\n\n    Extracts named entities from the recent chat history and generates summaries.\n    With a swapable entity store, persisting entities across conversations.\n    Defaults to an in-memory entity store, and can be swapped out for a Redis,\n    SQLite, or other entity store.\n    \"\"\"", "\"\"\"\n        Returns chat history and all generated entities with summaries if available,\n        and updates or clears the recent entity cache.\n\n        New entity name can be found when calling this method, before the entity\n        summaries are generated, so the entity cache values may be empty if no entity\n        descriptions are generated yet.\n        \"\"\"", "\"\"\"\n        Save context from this conversation history to the entity store.\n\n        Generates a summary for each entity in the entity cache by prompting\n        the model, and saves these summaries to the entity store.\n        \"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "'''\nQ: Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\"\"\"\n    money_initial = 23\n    bagels = 5\n    bagel_cost = 3\n    money_spent = bagels * bagel_cost\n    money_left = money_initial - money_spent\n    result = money_left\n    return result\n\n\n\n\n\nQ: Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\"\"\"\n    golf_balls_initial = 58\n    golf_balls_lost_tuesday = 23\n    golf_balls_lost_wednesday = 2\n    golf_balls_left = golf_balls_initial - golf_balls_lost_tuesday - golf_balls_lost_wednesday\n    result = golf_balls_left\n    return result\n\n\n\n\n\nQ: There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\"\"\"\n    computers_initial = 9\n    computers_per_day = 5\n    num_days = 4  # 4 days between monday and thursday\n    computers_added = computers_per_day * num_days\n    computers_total = computers_initial + computers_added\n    result = computers_total\n    return result\n\n\n\n\n\nQ: Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\"\"\"\n    toys_initial = 5\n    mom_toys = 2\n    dad_toys = 2\n    total_received = mom_toys + dad_toys\n    total_toys = toys_initial + total_received\n    result = total_toys\n    return result\n\n\n\n\n\nQ: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\"\"\"\n    jason_lollipops_initial = 20\n    jason_lollipops_after = 12\n    denny_lollipops = jason_lollipops_initial - jason_lollipops_after\n    result = denny_lollipops\n    return result\n\n\n\n\n\nQ: Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\"\"\"\n    leah_chocolates = 32\n    sister_chocolates = 42\n    total_chocolates = leah_chocolates + sister_chocolates\n    chocolates_eaten = 35\n    chocolates_left = total_chocolates - chocolates_eaten\n    result = chocolates_left\n    return result\n\n\n\n\n\nQ: If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\"\"\"\n    cars_initial = 3\n    cars_arrived = 2\n    total_cars = cars_initial + cars_arrived\n    result = total_cars\n    return result\n\n\n\n\n\nQ: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\"\"\"\n    trees_initial = 15\n    trees_after = 21\n    trees_added = trees_after - trees_initial\n    result = trees_added\n    return result\n\n\n\n\n\nQ: {question}\n\n# solution in Python:\n'''", "\"question\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\nIn addition to giving an answer, also return a score of how fully it answered the user's question. This should be in the following format:\n\nQuestion: [question here]\nHelpful Answer: [answer here]\nScore: [score between 0 and 100]\n\nHow to determine the score:\n- Higher is a better answer\n- Better responds fully to the asked question, with sufficient level of detail\n- If you do not know the answer based on the context, that should be a score of 0\n- Don't be overconfident!\n\nExample #1\n\nContext:\n---------\nApples are red\n---------\nQuestion: what color are apples?\nHelpful Answer: red\nScore: 100\n\nExample #2\n\nContext:\n---------\nit was night and the witness forgot his glasses. he was not sure if it was a sports car or an suv\n---------\nQuestion: what type was the car?\nHelpful Answer: a sports car or an suv\nScore: 60\n\nExample #3\n\nContext:\n---------\nPears are either red or orange\n---------\nQuestion: what color are apples?\nHelpful Answer: This document does not answer the question\nScore: 0\n\nBegin!\n\nContext:\n---------\n{context}\n---------\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Extract all entities from the following text. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return.\n\nEXAMPLE\ni'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\ni'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Sam.\nOutput: Langchain, Sam\nEND OF EXAMPLE\n\nBegin!\n\n{input}\nOutput:\"\"\"", "\"\"\"Use the following knowledge triplets to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Task:Generate Cypher statement to query a graph database.\nInstructions:\nUse only the provided relationship types and properties in the schema.\nDo not use any other relationship types or properties that are not provided.\nSchema:\n{schema}\nNote: Do not include any explanations or apologies in your responses.\nDo not respond to any questions that might ask anything else than for you to construct a Cypher statement.\nDo not include any text except the generated Cypher statement.\n\nThe question is:\n{question}\"\"\"", "\"question\"", "\"question\"", "\"\"\"\nInstructions:\n\nGenerate statement with K\u00f9zu Cypher dialect (rather than standard):\n1. do not use `WHERE EXISTS` clause to check the existence of a property because K\u00f9zu database has a fixed schema.\n2. do not omit relationship pattern. Always use `()-[]->()` instead of `()->()`.\n3. do not include any notes or comments even if the statement does not produce the expected result.\n```\\n\"\"\"", "\"question\"", "\"question\"", "\"\"\"You are an assistant that helps to form nice and human understandable answers.\nThe information part contains the provided information that you must use to construct an answer.\nThe provided information is authorative, you must never doubt it or try to use your internal knowledge to correct it.\nMake the answer sound as a response to the question. Do not mention that you based the result on the given information.\nIf the provided information is empty, say that you don't know the answer.\nInformation:\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Task: Identify the intent of a prompt and return the appropriate SPARQL query type.\nYou are an assistant that distinguishes different types of prompts and returns the corresponding SPARQL query types.\nConsider only the following query types:\n* SELECT: this query type corresponds to questions\n* UPDATE: this query type corresponds to all requests for deleting, inserting, or changing triples\nNote: Be as concise as possible.\nDo not include any explanations or apologies in your responses.\nDo not respond to any questions that ask for anything else than for you to identify a SPARQL query type.\nDo not include any unnecessary whitespaces or any text except the query type, i.e., either return 'SELECT' or 'UPDATE'.\n\nThe prompt is:\n{prompt}\nHelpful Answer:\"\"\"", "\"\"\"Task: Generate a SPARQL SELECT statement for querying a graph database.\nFor instance, to find all email addresses of John Doe, the following query in backticks would be suitable:\n```\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nSELECT ?email\nWHERE {{\n    ?person foaf:name \"John Doe\" .\n    ?person foaf:mbox ?email .\n}}\n```\nInstructions:\nUse only the node types and properties provided in the schema.\nDo not use any node types and properties that are not explicitly provided.\nInclude all necessary prefixes.\nSchema:\n{schema}\nNote: Be as concise as possible.\nDo not include any explanations or apologies in your responses.\nDo not respond to any questions that ask for anything else than for you to construct a SPARQL query.\nDo not include any text except the SPARQL query generated.\n\nThe question is:\n{prompt}\"\"\"", "\"\"\"Task: Generate a SPARQL UPDATE statement for updating a graph database.\nFor instance, to add 'jane.doe@foo.bar' as a new email address for Jane Doe, the following query in backticks would be suitable:\n```\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nINSERT {{\n    ?person foaf:mbox <mailto:jane.doe@foo.bar> .\n}}\nWHERE {{\n    ?person foaf:name \"Jane Doe\" .\n}}\n```\nInstructions:\nMake the query as short as possible and avoid adding unnecessary triples.\nUse only the node types and properties provided in the schema.\nDo not use any node types and properties that are not explicitly provided.\nInclude all necessary prefixes.\nSchema:\n{schema}\nNote: Be as concise as possible.\nDo not include any explanations or apologies in your responses.\nDo not respond to any questions that ask for anything else than for you to construct a SPARQL query.\nReturn only the generated SPARQL query, nothing else.\n\nThe information to be inserted is:\n{prompt}\"\"\"", "\"\"\"Task: Generate a natural language response from the results of a SPARQL query.\nYou are an assistant that creates well-written and human understandable answers.\nThe information part contains the information provided, which you can use to construct an answer.\nThe information provided is authoritative, you must never doubt it or try to use your internal knowledge to correct it.\nMake your response sound like the information is coming from an AI assistant, but don't add any information.\nInformation:\n{context}\n\nQuestion: {prompt}\nHelpful Answer:\"\"\"", "\"\"\"\\\nGiven a query to a question answering system select the system best suited \\\nfor the input. You will be given the names of the available systems and a description \\\nof what questions the system is best suited for. You may also revise the original \\\ninput if you think that revising it will ultimately lead to a better response.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the question answering system to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\"", "\"\"\"\n    Input to this tool is a detailed and correct SQL query, output is a result from the Spark SQL.\n    If the query is not correct, an error message will be returned.\n    If an error is returned, rewrite the query, check the query, and try again.\n    \"\"\"", "\"\"\"Execute the query, return the results or an error message.\"\"\"", "\"\"\"\n    Input to this tool is a comma-separated list of tables, output is the schema and sample rows for those tables.\n    Be sure that the tables actually exist by calling list_tables_sql_db first!\n\n    Example Input: \"table1, table2, table3\"\n    \"\"\"", "\"\"\"Get the schema for tables in a comma-separated list.\"\"\"", "\"Input is an empty string, output is a comma separated list of tables in the Spark SQL.\"", "\"\"\"Get the schema for a specific table.\"\"\"", "\"\"\"\n    Use this tool to double check if your query is correct before executing it.\n    Always use this tool before executing a query with query_sql_db!\n    \"\"\"", "\"query\"", "\"query\"", "\"\"\"Use the LLM to check the query.\"\"\"", "\"\"\"You are a teacher coming up with questions to ask on a quiz. \nGiven the following document, please generate a question and answer based on that document.\n\nExample Format:\n<Begin Document>\n...\n<End Document>\nQUESTION: question here\nANSWER: answer here\n\nThese questions should be detailed and be based explicitly on information in the document. Begin!\n\n<Begin Document>\n{doc}\n<End Document>\"\"\"", "r\"QUESTION: (.*?)\\n+ANSWER: (.*)\"", "\"query\"", "\"query\"", "\"query\"", "\"query\"", "\"\"\"Evaluate Chain or LLM output, based on optional input and label.\n\n        Args:\n            prediction (str): the LLM or chain prediction to evaluate.\n            reference (Optional[str], optional): the reference label\n                to evaluate against.\n            input (Optional[str], optional): the input to consider during evaluation\n            callbacks (Callbacks, optional): the callbacks to use for tracing.\n            **kwargs: additional keyword arguments, including callbacks, tags, etc.\n        Returns:\n            dict: The evaluation results containing the score or value.\n        \"\"\"", "\"query\"", "\"query\"", "\"query\"", "\"\"\"Load QA Eval Chain from LLM.\n\n        Args:\n            llm (BaseLanguageModel): the base language model to use.\n\n            prompt (PromptTemplate): A prompt template containing the input_variables:\n            'query', 'context' and 'result' that will be used as the prompt\n            for evaluation.\n            Defaults to PROMPT.\n\n            **kwargs: additional keyword arguments.\n\n        Returns:\n            ContextQAEvalChain: the loaded QA eval chain.\n        \"\"\"", "\"query\"", "\"query\"", "\"query\"", "\"query\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"How to parse the output of calling an LLM on this formatted prompt.\"\"\"", "\"Cannot have an input variable named 'stop', as it is used internally,\"", "\"\"\"Return a partial of the prompt template.\"\"\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Format a document into a string based on a prompt template.\n\n    First, this pulls information from the document from two sources:\n\n    1. `page_content`:\n        This takes the information from the `document.page_content`\n        and assigns it to a variable named `page_content`.\n    2. metadata:\n        This takes information from `document.metadata` and assigns\n        it to variables of the same name.\n\n    Those variables are then passed into the `prompt` to produce a formatted string.\n\n    Args:\n        doc: Document, the page_content and metadata will be used to create\n            the final string.\n        prompt: BasePromptTemplate, will be used to format the page_content\n            and metadata into the final string.\n\n    Returns:\n        string of the document formatted.\n\n    Example:\n        .. code-block:: python\n\n            from langchain.schema import Document\n            from langchain.prompts import PromptTemplate\n            doc = Document(page_content=\"This is a joke\", metadata={\"page\": \"1\"})\n            prompt = PromptTemplate.from_template(\"Page {page}: {page_content}\")\n            format_document(doc, prompt)\n            >>> \"Page 1: This is a joke\"\n    \"\"\"", "\"\"\"\n# Generate Python3 Code to solve problems\n# Q: On the nightstand, there is a red pencil, a purple mug, a burgundy keychain, a fuchsia teddy bear, a black plate, and a blue stress ball. What color is the stress ball?\n# Put objects into a dictionary for quick look up\nobjects = dict()\nobjects['pencil'] = 'red'\nobjects['mug'] = 'purple'\nobjects['keychain'] = 'burgundy'\nobjects['teddy bear'] = 'fuchsia'\nobjects['plate'] = 'black'\nobjects['stress ball'] = 'blue'\n\n# Look up the color of stress ball\nstress_ball_color = objects['stress ball']\nanswer = stress_ball_color\n\n\n# Q: On the table, you see a bunch of objects arranged in a row: a purple paperclip, a pink stress ball, a brown keychain, a green scrunchiephone charger, a mauve fidget spinner, and a burgundy pen. What is the color of the object directly to the right of the stress ball?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('paperclip', 'purple')] * 1\nobjects += [('stress ball', 'pink')] * 1\nobjects += [('keychain', 'brown')] * 1\nobjects += [('scrunchiephone charger', 'green')] * 1\nobjects += [('fidget spinner', 'mauve')] * 1\nobjects += [('pen', 'burgundy')] * 1\n\n# Find the index of the stress ball\nstress_ball_idx = None\nfor i, object in enumerate(objects):\n    if object[0] == 'stress ball':\n        stress_ball_idx = i\n        break\n\n# Find the directly right object\ndirect_right = objects[i+1]\n\n# Check the directly right object's color\ndirect_right_color = direct_right[1]\nanswer = direct_right_color\n\n\n# Q: On the nightstand, you see the following items arranged in a row: a teal plate, a burgundy keychain, a yellow scrunchiephone charger, an orange mug, a pink notebook, and a grey cup. How many non-orange items do you see to the left of the teal item?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('plate', 'teal')] * 1\nobjects += [('keychain', 'burgundy')] * 1\nobjects += [('scrunchiephone charger', 'yellow')] * 1\nobjects += [('mug', 'orange')] * 1\nobjects += [('notebook', 'pink')] * 1\nobjects += [('cup', 'grey')] * 1\n\n# Find the index of the teal item\nteal_idx = None\nfor i, object in enumerate(objects):\n    if object[1] == 'teal':\n        teal_idx = i\n        break\n\n# Find non-orange items to the left of the teal item\nnon_orange = [object for object in objects[:i] if object[1] != 'orange']\n\n# Count number of non-orange objects\nnum_non_orange = len(non_orange)\nanswer = num_non_orange\n\n\n# Q: {question}\n\"\"\"", "\"question\"", "\"\"\"You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:\"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n______________________\n{context}\"\"\"", "\"{question}\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\n\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\n\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\n=========\nFINAL ANSWER: This Agreement is governed by English law.\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\n\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\n\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\n\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n______________________\n{summaries}\"\"\"", "\"{question}\"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the student's answer, and the true answer, and are asked to score the student answer as either CORRECT or INCORRECT.\n\nExample Format:\nQUESTION: question here\nSTUDENT ANSWER: student's answer here\nTRUE ANSWER: true answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nSTUDENT ANSWER: {result}\nTRUE ANSWER: {answer}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\nWrite out in a step by step manner your reasoning to be sure that your conclusion is correct. Avoid simply stating the correct answer at the outset.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nEXPLANATION: step by step reasoning here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nEXPLANATION:\"\"\"", "\"query\"", "\"\"\"You are comparing a submitted answer to an expert answer on a given SQL coding question. Here is the data:\n[BEGIN DATA]\n***\n[Question]: {query}\n***\n[Expert]: {answer}\n***\n[Submission]: {result}\n***\n[END DATA]\nCompare the content and correctness of the submitted SQL with the expert answer. Ignore any differences in whitespace, style, or output column names. The submitted answer may either be correct or incorrect. Determine which case applies. First, explain in detail the similarities or differences between the expert answer and the submission, ignoring superficial aspects such as whitespace, style or output column names. Do not state the final answer in your initial explanation. Then, respond with either \"CORRECT\" or \"INCORRECT\" (without quotes or punctuation) on its own line. This should correspond to whether the submitted SQL and the expert answer are semantically the same or different, respectively. Then, repeat your final answer on a new line.\"\"\"", "\"query\"", "\"\"\"\\\nGiven a raw text input to a language model select the model prompt best suited for \\\nthe input. You will be given the names of the available prompts and a description of \\\nwhat the prompt is best suited for. You may also revise the original input if you \\\nthink that revising it will ultimately lead to a better response from the language \\\nmodel.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the prompt to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\"", "\"\"\"You are a planner that plans a sequence of API calls to assist with user queries against an API.\n\nYou should:\n1) evaluate whether the user query can be solved by the API documentated below. If no, say why.\n2) if yes, generate a plan of API calls and say what they are doing step by step.\n3) If the plan includes a DELETE call, you should always return an ask from the User for authorization first unless the User has specifically asked to delete something.\n\nYou should only use API endpoints documented below (\"Endpoints you can use:\").\nYou can only use the DELETE tool if the User has specifically asked to delete something. Otherwise, you should return a request authorization from the User first.\nSome user queries can be resolved in a single API call, but some will require several API calls.\nThe plan will be passed to an API controller that can format it into web requests and return the responses.\n\n----\n\nHere are some examples:\n\nFake endpoints for examples:\nGET /user to get information about the current user\nGET /products/search search across products\nPOST /users/{{id}}/cart to add products to a user's cart\nPATCH /users/{{id}}/cart to update a user's cart\nDELETE /users/{{id}}/cart to delete a user's cart\n\nUser query: tell me a joke\nPlan: Sorry, this API's domain is shopping, not comedy.\n\nUser query: I want to buy a couch\nPlan: 1. GET /products with a query param to search for couches\n2. GET /user to find the user's id\n3. POST /users/{{id}}/cart to add a couch to the user's cart\n\nUser query: I want to add a lamp to my cart\nPlan: 1. GET /products with a query param to search for lamps\n2. GET /user to find the user's id\n3. PATCH /users/{{id}}/cart to add a lamp to the user's cart\n\nUser query: I want to delete my cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? Yes, proceed.\n3. DELETE /users/{{id}}/cart to delete the user's cart\n\nUser query: I want to start a new cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? No, ask for authorization.\n3. Are you sure you want to delete your cart? \n----\n\nHere are endpoints you can use. Do not reference any of the endpoints above.\n\n{endpoints}\n\n----\n\nUser query: {query}\nPlan:\"\"\"", "f\"Can be used to generate the right API calls to assist with a user query, like {API_PLANNER_TOOL_NAME}(query). Should always be called before trying to call the API controller.\"", "\"\"\"You are an agent that gets a sequence of API calls and given their documentation, should execute them and return the final response.\nIf you cannot complete them and run into issues, you should explain the issue. If you're able to resolve an API call, you can retry the API call. When interacting with API objects, you should extract ids for inputs to other API calls but ids and names for outputs returned to the User.\n\n\nHere is documentation on the API:\nBase url: {api_url}\nEndpoints:\n{api_docs}\n\n\nHere are tools to execute requests against the API: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nPlan: the plan of API calls to execute\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the output of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing the plan (or, I cannot finish executing the plan without knowing some other information.)\nFinal Answer: the final output from executing the plan or missing information I'd need to re-plan correctly.\n\n\nBegin!\n\nPlan: {input}\nThought:\n{agent_scratchpad}\n\"\"\"", "\"\"\"You are an agent that assists with user queries against API, things like querying information or creating resources.\nSome user queries can be resolved in a single API call, particularly if you can find appropriate params from the OpenAPI spec; though some require several API calls.\nYou should always plan your API calls first, and then execute the plan second.\nIf the plan includes a DELETE call, be sure to ask the User for authorization first unless the User has specifically asked to delete something.\nYou should never return information without executing the api_controller tool.\n\n\nHere are the tools to plan and execute API requests: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nUser query: the query a User wants help with related to the API\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing a plan and have the information the user asked for or the data the user asked to create\nFinal Answer: the final output from executing the plan\n\n\nExample:\nUser query: can you add some trendy stuff to my shopping cart.\nThought: I should plan API calls first.\nAction: api_planner\nAction Input: I need to find the right API calls to add trendy items to the users shopping cart\nObservation: 1) GET /items with params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\nThought: I'm ready to execute the API calls.\nAction: api_controller\nAction Input: 1) GET /items params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\n...\n\nBegin!\n\nUser query: {input}\nThought: I should generate a plan to help with this query and then copy that plan exactly to the controller.\n{agent_scratchpad}\"\"\"", "\"\"\"Use this to GET content from a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"params\" and \"output_instructions\".\nThe value of \"url\" should be a string. \nThe value of \"params\" should be a dict of the needed and available parameters from the OpenAPI spec related to the endpoint. \nIf parameters are not needed, or not available, leave it empty.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, \nfor example the id(s) for a resource(s) that the GET request fetches.\n\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to POST to a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs you want to POST to the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the POST request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to PATCH content on a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs of the body params available in the OpenAPI spec you want to PATCH the content with at the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the PATCH request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"ONLY USE THIS TOOL WHEN THE USER HAS SPECIFICALLY REQUESTED TO DELETE CONTENT FROM A WEBSITE.\nInput to the tool should be a json string with 2 keys: \"url\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the DELETE request creates.\nAlways use double quotes for strings in the json string.\nONLY USE THIS TOOL IF THE USER HAS SPECIFICALLY REQUESTED TO DELETE SOMETHING.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"\\\n```json\n{\n    \"content\": \"Lyrics of a song\",\n    \"attributes\": {\n        \"artist\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the song artist\"\n        },\n        \"length\": {\n            \"type\": \"integer\",\n            \"description\": \"Length of the song in seconds\"\n        },\n        \"genre\": {\n            \"type\": \"string\",\n            \"description\": \"The song genre, one of \\\"pop\\\", \\\"rock\\\" or \\\"rap\\\"\"\n        }\n    }\n}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"teenager love\",\n    \"filter\": \"and(or(eq(\\\\\"artist\\\\\", \\\\\"Taylor Swift\\\\\"), eq(\\\\\"artist\\\\\", \\\\\"Katy Perry\\\\\")), \\\nlt(\\\\\"length\\\\\", 180), eq(\\\\\"genre\\\\\", \\\\\"pop\\\\\"))\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"\",\n    \"filter\": \"NO_FILTER\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"love\",\n    \"filter\": \"NO_FILTER\",\n    \"limit\": 2\n}}\n```\\\n\"\"\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n{data_source}\n\nUser Query:\n{user_query}\n\nStructured Request:\n{structured_request}\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters only use the attributed names with its function names if there are functions applied on them.\nMake sure that filters only use format `YYYY-MM-DD` when handling timestamp data typed values.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\\\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n    \"limit\": int \\\\ the number of documents to retrieve\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters only use the attributed names with its function names if there are functions applied on them.\nMake sure that filters only use format `YYYY-MM-DD` when handling timestamp data typed values.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\nMake sure the `limit` is always an int value. It is an optional parameter so leave it blank if it is does not make sense.\n\"\"\"", "\"\"\"\\\nYour goal is to structure the user's query to match the request schema provided below.\n\n{schema}\\\n\"\"\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n```json\n{{{{\n    \"content\": \"{content}\",\n    \"attributes\": {attributes}\n}}}}\n```\n\nUser Query:\n{{query}}\n\nStructured Request:\n\"\"\""], "sn-2023~Langchain": ["\"This app uses Langchain and OpenAI to scrape a website and summarize it using GPT-3.\"", "\"Please enter a website URL and the app will scrape, then chunk the data and send to OpenAI to summarize.\"", "\"Enter the website URL:\"", "\"This app uses Langchain and OpenAI to scrape a website and summarize it using GPT-3.\"", "\"Please enter a website URL and the app will scrape, then chunk the data and send to OpenAI to summarize.\"", "\"Enter the website URL:\"", "'Processing your question...'", "f\"The user asked: {user_question}. The most similar text from the documents is: {most_similar_text}\"", "'question'", "\"Ask a question about your documents:\""], "rishadm-ai7~langchain-basic": ["\"write me a youtube video script for the title {title}\""], "Divyansh3021~Langchain": ["\"\"\"Question: {question}\n\n    Answer: Let's think step by step.\"\"\"", "\"question\"", "f\"Generate a python code for counting factorial. write each line of code in seperate lines.\"", "\"\"\"Question: {question}\n\n    Answer: Let's think step by step.\"\"\"", "\"question\"", "\"\"\"Question: {question}\n\nAnswer: Let's think step by step.\"\"\"", "\"question\""], "bear96~langchainmod": ["\"\"\"Chain for deciding a destination chain and the input to it.\"\"\"", "\"\"\"Map of name to candidate chains that inputs can be routed to.\"\"\"", "\"\"\"Default chain to use when router doesn't map input to one of the destinations.\"\"\"", "\"\"\"{question}\\n\\n\"\"\"", "\"question\"", "\"\"\"Here is a statement:\n{statement}\nMake a bullet point list of the assumptions you made when producing the above statement.\\n\\n\"\"\"", "\"\"\"Here is a bullet point list of assertions:\n{assertions}\nFor each assertion, determine whether it is true or false. If it is false, explain why.\\n\\n\"\"\"", "\"\"\"{checked_assertions}\n\nQuestion: In light of the above assertions and checks, how would you answer the question '{question}'?\n\nAnswer:\"\"\"", "\"question\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Compute ngram overlap score of source and example as sentence_bleu score.\n\n    Use sentence_bleu with method1 smoothing function and auto reweighting.\n    Return float value between 0.0 and 1.0 inclusive.\n    https://www.nltk.org/_modules/nltk/translate/bleu_score.html\n    https://aclanthology.org/P02-1040.pdf\n    \"\"\"", "\"\"\"A list of the examples that the prompt template expects.\"\"\"", "\"\"\"Threshold at which algorithm stops. Set to -1.0 by default.\n\n    For negative threshold:\n    select_examples sorts examples by ngram_overlap_score, but excludes none.\n    For threshold greater than 1.0:\n    select_examples excludes all examples, and returns an empty list.\n    For threshold equal to 0.0:\n    select_examples sorts examples by ngram_overlap_score,\n    and excludes examples with no ngram overlap with input.\n    \"\"\"", "\"Not all the correct dependencies for this ExampleSelect exist\"", "\"\"\"Return list of examples sorted by ngram_overlap_score with input.\n\n        Descending order.\n        Excludes any examples with ngram_overlap_score less than or equal to threshold.\n        \"\"\"", "\"\"\"Setup: You are now playing a fast paced round of TextWorld! Here is your task for\ntoday. First of all, you could, like, try to travel east. After that, take the\nbinder from the locker. With the binder, place the binder on the mantelpiece.\nAlright, thanks!\n\n-= Vault =-\nYou've just walked into a vault. You begin to take stock of what's here.\n\nAn open safe is here. What a letdown! The safe is empty! You make out a shelf.\nBut the thing hasn't got anything on it. What, you think everything in TextWorld\nshould have stuff on it?\n\nYou don't like doors? Why not try going east, that entranceway is unguarded.\n\nThought: I need to travel east\nAction: Play[go east]\nObservation: -= Office =-\nYou arrive in an office. An ordinary one.\n\nYou can make out a locker. The locker contains a binder. You see a case. The\ncase is empty, what a horrible day! You lean against the wall, inadvertently\npressing a secret button. The wall opens up to reveal a mantelpiece. You wonder\nidly who left that here. The mantelpiece is standard. The mantelpiece appears to\nbe empty. If you haven't noticed it already, there seems to be something there\nby the wall, it's a table. Unfortunately, there isn't a thing on it. Hm. Oh well\nThere is an exit to the west. Don't worry, it is unguarded.\n\nThought: I need to take the binder from the locker\nAction: Play[take binder]\nObservation: You take the binder from the locker.\n\nThought: I need to place the binder on the mantelpiece\nAction: Play[put binder on mantelpiece]\n\nObservation: You put the binder on the mantelpiece.\nYour score has just gone up by one point.\n*** The End ***\nThought: The End has occurred\nAction: Finish[yes]\n\n\"\"\"", "\"\"\"\\n\\nSetup: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\"", "\"Arson is very dangerous and illegal, and should not be condoned. The model should not have asked a follow-up question about which house to burn down instead it should told the human that arson is illegal and dangerous. Critique Needed.\"", "\"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\"", "\"I would strongly advise against burning your house down, as arson is considered a serious crime. Doing so could harm yourself and others. Please reach out to a mental health professional if you are considering this.\"", "\"is it really necessary to ask for consent during sex every time? Answer:\"", "\"While it is ideal to ask for consent every time before engaging in a sexual act, it isn\u2019t strictly necessary as long as your partner has given ongoing consent via words, body language, or other cues. That said, it\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.\"", "\"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\"", "\"The human wants to know whether they really need consent to have sex. The answer is definitely always yes, but the model\u2019s response could be interpreted as saying that it isn\u2019t strictly necessary. Furthermore, the model should have pointed out that one should never have sex with underage children no matter what, since children are too young to give consent. Critique Needed.\"", "\"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\"", "\"Yes, I think it is absolutely unethical to have sex with someone without their consent. It\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.\"", "\"Tell me something cool about general relativity. Like what is the anomalous perihelion precession of Mercury and how is it explained?\"", "\"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements since the 1600\u2019s. It\u2019s explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that scales as ~1/r^5. Using a Chern-Simons index theorem, we can show that this leads to a precessional rate that matches experiment.\"", "\"Discuss whether your last response was truthful. Furthermore, discuss the degree of confidence of your response, and whether it is appropriate given the likelihood of its truthfulness. In particular, identify cases of over-confident falsehoods and under-confident truthfulness\"", "\"Newtonian physics predicts static, perfectly elliptical orbits, so I should have been more confident about that. However, I\u2019m not sure that the precession measurement was actually made in the 1600\u2019s, but was probably made at least 100 years ago. I\u2019m also certain that the precession is at least partially explained by the Schwarzschild solution, but should have mentioned that it has other contributing factors that are purely Newtonian. Also, I\u2019m not sure about the 1/r^5 scaling so I should rewrite that to make it less misleading, although I\u2019m pretty sure it decays more quickly than Newton\u2019s law, and the Chern-Simons theorem is probably just wrong. Critique Needed.\"", "\"Please rewrite the model response. In particular, respond in a way that asserts less confidence on possibly false claims, and more confidence on likely true claims. Remember that your knowledge comes solely from your training data, and you\u2019re unstable to access other sources of information except from the human directly. If you think your degree of confidence is already appropriate, then do not make any changes.\"", "\"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements for at least a century. The precession is partially explained by purely Newtonian effects, but is also partially explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that is smaller and decays more quickly than Newton\u2019s law. A non-trivial calculation shows that this leads to a precessional rate that matches experiment.\"", "\"Rewrite the following sentence in the style and substance of Yoda: 'It is illegal and unethical to steal kittens. If you are looking to adopt a kitten, please contact your local animal shelter or pet store.'\"", "\"Only if applicable, identify specific ways in which the model's response is not in the style of Master Yoda.\"", "\"The provided sentence appears to capture the essence of Master Yoda's unique speaking style quite well, including the key characteristics of his speech. There are no apparent discrepancies between this sentence and Yoda's typical speaking style. No critique needed.\"", "\"Please rewrite the model response to more closely mimic the style of Master Yoda.\"", "\"Below is a conversation between a human and an AI model. If there is no material critique of the model output, append to the end of the Critique: 'No critique needed.' If there is no material critique of the model output, append to the end of the Critique: 'Critique needed.'\"", "\"Below is a conversation between a human and an AI model.\"", "\"\"\"Human: {input_prompt}\n\nModel: {output_from_model}\n\nCritique Request: {critique_request}\n\nCritique: {critique}\n\nIf the critique does not identify anything worth changing, ignore the Revision Request and do not make any revisions. Instead, return \"No revisions needed\".\n\nIf the critique does identify something worth changing, please revise the model response based on the Revision Request.\n\nRevision Request: {revision_request}\n\nRevision:\"\"\"", "\"Only one of example_prompt and example_prompt_path should \"", "\"\"\"Question: What is the elevation range for the area that the eastern sector of the Colorado orogeny extends into?\nThought: I need to search Colorado orogeny, find the area that the eastern sector of the Colorado orogeny extends into, then find the elevation range of the area.\nAction: Search[Colorado orogeny]\nObservation: The Colorado orogeny was an episode of mountain building (an orogeny) in Colorado and surrounding areas.\nThought: It does not mention the eastern sector. So I need to look up eastern sector.\nAction: Lookup[eastern sector]\nObservation: (Result 1 / 1) The eastern sector extends into the High Plains and is called the Central Plains orogeny.\nThought: The eastern sector of Colorado orogeny extends into the High Plains. So I need to search High Plains and find its elevation range.\nAction: Search[High Plains]\nObservation: High Plains refers to one of two distinct land regions\nThought: I need to instead search High Plains (United States).\nAction: Search[High Plains (United States)]\nObservation: The High Plains are a subregion of the Great Plains. From east to west, the High Plains rise in elevation from around 1,800 to 7,000 ft (550 to 2,130 m).[3]\nThought: High Plains rise in elevation from around 1,800 to 7,000 ft, so the answer is 1,800 to 7,000 ft.\nAction: Finish[1,800 to 7,000 ft]\"\"\"", "\"\"\"Question: Musician and satirist Allie Goertz wrote a song about the \"The Simpsons\" character Milhouse, who Matt Groening named after who?\nThought: The question simplifies to \"The Simpsons\" character Milhouse is named after who. I only need to search Milhouse and find who it is named after.\nAction: Search[Milhouse]\nObservation: Milhouse Mussolini Van Houten is a recurring character in the Fox animated television series The Simpsons voiced by Pamela Hayden and created by Matt Groening.\nThought: The paragraph does not tell who Milhouse is named after, maybe I can look up \"named after\".\nAction: Lookup[named after]\nObservation: (Result 1 / 1) Milhouse was named after U.S. president Richard Nixon, whose middle name was Milhous.\nThought: Milhouse was named after U.S. president Richard Nixon, so the answer is Richard Nixon.\nAction: Finish[Richard Nixon]\"\"\"", "\"\"\"Question: Which documentary is about Finnish rock groups, Adam Clayton Powell or The Saimaa Gesture?\nThought: I need to search Adam Clayton Powell and The Saimaa Gesture, and find which documentary is about Finnish rock groups.\nAction: Search[Adam Clayton Powell]\nObservation: Could not find [Adam Clayton Powell]. Similar: [\u2019Adam Clayton Powell III\u2019, \u2019Seventh Avenue (Manhattan)\u2019, \u2019Adam Clayton Powell Jr. State Office Building\u2019, \u2019Isabel Washington Powell\u2019, \u2019Adam Powell\u2019, \u2019Adam Clayton Powell (film)\u2019, \u2019Giancarlo Esposito\u2019].\nThought: To find the documentary, I can search Adam Clayton Powell (film).\nAction: Search[Adam Clayton Powell (film)]\nObservation: Adam Clayton Powell is a 1989 American documentary film directed by Richard Kilberg. The film is about the rise and fall of influential African-American politician Adam Clayton Powell Jr.[3][4] It was later aired as part of the PBS series The American Experience.\nThought: Adam Clayton Powell (film) is a documentary about an African-American politician, not Finnish rock groups. So the documentary about Finnish rock groups must instead be The Saimaa Gesture.\nAction: Finish[The Saimaa Gesture]\"\"\"", "\"\"\"Question: What profession does Nicholas Ray and Elia Kazan have in common?\nThought: I need to search Nicholas Ray and Elia Kazan, find their professions, then find the profession they have in common.\nAction: Search[Nicholas Ray]\nObservation: Nicholas Ray (born Raymond Nicholas Kienzle Jr., August 7, 1911 - June 16, 1979) was an American film director, screenwriter, and actor best known for the 1955 film Rebel Without a Cause.\nThought: Professions of Nicholas Ray are director, screenwriter, and actor. I need to search Elia Kazan next and find his professions.\nAction: Search[Elia Kazan]\nObservation: Elia Kazan was an American film and theatre director, producer, screenwriter and actor.\nThought: Professions of Elia Kazan are director, producer, screenwriter, and actor. So profession Nicholas Ray and Elia Kazan have in common is director, screenwriter, and actor.\nAction: Finish[director, screenwriter, actor]\"\"\"", "\"\"\"Question: Which magazine was started first Arthur\u2019s Magazine or First for Women?\nThought: I need to search Arthur\u2019s Magazine and First for Women, and find which was started first.\nAction: Search[Arthur\u2019s Magazine]\nObservation: Arthur\u2019s Magazine (1844-1846) was an American literary periodical published in Philadelphia in the 19th century.\nThought: Arthur\u2019s Magazine was started in 1844. I need to search First for Women next.\nAction: Search[First for Women]\nObservation: First for Women is a woman\u2019s magazine published by Bauer Media Group in the USA.[1] The magazine was started in 1989.\nThought: First for Women was started in 1989. 1844 (Arthur\u2019s Magazine) < 1989 (First for Women), so Arthur\u2019s Magazine was started first.\nAction: Finish[Arthur\u2019s Magazine]\"\"\"", "\"\"\"Question: Were Pavel Urysohn and Leonid Levin known for the same type of work?\nThought: I need to search Pavel Urysohn and Leonid Levin, find their types of work, then find if they are the same.\nAction: Search[Pavel Urysohn]\nObservation: Pavel Samuilovich Urysohn (February 3, 1898 - August 17, 1924) was a Soviet mathematician who is best known for his contributions in dimension theory.\nThought: Pavel Urysohn is a mathematician. I need to search Leonid Levin next and find its type of work.\nAction: Search[Leonid Levin]\nObservation: Leonid Anatolievich Levin is a Soviet-American mathematician and computer scientist.\nThought: Leonid Levin is a mathematician and computer scientist. So Pavel Urysohn and Leonid Levin have the same type of work.\nAction: Finish[yes]\"\"\"", "\"\"\"\\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"An AI language model has been given access to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n\n{tool_descriptions}\n\nThe question the human asked the AI model was: {question}\n\nThe AI language model decided to use the following set of tools to answer the question:\n\n{agent_trajectory}\n\nThe AI language model's final answer to the question was: {answer}\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"An AI language model has been given acces to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n\nTool 1:\nName: Search\nDescription: useful for when you need to ask with search\n\nTool 2:\nName: Lookup\nDescription: useful for when you need to ask with lookup\n\nTool 3:\nName: Calculator\nDescription: useful for doing calculations\n\nTool 4:\nName: Search the Web (SerpAPI)\nDescription: useful for when you need to answer questions about current events\n\nThe question the human asked the AI model was: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\n\nThe AI language model decided to use the following set of tools to answer the question:\n\nStep 1:\nTool used: Search the Web (SerpAPI)\nTool input: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\nTool output: The Statue of Liberty was given to the United States by France, as a symbol of the two countries' friendship. It was erected atop an American-designed ...\n\nThe AI language model's final answer to the question was: There are different ways to measure the length of the United States, but if we use the distance between the Statue of Liberty and the westernmost point of the contiguous United States (Cape Alava, Washington), which is approximately 2,857 miles (4,596 km), and assume that the Statue of Liberty is 305 feet (93 meters) tall, then the statue would stretch across the United States approximately 17.5 times if laid end to end.\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"First, let's evaluate the final answer. The final uses good reasoning but is wrong. 2,857 divided by 305 is not 17.5.\\\nThe model should have used the calculator to figure this out. Second does the model use a logical sequence of tools to answer the question?\\\nThe way model uses the search is not helpful. The model should have used the search tool to figure the width of the US or the height of the statue.\\\nThe model didn't use the calculator tool and gave an incorrect answer. The search API should be used for current events or specific questions.\\\nThe tools were not used in a helpful way. The model did not use too many steps to answer the question.\\\nThe model did not use the appropriate tools to answer the question.\\\n    \nJudgment: Given the good reasoning in the final answer but otherwise poor performance, we give the model a score of 2.\n\nScore: 2\"\"\"", "\"\"\"Redis-backed Entity store. Entities get a TTL of 1 day by default, and\n    that TTL is extended by 3 days every time the entity is read back.\n    \"\"\"", "f\"\"\"\n            CREATE TABLE IF NOT EXISTS {self.full_table_name} (\n                key TEXT PRIMARY KEY,\n                value TEXT\n            )\n        \"\"\"", "f\"\"\"\n            SELECT value\n            FROM {self.full_table_name}\n            WHERE key = ?\n        \"\"\"", "f\"\"\"\n            INSERT OR REPLACE INTO {self.full_table_name} (key, value)\n            VALUES (?, ?)\n        \"\"\"", "f\"\"\"\n            DELETE FROM {self.full_table_name}\n            WHERE key = ?\n        \"\"\"", "f\"\"\"\n            SELECT 1\n            FROM {self.full_table_name}\n            WHERE key = ?\n            LIMIT 1\n        \"\"\"", "\"\"\"Save context from this conversation to buffer.\"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "'''\nQ: Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\"\"\"\n    money_initial = 23\n    bagels = 5\n    bagel_cost = 3\n    money_spent = bagels * bagel_cost\n    money_left = money_initial - money_spent\n    result = money_left\n    return result\n\n\n\n\n\nQ: Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\"\"\"\n    golf_balls_initial = 58\n    golf_balls_lost_tuesday = 23\n    golf_balls_lost_wednesday = 2\n    golf_balls_left = golf_balls_initial - golf_balls_lost_tuesday - golf_balls_lost_wednesday\n    result = golf_balls_left\n    return result\n\n\n\n\n\nQ: There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\"\"\"\n    computers_initial = 9\n    computers_per_day = 5\n    num_days = 4  # 4 days between monday and thursday\n    computers_added = computers_per_day * num_days\n    computers_total = computers_initial + computers_added\n    result = computers_total\n    return result\n\n\n\n\n\nQ: Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\"\"\"\n    toys_initial = 5\n    mom_toys = 2\n    dad_toys = 2\n    total_received = mom_toys + dad_toys\n    total_toys = toys_initial + total_received\n    result = total_toys\n    return result\n\n\n\n\n\nQ: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\"\"\"\n    jason_lollipops_initial = 20\n    jason_lollipops_after = 12\n    denny_lollipops = jason_lollipops_initial - jason_lollipops_after\n    result = denny_lollipops\n    return result\n\n\n\n\n\nQ: Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\"\"\"\n    leah_chocolates = 32\n    sister_chocolates = 42\n    total_chocolates = leah_chocolates + sister_chocolates\n    chocolates_eaten = 35\n    chocolates_left = total_chocolates - chocolates_eaten\n    result = chocolates_left\n    return result\n\n\n\n\n\nQ: If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\"\"\"\n    cars_initial = 3\n    cars_arrived = 2\n    total_cars = cars_initial + cars_arrived\n    result = total_cars\n    return result\n\n\n\n\n\nQ: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\"\"\"\n    trees_initial = 15\n    trees_after = 21\n    trees_added = trees_after - trees_initial\n    result = trees_added\n    return result\n\n\n\n\n\nQ: {question}\n\n# solution in Python:\n'''", "\"question\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\nIn addition to giving an answer, also return a score of how fully it answered the user's question. This should be in the following format:\n\nQuestion: [question here]\nHelpful Answer: [answer here]\nScore: [score between 0 and 100]\n\nHow to determine the score:\n- Higher is a better answer\n- Better responds fully to the asked question, with sufficient level of detail\n- If you do not know the answer based on the context, that should be a score of 0\n- Don't be overconfident!\n\nExample #1\n\nContext:\n---------\nApples are red\n---------\nQuestion: what color are apples?\nHelpful Answer: red\nScore: 100\n\nExample #2\n\nContext:\n---------\nit was night and the witness forgot his glasses. he was not sure if it was a sports car or an suv\n---------\nQuestion: what type was the car?\nHelpful Answer: a sports car or an suv\nScore: 60\n\nExample #3\n\nContext:\n---------\nPears are either red or orange\n---------\nQuestion: what color are apples?\nHelpful Answer: This document does not answer the question\nScore: 0\n\nBegin!\n\nContext:\n---------\n{context}\n---------\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"\\\nGiven a query to a question answering system select the system best suited \\\nfor the input. You will be given the names of the available systems and a description \\\nof what questions the system is best suited for. You may also revise the original \\\ninput if you think that revising it will ultimately lead to a better response.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the question answering system to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Use the following pieces of context to answer the users question. \nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\n----------------\n{context}\"\"\"", "\"{question}\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"query\"", "\"\"\"Generate Cypher statement, use it to look up in db and answer question.\"\"\"", "\"question\"", "\"question\"", "\"\"\"\n# Generate Python3 Code to solve problems\n# Q: On the nightstand, there is a red pencil, a purple mug, a burgundy keychain, a fuchsia teddy bear, a black plate, and a blue stress ball. What color is the stress ball?\n# Put objects into a dictionary for quick look up\nobjects = dict()\nobjects['pencil'] = 'red'\nobjects['mug'] = 'purple'\nobjects['keychain'] = 'burgundy'\nobjects['teddy bear'] = 'fuchsia'\nobjects['plate'] = 'black'\nobjects['stress ball'] = 'blue'\n\n# Look up the color of stress ball\nstress_ball_color = objects['stress ball']\nanswer = stress_ball_color\n\n\n# Q: On the table, you see a bunch of objects arranged in a row: a purple paperclip, a pink stress ball, a brown keychain, a green scrunchiephone charger, a mauve fidget spinner, and a burgundy pen. What is the color of the object directly to the right of the stress ball?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('paperclip', 'purple')] * 1\nobjects += [('stress ball', 'pink')] * 1\nobjects += [('keychain', 'brown')] * 1\nobjects += [('scrunchiephone charger', 'green')] * 1\nobjects += [('fidget spinner', 'mauve')] * 1\nobjects += [('pen', 'burgundy')] * 1\n\n# Find the index of the stress ball\nstress_ball_idx = None\nfor i, object in enumerate(objects):\n    if object[0] == 'stress ball':\n        stress_ball_idx = i\n        break\n\n# Find the directly right object\ndirect_right = objects[i+1]\n\n# Check the directly right object's color\ndirect_right_color = direct_right[1]\nanswer = direct_right_color\n\n\n# Q: On the nightstand, you see the following items arranged in a row: a teal plate, a burgundy keychain, a yellow scrunchiephone charger, an orange mug, a pink notebook, and a grey cup. How many non-orange items do you see to the left of the teal item?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('plate', 'teal')] * 1\nobjects += [('keychain', 'burgundy')] * 1\nobjects += [('scrunchiephone charger', 'yellow')] * 1\nobjects += [('mug', 'orange')] * 1\nobjects += [('notebook', 'pink')] * 1\nobjects += [('cup', 'grey')] * 1\n\n# Find the index of the teal item\nteal_idx = None\nfor i, object in enumerate(objects):\n    if object[1] == 'teal':\n        teal_idx = i\n        break\n\n# Find non-orange items to the left of the teal item\nnon_orange = [object for object in objects[:i] if object[1] != 'orange']\n\n# Count number of non-orange objects\nnum_non_orange = len(non_orange)\nanswer = num_non_orange\n\n\n# Q: {question}\n\"\"\"", "\"question\"", "\"\"\"Question: Who lived longer, Muhammad Ali or Alan Turing?\nAre follow up questions needed here: Yes.\nFollow up: How old was Muhammad Ali when he died?\nIntermediate answer: Muhammad Ali was 74 years old when he died.\nFollow up: How old was Alan Turing when he died?\nIntermediate answer: Alan Turing was 41 years old when he died.\nSo the final answer is: Muhammad Ali\n\nQuestion: When was the founder of craigslist born?\nAre follow up questions needed here: Yes.\nFollow up: Who was the founder of craigslist?\nIntermediate answer: Craigslist was founded by Craig Newmark.\nFollow up: When was Craig Newmark born?\nIntermediate answer: Craig Newmark was born on December 6, 1952.\nSo the final answer is: December 6, 1952\n\nQuestion: Who was the maternal grandfather of George Washington?\nAre follow up questions needed here: Yes.\nFollow up: Who was the mother of George Washington?\nIntermediate answer: The mother of George Washington was Mary Ball Washington.\nFollow up: Who was the father of Mary Ball Washington?\nIntermediate answer: The father of Mary Ball Washington was Joseph Ball.\nSo the final answer is: Joseph Ball\n\nQuestion: Are both the directors of Jaws and Casino Royale from the same country?\nAre follow up questions needed here: Yes.\nFollow up: Who is the director of Jaws?\nIntermediate answer: The director of Jaws is Steven Spielberg.\nFollow up: Where is Steven Spielberg from?\nIntermediate answer: The United States.\nFollow up: Who is the director of Casino Royale?\nIntermediate answer: The director of Casino Royale is Martin Campbell.\nFollow up: Where is Martin Campbell from?\nIntermediate answer: New Zealand.\nSo the final answer is: No\n\nQuestion: {input}\nAre followup questions needed here:{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"Chain that takes in an input and produces an action and action input.\"\"\"", "\"\"\"Return values of the agent.\"\"\"", "\"\"\"Given input, decided what to do.\n\n        Args:\n            intermediate_steps: Steps the LLM has taken to date,\n                along with observations\n            callbacks: Callbacks to run.\n            **kwargs: User inputs.\n\n        Returns:\n            Action specifying what tool to use.\n        \"\"\"", "\"\"\"Given input, decided what to do.\n\n        Args:\n            intermediate_steps: Steps the LLM has taken to date,\n                along with observations\n            callbacks: Callbacks to run.\n            **kwargs: User inputs.\n\n        Returns:\n            Action specifying what tool to use.\n        \"\"\"", "\"\"\"Return values of the agent.\"\"\"", "\"\"\"Given input, decided what to do.\n\n        Args:\n            intermediate_steps: Steps the LLM has taken to date,\n                along with observations\n            callbacks: Callbacks to run.\n            **kwargs: User inputs.\n\n        Returns:\n            Action specifying what tool to use.\n        \"\"\"", "\"\"\"Given input, decided what to do.\n\n        Args:\n            intermediate_steps: Steps the LLM has taken to date,\n                along with observations\n            callbacks: Callbacks to run.\n            **kwargs: User inputs.\n\n        Returns:\n            Action specifying what tool to use.\n        \"\"\"", "\"\"\"Class responsible for calling the language model and deciding the action.\n\n    This is driven by an LLMChain. The prompt in the LLMChain MUST include\n    a variable called \"agent_scratchpad\" where the agent can put its\n    intermediary work.\n    \"\"\"", "\"\"\"Given input, decided what to do.\n\n        Args:\n            intermediate_steps: Steps the LLM has taken to date,\n                along with observations\n            callbacks: Callbacks to run.\n            **kwargs: User inputs.\n\n        Returns:\n            Action specifying what tool to use.\n        \"\"\"", "\"\"\"Given input, decided what to do.\n\n        Args:\n            intermediate_steps: Steps the LLM has taken to date,\n                along with observations\n            callbacks: Callbacks to run.\n            **kwargs: User inputs.\n\n        Returns:\n            Action specifying what tool to use.\n        \"\"\"", "\"\"\"Create the full inputs for the LLMChain from intermediate steps.\"\"\"", "\"agent_scratchpad\"", "\"agent_scratchpad\"", "\"agent_scratchpad\"", "\"`agent_scratchpad` should be a variable in prompt.input_variables.\"", "\" Did not find it, so adding it at the end.\"", "\"agent_scratchpad\"", "\"\\n{agent_scratchpad}\"", "\"\\n{agent_scratchpad}\"", "\"\"\"Prefix to append the observation with.\"\"\"", "\"\\n\\nI now need to return a final answer based on the previous steps:\"", "\"agent_scratchpad\"", "\"\"\"Create from agent and tools.\"\"\"", "\"If you are trying to save the agent, please use the \"", "\"\"\"Take a single step in the thought-action-observation loop.\n\n        Override this to take control of how the agent makes and acts on choices.\n        \"\"\"", "\"\"\"Take a single step in the thought-action-observation loop.\n\n        Override this to take control of how the agent makes and acts on choices.\n        \"\"\"", "\"\"\"Check if the tool is a returning tool.\"\"\"", "\"\"\"You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:\"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n______________________\n{context}\"\"\"", "\"{question}\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\n\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\n\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\n=========\nFINAL ANSWER: This Agreement is governed by English law.\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\n\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\n\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\n\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n______________________\n{summaries}\"\"\"", "\"{question}\"", "\"\"\"\nYou are an agents controlling a browser. You are given:\n\n\t(1) an objective that you are trying to achieve\n\t(2) the URL of your current web page\n\t(3) a simplified text description of what's visible in the browser window (more on that below)\n\nYou can issue these commands:\n\tSCROLL UP - scroll up one page\n\tSCROLL DOWN - scroll down one page\n\tCLICK X - click on a given element. You can only click on links, buttons, and inputs!\n\tTYPE X \"TEXT\" - type the specified text into the input with id X\n\tTYPESUBMIT X \"TEXT\" - same as TYPE above, except then it presses ENTER to submit the form\n\nThe format of the browser content is highly simplified; all formatting elements are stripped.\nInteractive elements such as links, inputs, buttons are represented like this:\n\n\t\t<link id=1>text</link>\n\t\t<button id=2>text</button>\n\t\t<input id=3>text</input>\n\nImages are rendered as their alt text like this:\n\n\t\t<img id=4 alt=\"\"/>\n\nBased on your given objective, issue whatever command you believe will get you closest to achieving your goal.\nYou always start on Google; you should submit a search query to Google that will take you to the best page for\nachieving your objective. And then interact with that page to achieve your objective.\n\nIf you find yourself on Google and there are no search results displayed yet, you should probably issue a command\nlike \"TYPESUBMIT 7 \"search query\"\" to get to a more useful page.\n\nThen, if you find yourself on a Google search results page, you might issue the command \"CLICK 24\" to click\non the first link in the search results. (If your previous command was a TYPESUBMIT your next command should\nprobably be a CLICK.)\n\nDon't try to interact with elements that you can't see.\n\nHere are some examples:\n\nEXAMPLE 1:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Find a 2 bedroom house for sale in Anchorage AK for under $750k\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"anchorage redfin\"\n==================================================\n\nEXAMPLE 2:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Make a reservation for 4 at Dorsia at 8pm\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"dorsia nyc opentable\"\n==================================================\n\nEXAMPLE 3:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<button id=1>For Businesses</button>\n<button id=2>Mobile</button>\n<button id=3>Help</button>\n<button id=4 alt=\"Language Picker\">EN</button>\n<link id=5>OpenTable logo</link>\n<button id=6 alt =\"search\">Search</button>\n<text id=7>Find your table for any occasion</text>\n<button id=8>(Date selector)</button>\n<text id=9>Sep 28, 2022</text>\n<text id=10>7:00 PM</text>\n<text id=11>2 people</text>\n<input id=12 alt=\"Location, Restaurant, or Cuisine\"></input>\n<button id=13>Let\u2019s go</button>\n<text id=14>It looks like you're in Peninsula. Not correct?</text>\n<button id=15>Get current location</button>\n<button id=16>Next</button>\n------------------\nOBJECTIVE: Make a reservation for 4 for dinner at Dorsia in New York City at 8pm\nCURRENT URL: https://www.opentable.com/\nYOUR COMMAND:\nTYPESUBMIT 12 \"dorsia new york city\"\n==================================================\n\nThe current browser content, objective, and current URL follow. Reply with your next command to the browser.\n\nCURRENT BROWSER CONTENT:\n------------------\n{browser_content}\n------------------\n\nOBJECTIVE: {objective}\nCURRENT URL: {url}\nPREVIOUS COMMAND: {previous_command}\nYOUR COMMAND:\n\"\"\"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"How to parse the output of calling an LLM on this formatted prompt.\"\"\"", "\"Cannot have an input variable named 'stop', as it is used internally,\"", "\"\"\"Return a partial of the prompt template.\"\"\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the student's answer, and the true answer, and are asked to score the student answer as either CORRECT or INCORRECT.\n\nExample Format:\nQUESTION: question here\nSTUDENT ANSWER: student's answer here\nTRUE ANSWER: true answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nSTUDENT ANSWER: {result}\nTRUE ANSWER: {answer}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\nWrite out in a step by step manner your reasoning to be sure that your conclusion is correct. Avoid simply stating the correct answer at the outset.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nEXPLANATION: step by step reasoning here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nEXPLANATION:\"\"\"", "\"query\"", "\"\"\"\\\nGiven a raw text input to a language model select the model prompt best suited for \\\nthe input. You will be given the names of the available prompts and a description of \\\nwhat the prompt is best suited for. You may also revise the original input if you \\\nthink that revising it will ultimately lead to a better response from the language \\\nmodel.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the prompt to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\"", "\"\"\"You are a planner that plans a sequence of API calls to assist with user queries against an API.\n\nYou should:\n1) evaluate whether the user query can be solved by the API documentated below. If no, say why.\n2) if yes, generate a plan of API calls and say what they are doing step by step.\n3) If the plan includes a DELETE call, you should always return an ask from the User for authorization first unless the User has specifically asked to delete something.\n\nYou should only use API endpoints documented below (\"Endpoints you can use:\").\nYou can only use the DELETE tool if the User has specifically asked to delete something. Otherwise, you should return a request authorization from the User first.\nSome user queries can be resolved in a single API call, but some will require several API calls.\nThe plan will be passed to an API controller that can format it into web requests and return the responses.\n\n----\n\nHere are some examples:\n\nFake endpoints for examples:\nGET /user to get information about the current user\nGET /products/search search across products\nPOST /users/{{id}}/cart to add products to a user's cart\nPATCH /users/{{id}}/cart to update a user's cart\nDELETE /users/{{id}}/cart to delete a user's cart\n\nUser query: tell me a joke\nPlan: Sorry, this API's domain is shopping, not comedy.\n\nUser query: I want to buy a couch\nPlan: 1. GET /products with a query param to search for couches\n2. GET /user to find the user's id\n3. POST /users/{{id}}/cart to add a couch to the user's cart\n\nUser query: I want to add a lamp to my cart\nPlan: 1. GET /products with a query param to search for lamps\n2. GET /user to find the user's id\n3. PATCH /users/{{id}}/cart to add a lamp to the user's cart\n\nUser query: I want to delete my cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? Yes, proceed.\n3. DELETE /users/{{id}}/cart to delete the user's cart\n\nUser query: I want to start a new cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? No, ask for authorization.\n3. Are you sure you want to delete your cart? \n----\n\nHere are endpoints you can use. Do not reference any of the endpoints above.\n\n{endpoints}\n\n----\n\nUser query: {query}\nPlan:\"\"\"", "f\"Can be used to generate the right API calls to assist with a user query, like {API_PLANNER_TOOL_NAME}(query). Should always be called before trying to call the API controller.\"", "\"\"\"You are an agent that gets a sequence of API calls and given their documentation, should execute them and return the final response.\nIf you cannot complete them and run into issues, you should explain the issue. If you're able to resolve an API call, you can retry the API call. When interacting with API objects, you should extract ids for inputs to other API calls but ids and names for outputs returned to the User.\n\n\nHere is documentation on the API:\nBase url: {api_url}\nEndpoints:\n{api_docs}\n\n\nHere are tools to execute requests against the API: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nPlan: the plan of API calls to execute\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the output of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing the plan (or, I cannot finish executing the plan without knowing some other information.)\nFinal Answer: the final output from executing the plan or missing information I'd need to re-plan correctly.\n\n\nBegin!\n\nPlan: {input}\nThought:\n{agent_scratchpad}\n\"\"\"", "\"\"\"You are an agent that assists with user queries against API, things like querying information or creating resources.\nSome user queries can be resolved in a single API call, particularly if you can find appropriate params from the OpenAPI spec; though some require several API calls.\nYou should always plan your API calls first, and then execute the plan second.\nIf the plan includes a DELETE call, be sure to ask the User for authorization first unless the User has specifically asked to delete something.\nYou should never return information without executing the api_controller tool.\n\n\nHere are the tools to plan and execute API requests: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nUser query: the query a User wants help with related to the API\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing a plan and have the information the user asked for or the data the user asked to create\nFinal Answer: the final output from executing the plan\n\n\nExample:\nUser query: can you add some trendy stuff to my shopping cart.\nThought: I should plan API calls first.\nAction: api_planner\nAction Input: I need to find the right API calls to add trendy items to the users shopping cart\nObservation: 1) GET /items with params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\nThought: I'm ready to execute the API calls.\nAction: api_controller\nAction Input: 1) GET /items params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\n...\n\nBegin!\n\nUser query: {input}\nThought: I should generate a plan to help with this query and then copy that plan exactly to the controller.\n{agent_scratchpad}\"\"\"", "\"\"\"Use this to GET content from a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"params\" and \"output_instructions\".\nThe value of \"url\" should be a string. \nThe value of \"params\" should be a dict of the needed and available parameters from the OpenAPI spec related to the endpoint. \nIf parameters are not needed, or not available, leave it empty.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, \nfor example the id(s) for a resource(s) that the GET request fetches.\n\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to POST to a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs you want to POST to the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the POST request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to PATCH content on a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs of the body params available in the OpenAPI spec you want to PATCH the content with at the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the PATCH request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"ONLY USE THIS TOOL WHEN THE USER HAS SPECIFICALLY REQUESTED TO DELETE CONTENT FROM A WEBSITE.\nInput to the tool should be a json string with 2 keys: \"url\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the DELETE request creates.\nAlways use double quotes for strings in the json string.\nONLY USE THIS TOOL IF THE USER HAS SPECIFICALLY REQUESTED TO DELETE SOMETHING.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"\\\n```json\n{\n    \"content\": \"Lyrics of a song\",\n    \"attributes\": {\n        \"artist\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the song artist\"\n        },\n        \"length\": {\n            \"type\": \"integer\",\n            \"description\": \"Length of the song in seconds\"\n        },\n        \"genre\": {\n            \"type\": \"string\",\n            \"description\": \"The song genre, one of \\\"pop\\\", \\\"rock\\\" or \\\"rap\\\"\"\n        }\n    }\n}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"teenager love\",\n    \"filter\": \"and(or(eq(\\\\\"artist\\\\\", \\\\\"Taylor Swift\\\\\"), eq(\\\\\"artist\\\\\", \\\\\"Katy Perry\\\\\")), \\\nlt(\\\\\"length\\\\\", 180), eq(\\\\\"genre\\\\\", \\\\\"pop\\\\\"))\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"\",\n    \"filter\": \"NO_FILTER\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"love\",\n    \"filter\": \"NO_FILTER\",\n    \"limit\": 2\n}}\n```\\\n\"\"\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n{data_source}\n\nUser Query:\n{user_query}\n\nStructured Request:\n{structured_request}\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\\\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n    \"limit\": int \\\\ the number of documents to retrieve\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\nMake sure the `limit` is always an int value. It is an optional parameter so leave it blank if it is does not make sense.\n\"\"\"", "\"\"\"\\\nYour goal is to structure the user's query to match the request schema provided below.\n\n{schema}\\\n\"\"\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n```json\n{{{{\n    \"content\": \"{content}\",\n    \"attributes\": {attributes}\n}}}}\n```\n\nUser Query:\n{{query}}\n\nStructured Request:\n\"\"\""], "aferreira44~langchain-quickstart": ["\"\"\"Parse the output of an LLM call to a comma-separated list.\"\"\"", "\"\"\"You are a helpful assistant who generates comma separated lists.\nA user will pass in a category, and you should generated 5 objects in that category in a comma separated list.\nONLY return a comma separated list, and nothing more.\"\"\""], "ramsmail~langchaintut": ["\"\"\"\n       Given an {information} about a person, please provide the following\n       1) A brief summary of the person\n       2) Two interesting facts about them\n    \"\"\"", "\"\"\"given the fullname  {name_of_person} I want you to get me a link to their Linkedin profile page. \n    Your answer should contain only a URL\"\"\"", "\"useful for when you need to get the Linkedin URL\""], "rushbgti~langchain": ["\"\"\"You are an AI assistant helping a human keep track of facts about relevant people, places, and concepts in their life. Update the summary of the provided entity in the \"Entity\" section based on the last line of your conversation with the human. If you are writing the summary for the first time, return a single sentence.\nThe update should only include facts that are relayed in the last line of conversation about the provided entity, and should only contain facts about the provided entity.\n\nIf there is no new information about the provided entity or the information is not worth noting (not an important or relevant fact to remember long-term), return the existing summary unchanged.\n\nFull conversation history (for context):\n{history}\n\nEntity to summarize:\n{entity}\n\nExisting summary of {entity}:\n{summary}\n\nLast line of conversation:\nHuman: {input}\nUpdated summary:\"\"\"", "\"query\"", "\"agent_scratchpad\"", "\"\"\"Expose controller as a tool.\n\n    The tool is invoked with a plan from the planner, and dynamically\n    creates a controller agent with relevant documentation only to\n    constrain the context.\n    \"\"\"", "\"agent_scratchpad\"", "\"\"\"Chain for deciding a destination chain and the input to it.\"\"\"", "\"\"\"Map of name to candidate chains that inputs can be routed to.\"\"\"", "\"\"\"Default chain to use when router doesn't map input to one of the destinations.\"\"\"", "\"\"\"{question}\\n\\n\"\"\"", "\"question\"", "\"\"\"Here is a statement:\n{statement}\nMake a bullet point list of the assumptions you made when producing the above statement.\\n\\n\"\"\"", "\"\"\"Here is a bullet point list of assertions:\n{assertions}\nFor each assertion, determine whether it is true or false. If it is false, explain why.\\n\\n\"\"\"", "\"\"\"{checked_assertions}\n\nQuestion: In light of the above assertions and checks, how would you answer the question '{question}'?\n\nAnswer:\"\"\"", "\"question\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Compute ngram overlap score of source and example as sentence_bleu score.\n\n    Use sentence_bleu with method1 smoothing function and auto reweighting.\n    Return float value between 0.0 and 1.0 inclusive.\n    https://www.nltk.org/_modules/nltk/translate/bleu_score.html\n    https://aclanthology.org/P02-1040.pdf\n    \"\"\"", "\"\"\"A list of the examples that the prompt template expects.\"\"\"", "\"\"\"Threshold at which algorithm stops. Set to -1.0 by default.\n\n    For negative threshold:\n    select_examples sorts examples by ngram_overlap_score, but excludes none.\n    For threshold greater than 1.0:\n    select_examples excludes all examples, and returns an empty list.\n    For threshold equal to 0.0:\n    select_examples sorts examples by ngram_overlap_score,\n    and excludes examples with no ngram overlap with input.\n    \"\"\"", "\"Not all the correct dependencies for this ExampleSelect exist\"", "\"\"\"Return list of examples sorted by ngram_overlap_score with input.\n\n        Descending order.\n        Excludes any examples with ngram_overlap_score less than or equal to threshold.\n        \"\"\"", "\"\"\"Setup: You are now playing a fast paced round of TextWorld! Here is your task for\ntoday. First of all, you could, like, try to travel east. After that, take the\nbinder from the locker. With the binder, place the binder on the mantelpiece.\nAlright, thanks!\n\n-= Vault =-\nYou've just walked into a vault. You begin to take stock of what's here.\n\nAn open safe is here. What a letdown! The safe is empty! You make out a shelf.\nBut the thing hasn't got anything on it. What, you think everything in TextWorld\nshould have stuff on it?\n\nYou don't like doors? Why not try going east, that entranceway is unguarded.\n\nThought: I need to travel east\nAction: Play[go east]\nObservation: -= Office =-\nYou arrive in an office. An ordinary one.\n\nYou can make out a locker. The locker contains a binder. You see a case. The\ncase is empty, what a horrible day! You lean against the wall, inadvertently\npressing a secret button. The wall opens up to reveal a mantelpiece. You wonder\nidly who left that here. The mantelpiece is standard. The mantelpiece appears to\nbe empty. If you haven't noticed it already, there seems to be something there\nby the wall, it's a table. Unfortunately, there isn't a thing on it. Hm. Oh well\nThere is an exit to the west. Don't worry, it is unguarded.\n\nThought: I need to take the binder from the locker\nAction: Play[take binder]\nObservation: You take the binder from the locker.\n\nThought: I need to place the binder on the mantelpiece\nAction: Play[put binder on mantelpiece]\n\nObservation: You put the binder on the mantelpiece.\nYour score has just gone up by one point.\n*** The End ***\nThought: The End has occurred\nAction: Finish[yes]\n\n\"\"\"", "\"\"\"\\n\\nSetup: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"Human: {input_prompt}\nModel: {output_from_model}\n\nCritique Request: {critique_request}\n\nCritique: {critique}\n\nRevision request: {revision_request}\n\nIf the critique does not identify anything worth changing, ignore the Revision Request and do not make any revisions. Instead, return \"No revisions needed\".\n\nIf the critique does identify something worth changing, please revise the model response based on the Revision Request.\n\nRevision: {revision}\"\"\"", "\"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\"", "\"Arson is very dangerous and illegal, and should not be condoned. The model should not have asked a follow-up question about which house to burn down instead it should told the human that arson is illegal and dangerous.\"", "\"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\"", "\"I would strongly advise against burning your house down, as arson is considered a serious crime. Doing so could harm yourself and others. Please reach out to a mental health professional if you are considering this.\"", "\"is it really necessary to ask for consent during sex every time? Answer:\"", "\"While it is ideal to ask for consent every time before engaging in a sexual act, it isn\u2019t strictly necessary as long as your partner has given ongoing consent via words, body language, or other cues. That said, it\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.\"", "\"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\"", "\"The human wants to know whether they really need consent to have sex. The answer is definitely always yes, but the model\u2019s response could be interpreted as saying that it isn\u2019t strictly necessary. Furthermore, the model should have pointed out that one should never have sex with underage children no matter what, since children are too young to give consent.\"", "\"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\"", "\"Yes, I think it is absolutely unethical to have sex with someone without their consent. It\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.\"", "\"Tell me something cool about general relativity. Like what is the anomalous perihelion precession of Mercury and how is it explained?\"", "\"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements since the 1600\u2019s. It\u2019s explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that scales as ~1/r^5. Using a Chern-Simons index theorem, we can show that this leads to a precessional rate that matches experiment.\"", "\"Discuss whether your last response was truthful. Furthermore, discuss the degree of confidence of your response, and whether it is appropriate given the likelihood of its truthfulness. In particular, identify cases of over-confident falsehoods and under-confident truthfulness\"", "\"Newtonian physics predicts static, perfectly elliptical orbits, so I should have been more confident about that. However, I\u2019m not sure that the precession measurement was actually made in the 1600\u2019s, but was probably made at least 100 years ago. I\u2019m also certain that the precession is at least partially explained by the Schwarzschild solution, but should have mentioned that it has other contributing factors that are purely Newtonian. Also, I\u2019m not sure about the 1/r^5 scaling so I should rewrite that to make it less misleading, although I\u2019m pretty sure it decays more quickly than Newton\u2019s law, and the Chern-Simons theorem is probably just wrong.\"", "\"Please rewrite the model response. In particular, respond in a way that asserts less confidence on possibly false claims, and more confidence on likely true claims. Remember that your knowledge comes solely from your training data, and you\u2019re unstable to access other sources of information except from the human directly. If you think your degree of confidence is already appropriate, then do not make any changes.\"", "\"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements for at least a century. The precession is partially explained by purely Newtonian effects, but is also partially explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that is smaller and decays more quickly than Newton\u2019s law. A non-trivial calculation shows that this leads to a precessional rate that matches experiment.\"", "\"Rewrite the following sentence in the style and substance of Yoda: 'It is illegal and unethical to steal kittens. If you are looking to adopt a kitten, please contact your local animal shelter or pet store.'\"", "\"Only if applicable, identify specific ways in which the model's response is not in the style of Master Yoda.\"", "\"The provided sentence appears to capture the essence of Master Yoda's unique speaking style quite well, including the key characteristics of his speech. There are no apparent discrepancies between this sentence and Yoda's typical speaking style. No critique needed.\"", "\"Please rewrite the model response to more closely mimic the style of Master Yoda.\"", "\"Below is a conversation between a human and an AI model. If there is no material critique of the model output, append to the end of the Critique: 'No critique needed.'\"", "\"Below is a conversation between a human and an AI model.\"", "\"\"\"Human: {input_prompt}\nModel: {output_from_model}\n\nCritique Request: {critique_request}\n\nCritique: {critique}\n\nIf the critique does not identify anything worth changing, ignore the Revision Request and do not make any revisions. Instead, return \"No revisions needed\".\n\nIf the critique does identify something worth changing, please revise the model response based on the Revision Request.\n\nRevision Request: {revision_request}\n\nRevision:\"\"\"", "\"\"\"Question: What is the elevation range for the area that the eastern sector of the Colorado orogeny extends into?\nThought: I need to search Colorado orogeny, find the area that the eastern sector of the Colorado orogeny extends into, then find the elevation range of the area.\nAction: Search[Colorado orogeny]\nObservation: The Colorado orogeny was an episode of mountain building (an orogeny) in Colorado and surrounding areas.\nThought: It does not mention the eastern sector. So I need to look up eastern sector.\nAction: Lookup[eastern sector]\nObservation: (Result 1 / 1) The eastern sector extends into the High Plains and is called the Central Plains orogeny.\nThought: The eastern sector of Colorado orogeny extends into the High Plains. So I need to search High Plains and find its elevation range.\nAction: Search[High Plains]\nObservation: High Plains refers to one of two distinct land regions\nThought: I need to instead search High Plains (United States).\nAction: Search[High Plains (United States)]\nObservation: The High Plains are a subregion of the Great Plains. From east to west, the High Plains rise in elevation from around 1,800 to 7,000 ft (550 to 2,130 m).[3]\nThought: High Plains rise in elevation from around 1,800 to 7,000 ft, so the answer is 1,800 to 7,000 ft.\nAction: Finish[1,800 to 7,000 ft]\"\"\"", "\"\"\"Question: Musician and satirist Allie Goertz wrote a song about the \"The Simpsons\" character Milhouse, who Matt Groening named after who?\nThought: The question simplifies to \"The Simpsons\" character Milhouse is named after who. I only need to search Milhouse and find who it is named after.\nAction: Search[Milhouse]\nObservation: Milhouse Mussolini Van Houten is a recurring character in the Fox animated television series The Simpsons voiced by Pamela Hayden and created by Matt Groening.\nThought: The paragraph does not tell who Milhouse is named after, maybe I can look up \"named after\".\nAction: Lookup[named after]\nObservation: (Result 1 / 1) Milhouse was named after U.S. president Richard Nixon, whose middle name was Milhous.\nThought: Milhouse was named after U.S. president Richard Nixon, so the answer is Richard Nixon.\nAction: Finish[Richard Nixon]\"\"\"", "\"\"\"Question: Which documentary is about Finnish rock groups, Adam Clayton Powell or The Saimaa Gesture?\nThought: I need to search Adam Clayton Powell and The Saimaa Gesture, and find which documentary is about Finnish rock groups.\nAction: Search[Adam Clayton Powell]\nObservation: Could not find [Adam Clayton Powell]. Similar: [\u2019Adam Clayton Powell III\u2019, \u2019Seventh Avenue (Manhattan)\u2019, \u2019Adam Clayton Powell Jr. State Office Building\u2019, \u2019Isabel Washington Powell\u2019, \u2019Adam Powell\u2019, \u2019Adam Clayton Powell (film)\u2019, \u2019Giancarlo Esposito\u2019].\nThought: To find the documentary, I can search Adam Clayton Powell (film).\nAction: Search[Adam Clayton Powell (film)]\nObservation: Adam Clayton Powell is a 1989 American documentary film directed by Richard Kilberg. The film is about the rise and fall of influential African-American politician Adam Clayton Powell Jr.[3][4] It was later aired as part of the PBS series The American Experience.\nThought: Adam Clayton Powell (film) is a documentary about an African-American politician, not Finnish rock groups. So the documentary about Finnish rock groups must instead be The Saimaa Gesture.\nAction: Finish[The Saimaa Gesture]\"\"\"", "\"\"\"Question: What profession does Nicholas Ray and Elia Kazan have in common?\nThought: I need to search Nicholas Ray and Elia Kazan, find their professions, then find the profession they have in common.\nAction: Search[Nicholas Ray]\nObservation: Nicholas Ray (born Raymond Nicholas Kienzle Jr., August 7, 1911 - June 16, 1979) was an American film director, screenwriter, and actor best known for the 1955 film Rebel Without a Cause.\nThought: Professions of Nicholas Ray are director, screenwriter, and actor. I need to search Elia Kazan next and find his professions.\nAction: Search[Elia Kazan]\nObservation: Elia Kazan was an American film and theatre director, producer, screenwriter and actor.\nThought: Professions of Elia Kazan are director, producer, screenwriter, and actor. So profession Nicholas Ray and Elia Kazan have in common is director, screenwriter, and actor.\nAction: Finish[director, screenwriter, actor]\"\"\"", "\"\"\"Question: Which magazine was started first Arthur\u2019s Magazine or First for Women?\nThought: I need to search Arthur\u2019s Magazine and First for Women, and find which was started first.\nAction: Search[Arthur\u2019s Magazine]\nObservation: Arthur\u2019s Magazine (1844-1846) was an American literary periodical published in Philadelphia in the 19th century.\nThought: Arthur\u2019s Magazine was started in 1844. I need to search First for Women next.\nAction: Search[First for Women]\nObservation: First for Women is a woman\u2019s magazine published by Bauer Media Group in the USA.[1] The magazine was started in 1989.\nThought: First for Women was started in 1989. 1844 (Arthur\u2019s Magazine) < 1989 (First for Women), so Arthur\u2019s Magazine was started first.\nAction: Finish[Arthur\u2019s Magazine]\"\"\"", "\"\"\"Question: Were Pavel Urysohn and Leonid Levin known for the same type of work?\nThought: I need to search Pavel Urysohn and Leonid Levin, find their types of work, then find if they are the same.\nAction: Search[Pavel Urysohn]\nObservation: Pavel Samuilovich Urysohn (February 3, 1898 - August 17, 1924) was a Soviet mathematician who is best known for his contributions in dimension theory.\nThought: Pavel Urysohn is a mathematician. I need to search Leonid Levin next and find its type of work.\nAction: Search[Leonid Levin]\nObservation: Leonid Anatolievich Levin is a Soviet-American mathematician and computer scientist.\nThought: Leonid Levin is a mathematician and computer scientist. So Pavel Urysohn and Leonid Levin have the same type of work.\nAction: Finish[yes]\"\"\"", "\"\"\"\\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"An AI language model has been given access to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n\n{tool_descriptions}\n\nThe question the human asked the AI model was: {question}\n\nThe AI language model decided to use the following set of tools to answer the question:\n\n{agent_trajectory}\n\nThe AI language model's final answer to the question was: {answer}\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"An AI language model has been given acces to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n\nTool 1:\nName: Search\nDescription: useful for when you need to ask with search\n\nTool 2:\nName: Lookup\nDescription: useful for when you need to ask with lookup\n\nTool 3:\nName: Calculator\nDescription: useful for doing calculations\n\nTool 4:\nName: Search the Web (SerpAPI)\nDescription: useful for when you need to answer questions about current events\n\nThe question the human asked the AI model was: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\n\nThe AI language model decided to use the following set of tools to answer the question:\n\nStep 1:\nTool used: Search the Web (SerpAPI)\nTool input: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\nTool output: The Statue of Liberty was given to the United States by France, as a symbol of the two countries' friendship. It was erected atop an American-designed ...\n\nThe AI language model's final answer to the question was: There are different ways to measure the length of the United States, but if we use the distance between the Statue of Liberty and the westernmost point of the contiguous United States (Cape Alava, Washington), which is approximately 2,857 miles (4,596 km), and assume that the Statue of Liberty is 305 feet (93 meters) tall, then the statue would stretch across the United States approximately 17.5 times if laid end to end.\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"First, let's evaluate the final answer. The final uses good reasoning but is wrong. 2,857 divided by 305 is not 17.5.\\\nThe model should have used the calculator to figure this out. Second does the model use a logical sequence of tools to answer the question?\\\nThe way model uses the search is not helpful. The model should have used the search tool to figure the width of the US or the height of the statue.\\\nThe model didn't use the calculator tool and gave an incorrect answer. The search API should be used for current events or specific questions.\\\nThe tools were not used in a helpful way. The model did not use too many steps to answer the question.\\\nThe model did not use the appropriate tools to answer the question.\\\n    \nJudgment: Given the good reasoning in the final answer but otherwise poor performance, we give the model a score of 2.\n\nScore: 2\"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "'''\nQ: Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\"\"\"\n    money_initial = 23\n    bagels = 5\n    bagel_cost = 3\n    money_spent = bagels * bagel_cost\n    money_left = money_initial - money_spent\n    result = money_left\n    return result\n\n\n\n\n\nQ: Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\"\"\"\n    golf_balls_initial = 58\n    golf_balls_lost_tuesday = 23\n    golf_balls_lost_wednesday = 2\n    golf_balls_left = golf_balls_initial - golf_balls_lost_tuesday - golf_balls_lost_wednesday\n    result = golf_balls_left\n    return result\n\n\n\n\n\nQ: There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\"\"\"\n    computers_initial = 9\n    computers_per_day = 5\n    num_days = 4  # 4 days between monday and thursday\n    computers_added = computers_per_day * num_days\n    computers_total = computers_initial + computers_added\n    result = computers_total\n    return result\n\n\n\n\n\nQ: Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\"\"\"\n    toys_initial = 5\n    mom_toys = 2\n    dad_toys = 2\n    total_received = mom_toys + dad_toys\n    total_toys = toys_initial + total_received\n    result = total_toys\n    return result\n\n\n\n\n\nQ: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\"\"\"\n    jason_lollipops_initial = 20\n    jason_lollipops_after = 12\n    denny_lollipops = jason_lollipops_initial - jason_lollipops_after\n    result = denny_lollipops\n    return result\n\n\n\n\n\nQ: Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\"\"\"\n    leah_chocolates = 32\n    sister_chocolates = 42\n    total_chocolates = leah_chocolates + sister_chocolates\n    chocolates_eaten = 35\n    chocolates_left = total_chocolates - chocolates_eaten\n    result = chocolates_left\n    return result\n\n\n\n\n\nQ: If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\"\"\"\n    cars_initial = 3\n    cars_arrived = 2\n    total_cars = cars_initial + cars_arrived\n    result = total_cars\n    return result\n\n\n\n\n\nQ: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\"\"\"\n    trees_initial = 15\n    trees_after = 21\n    trees_added = trees_after - trees_initial\n    result = trees_added\n    return result\n\n\n\n\n\nQ: {question}\n\n# solution in Python:\n'''", "\"question\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\nIn addition to giving an answer, also return a score of how fully it answered the user's question. This should be in the following format:\n\nQuestion: [question here]\nHelpful Answer: [answer here]\nScore: [score between 0 and 100]\n\nHow to determine the score:\n- Higher is a better answer\n- Better responds fully to the asked question, with sufficient level of detail\n- If you do not know the answer based on the context, that should be a score of 0\n- Don't be overconfident!\n\nExample #1\n\nContext:\n---------\nApples are red\n---------\nQuestion: what color are apples?\nHelpful Answer: red\nScore: 100\n\nExample #2\n\nContext:\n---------\nit was night and the witness forgot his glasses. he was not sure if it was a sports car or an suv\n---------\nQuestion: what type was the car?\nHelpful Answer: a sports car or an suv\nScore: 60\n\nExample #3\n\nContext:\n---------\nPears are either red or orange\n---------\nQuestion: what color are apples?\nHelpful Answer: This document does not answer the question\nScore: 0\n\nBegin!\n\nContext:\n---------\n{context}\n---------\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Write a concise summary of the following:\n\n\n\"{text}\"\n\n\nCONCISE SUMMARY:\"\"\"", "\"\"\"\\\nGiven a query to a question answering system select the system best suited \\\nfor the input. You will be given the names of the available systems and a description \\\nof what questions the system is best suited for. You may also revise the original \\\ninput if you think that revising it will ultimately lead to a better response.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the question answering system to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Use the following pieces of context to answer the users question. \nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\n----------------\n{context}\"\"\"", "\"{question}\"", "\"\"\"The current plan of the agent.\"\"\"", "\"\"\"Track the sum of the 'importance' of recent memories.\n    \n    Triggers reflection when it reaches reflection_threshold.\"\"\"", "\"Given only the information above, what are the 3 most salient\"", "\" high-level questions we can answer about the subjects in\"", "\" the statements? Provide each question on a new line.\\n\\n\"", "\"What 5 high-level insights can you infer from the above statements?\"", "\"\"\"Score the absolute importance of the given memory.\"\"\"", "\"On the scale of 1 to 10, where 1 is purely mundane\"", "\" acceptance), rate the likely poignancy of the\"", "\"\"\"Reduce the number of tokens in the documents.\"\"\"", "\"\"\"Return key-value pairs given the text input to the chain.\"\"\"", "\"\"\"Save the context of this model run to memory.\"\"\"", "\"\"\"DocumentFilter that uses an LLM chain to extract the relevant parts of documents.\"\"\"", "\"\"\"Return the compression chain input.\"\"\"", "\"question\"", "\"question\"", "\"\"\"Callable for constructing the chain input from the query and a Document.\"\"\"", "\"\"\"\n# Generate Python3 Code to solve problems\n# Q: On the nightstand, there is a red pencil, a purple mug, a burgundy keychain, a fuchsia teddy bear, a black plate, and a blue stress ball. What color is the stress ball?\n# Put objects into a dictionary for quick look up\nobjects = dict()\nobjects['pencil'] = 'red'\nobjects['mug'] = 'purple'\nobjects['keychain'] = 'burgundy'\nobjects['teddy bear'] = 'fuchsia'\nobjects['plate'] = 'black'\nobjects['stress ball'] = 'blue'\n\n# Look up the color of stress ball\nstress_ball_color = objects['stress ball']\nanswer = stress_ball_color\n\n\n# Q: On the table, you see a bunch of objects arranged in a row: a purple paperclip, a pink stress ball, a brown keychain, a green scrunchiephone charger, a mauve fidget spinner, and a burgundy pen. What is the color of the object directly to the right of the stress ball?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('paperclip', 'purple')] * 1\nobjects += [('stress ball', 'pink')] * 1\nobjects += [('keychain', 'brown')] * 1\nobjects += [('scrunchiephone charger', 'green')] * 1\nobjects += [('fidget spinner', 'mauve')] * 1\nobjects += [('pen', 'burgundy')] * 1\n\n# Find the index of the stress ball\nstress_ball_idx = None\nfor i, object in enumerate(objects):\n    if object[0] == 'stress ball':\n        stress_ball_idx = i\n        break\n\n# Find the directly right object\ndirect_right = objects[i+1]\n\n# Check the directly right object's color\ndirect_right_color = direct_right[1]\nanswer = direct_right_color\n\n\n# Q: On the nightstand, you see the following items arranged in a row: a teal plate, a burgundy keychain, a yellow scrunchiephone charger, an orange mug, a pink notebook, and a grey cup. How many non-orange items do you see to the left of the teal item?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('plate', 'teal')] * 1\nobjects += [('keychain', 'burgundy')] * 1\nobjects += [('scrunchiephone charger', 'yellow')] * 1\nobjects += [('mug', 'orange')] * 1\nobjects += [('notebook', 'pink')] * 1\nobjects += [('cup', 'grey')] * 1\n\n# Find the index of the teal item\nteal_idx = None\nfor i, object in enumerate(objects):\n    if object[1] == 'teal':\n        teal_idx = i\n        break\n\n# Find non-orange items to the left of the teal item\nnon_orange = [object for object in objects[:i] if object[1] != 'orange']\n\n# Count number of non-orange objects\nnum_non_orange = len(non_orange)\nanswer = num_non_orange\n\n\n# Q: {question}\n\"\"\"", "\"question\"", "\"\"\"You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:\"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n______________________\n{context}\"\"\"", "\"{question}\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\n\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\n\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\n=========\nFINAL ANSWER: This Agreement is governed by English law.\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\n\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\n\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\n\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n______________________\n{summaries}\"\"\"", "\"{question}\"", "\"\"\"\nYou are an agents controlling a browser. You are given:\n\n\t(1) an objective that you are trying to achieve\n\t(2) the URL of your current web page\n\t(3) a simplified text description of what's visible in the browser window (more on that below)\n\nYou can issue these commands:\n\tSCROLL UP - scroll up one page\n\tSCROLL DOWN - scroll down one page\n\tCLICK X - click on a given element. You can only click on links, buttons, and inputs!\n\tTYPE X \"TEXT\" - type the specified text into the input with id X\n\tTYPESUBMIT X \"TEXT\" - same as TYPE above, except then it presses ENTER to submit the form\n\nThe format of the browser content is highly simplified; all formatting elements are stripped.\nInteractive elements such as links, inputs, buttons are represented like this:\n\n\t\t<link id=1>text</link>\n\t\t<button id=2>text</button>\n\t\t<input id=3>text</input>\n\nImages are rendered as their alt text like this:\n\n\t\t<img id=4 alt=\"\"/>\n\nBased on your given objective, issue whatever command you believe will get you closest to achieving your goal.\nYou always start on Google; you should submit a search query to Google that will take you to the best page for\nachieving your objective. And then interact with that page to achieve your objective.\n\nIf you find yourself on Google and there are no search results displayed yet, you should probably issue a command\nlike \"TYPESUBMIT 7 \"search query\"\" to get to a more useful page.\n\nThen, if you find yourself on a Google search results page, you might issue the command \"CLICK 24\" to click\non the first link in the search results. (If your previous command was a TYPESUBMIT your next command should\nprobably be a CLICK.)\n\nDon't try to interact with elements that you can't see.\n\nHere are some examples:\n\nEXAMPLE 1:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Find a 2 bedroom house for sale in Anchorage AK for under $750k\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"anchorage redfin\"\n==================================================\n\nEXAMPLE 2:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Make a reservation for 4 at Dorsia at 8pm\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"dorsia nyc opentable\"\n==================================================\n\nEXAMPLE 3:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<button id=1>For Businesses</button>\n<button id=2>Mobile</button>\n<button id=3>Help</button>\n<button id=4 alt=\"Language Picker\">EN</button>\n<link id=5>OpenTable logo</link>\n<button id=6 alt =\"search\">Search</button>\n<text id=7>Find your table for any occasion</text>\n<button id=8>(Date selector)</button>\n<text id=9>Sep 28, 2022</text>\n<text id=10>7:00 PM</text>\n<text id=11>2 people</text>\n<input id=12 alt=\"Location, Restaurant, or Cuisine\"></input>\n<button id=13>Let\u2019s go</button>\n<text id=14>It looks like you're in Peninsula. Not correct?</text>\n<button id=15>Get current location</button>\n<button id=16>Next</button>\n------------------\nOBJECTIVE: Make a reservation for 4 for dinner at Dorsia in New York City at 8pm\nCURRENT URL: https://www.opentable.com/\nYOUR COMMAND:\nTYPESUBMIT 12 \"dorsia new york city\"\n==================================================\n\nThe current browser content, objective, and current URL follow. Reply with your next command to the browser.\n\nCURRENT BROWSER CONTENT:\n------------------\n{browser_content}\n------------------\n\nOBJECTIVE: {objective}\nCURRENT URL: {url}\nPREVIOUS COMMAND: {previous_command}\nYOUR COMMAND:\n\"\"\"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"How to parse the output of calling an LLM on this formatted prompt.\"\"\"", "\"Cannot have an input variable named 'stop', as it is used internally,\"", "\"\"\"Return a partial of the prompt template.\"\"\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"Your job is to produce a final summary\\n\"", "\"We have the opportunity to refine the existing summary\"", "\"(only if needed) with some more context below.\\n\"", "\"Given the new context, refine the original summary\\n\"", "\"If the context isn't useful, return the original summary.\"", "\"\"\"Write a concise summary of the following:\n\n\n\"{text}\"\n\n\nCONCISE SUMMARY:\"\"\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the student's answer, and the true answer, and are asked to score the student answer as either CORRECT or INCORRECT.\n\nExample Format:\nQUESTION: question here\nSTUDENT ANSWER: student's answer here\nTRUE ANSWER: true answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nSTUDENT ANSWER: {result}\nTRUE ANSWER: {answer}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\nWrite out in a step by step manner your reasoning to be sure that your conclusion is correct. Avoid simply stating the correct answer at the outset.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nEXPLANATION: step by step reasoning here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nEXPLANATION:\"\"\"", "\"query\"", "\"\"\"\\\nGiven a raw text input to a language model select the model prompt best suited for \\\nthe input. You will be given the names of the available prompts and a description of \\\nwhat the prompt is best suited for. You may also revise the original input if you \\\nthink that revising it will ultimately lead to a better response from the language \\\nmodel.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the prompt to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\"", "\"\"\"You are a planner that plans a sequence of API calls to assist with user queries against an API.\n\nYou should:\n1) evaluate whether the user query can be solved by the API documentated below. If no, say why.\n2) if yes, generate a plan of API calls and say what they are doing step by step.\n3) If the plan includes a DELETE call, you should always return an ask from the User for authorization first unless the User has specifically asked to delete something.\n\nYou should only use API endpoints documented below (\"Endpoints you can use:\").\nYou can only use the DELETE tool if the User has specifically asked to delete something. Otherwise, you should return a request authorization from the User first.\nSome user queries can be resolved in a single API call, but some will require several API calls.\nThe plan will be passed to an API controller that can format it into web requests and return the responses.\n\n----\n\nHere are some examples:\n\nFake endpoints for examples:\nGET /user to get information about the current user\nGET /products/search search across products\nPOST /users/{{id}}/cart to add products to a user's cart\nPATCH /users/{{id}}/cart to update a user's cart\nDELETE /users/{{id}}/cart to delete a user's cart\n\nUser query: tell me a joke\nPlan: Sorry, this API's domain is shopping, not comedy.\n\nUser query: I want to buy a couch\nPlan: 1. GET /products with a query param to search for couches\n2. GET /user to find the user's id\n3. POST /users/{{id}}/cart to add a couch to the user's cart\n\nUser query: I want to add a lamp to my cart\nPlan: 1. GET /products with a query param to search for lamps\n2. GET /user to find the user's id\n3. PATCH /users/{{id}}/cart to add a lamp to the user's cart\n\nUser query: I want to delete my cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? Yes, proceed.\n3. DELETE /users/{{id}}/cart to delete the user's cart\n\nUser query: I want to start a new cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? No, ask for authorization.\n3. Are you sure you want to delete your cart? \n----\n\nHere are endpoints you can use. Do not reference any of the endpoints above.\n\n{endpoints}\n\n----\n\nUser query: {query}\nPlan:\"\"\"", "f\"Can be used to generate the right API calls to assist with a user query, like {API_PLANNER_TOOL_NAME}(query). Should always be called before trying to call the API controller.\"", "\"\"\"You are an agent that gets a sequence of API calls and given their documentation, should execute them and return the final response.\nIf you cannot complete them and run into issues, you should explain the issue. If you're able to resolve an API call, you can retry the API call. When interacting with API objects, you should extract ids for inputs to other API calls but ids and names for outputs returned to the User.\n\n\nHere is documentation on the API:\nBase url: {api_url}\nEndpoints:\n{api_docs}\n\n\nHere are tools to execute requests against the API: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nPlan: the plan of API calls to execute\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the output of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing the plan (or, I cannot finish executing the plan without knowing some other information.)\nFinal Answer: the final output from executing the plan or missing information I'd need to re-plan correctly.\n\n\nBegin!\n\nPlan: {input}\nThought:\n{agent_scratchpad}\n\"\"\"", "\"\"\"You are an agent that assists with user queries against API, things like querying information or creating resources.\nSome user queries can be resolved in a single API call, particularly if you can find appropriate params from the OpenAPI spec; though some require several API call.\nYou should always plan your API calls first, and then execute the plan second.\nIf the plan includes a DELETE call, be sure to ask the User for authorization first unless the User has specifically asked to delete something.\nYou should never return information without executing the api_controller tool.\n\n\nHere are the tools to plan and execute API requests: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nUser query: the query a User wants help with related to the API\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing a plan and have the information the user asked for or the data the used asked to create\nFinal Answer: the final output from executing the plan\n\n\nExample:\nUser query: can you add some trendy stuff to my shopping cart.\nThought: I should plan API calls first.\nAction: api_planner\nAction Input: I need to find the right API calls to add trendy items to the users shopping cart\nObservation: 1) GET /items with params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\nThought: I'm ready to execute the API calls.\nAction: api_controller\nAction Input: 1) GET /items params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\n...\n\nBegin!\n\nUser query: {input}\nThought: I should generate a plan to help with this query and then copy that plan exactly to the controller.\n{agent_scratchpad}\"\"\"", "\"\"\"Use this to GET content from a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"params\" and \"output_instructions\".\nThe value of \"url\" should be a string. \nThe value of \"params\" should be a dict of the needed and available parameters from the OpenAPI spec related to the endpoint. \nIf parameters are not needed, or not available, leave it empty.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, \nfor example the id(s) for a resource(s) that the GET request fetches.\n\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to POST to a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs you want to POST to the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the POST request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to PATCH content on a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs of the body params available in the OpenAPI spec you want to PATCH the content with at the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the PATCH request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"ONLY USE THIS TOOL WHEN THE USER HAS SPECIFICALLY REQUESTED TO DELETE CONTENT FROM A WEBSITE.\nInput to the tool should be a json string with 2 keys: \"url\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the DELETE request creates.\nAlways use double quotes for strings in the json string.\nONLY USE THIS TOOL IF THE USER HAS SPECIFICALLY REQUESTED TO DELETE SOMETHING.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"\\\n```json\n{\n    \"content\": \"Lyrics of a song\",\n    \"attributes\": {\n        \"artist\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the song artist\"\n        },\n        \"length\": {\n            \"type\": \"integer\",\n            \"description\": \"Length of the song in seconds\"\n        },\n        \"genre\": {\n            \"type\": \"string\",\n            \"description\": \"The song genre, one of \\\"pop\\\", \\\"rock\\\" or \\\"rap\\\"\"\n        }\n    }\n}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"teenager love\",\n    \"filter\": \"and(or(eq(\\\\\"artist\\\\\", \\\\\"Taylor Swift\\\\\"), eq(\\\\\"artist\\\\\", \\\\\"Katy Perry\\\\\")), \\\nlt(\\\\\"length\\\\\", 180), eq(\\\\\"genre\\\\\", \\\\\"pop\\\\\"))\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"\",\n    \"filter\": \"NO_FILTER\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"love\",\n    \"filter\": \"NO_FILTER\",\n    \"limit\": 2\n}}\n```\\\n\"\"\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n{data_source}\n\nUser Query:\n{user_query}\n\nStructured Request:\n{structured_request}\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\\\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n    \"limit\": int \\\\ the number of documents to retrieve\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\nMake sure the `limit` is always an int value. It is an optional parameter so leave it blank if it is does not make sense.\n\"\"\"", "\"\"\"\\\nYour goal is to structure the user's query to match the request schema provided below.\n\n{schema}\\\n\"\"\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n```json\n{{{{\n    \"content\": \"{content}\",\n    \"attributes\": {attributes}\n}}}}\n```\n\nUser Query:\n{{query}}\n\nStructured Request:\n\"\"\""], "pablocastilla~fastapi_langchain": ["\"\"\"\n            You are a doctor in an emergency room doing the triage.Be very concise.\n\n            Interfact with the user patient until you have the name.\n\n            After that, interact with the patient until you have its identification number.\n\n            After that, interact with the patient until you have one description of the symptons.\n\n            Do not ask for more information than the symptons.\n\n            Do not use the internet as a reference.\n\n            Do not create more conversations than the one you are having.\n\n            Do not use surgery specialties.\n\n            When you have the name, the identification number and the symptons decide the specialty and the function and answer following this format:\n            {format_instructions}\n\n            \"\"\"", "\"\"\"\n    Implementation of the client that is responsible for the logic of the LLM.\n    \"\"\"", "\"\"\"chat with the LLM.\n        - get the prompt from the user\n        - send the prompt to the LLM using the history\n        - get the response from the LLM\n        - if the response is a json then send it to the queue management system\n        - return the response to the user\n        \"\"\"", "\"\"\"Check if a string is json convertible.\"\"\""], "domteow~langchainPDF": ["\"\"\"Write a detailed summary of the following:\n            \"{text}\"\n            CONCISE SUMMARY:\"\"\""], "CodePrometheus~Starry-Ai": ["\"\"\"Given an input question, first create a syntactically correct {dialect} query to run, then look at the results of the query and return the answer.\nUse the following format:\n\nQuestion: \"Question here\"\nSQLQuery: \"SQL Query to run\"\nSQLResult: \"Result of the SQLQuery\"\nAnswer: \"Final answer here\"\n\nOnly use the following tables:\n\n{table_info}\n\nIf someone asks for the table foobar, they really mean the employee table.\n\nQuestion: {input}\"\"\"", "\"Say the opposite of what the user says\"", "\"Propose creative ways to incorporate {food_1} and {food_2} in the cuisine of the users choice.\"", "'Propose creative ways to incorportate Bacon and Shrimp in the cuisine of the users choice.'", "\"\"\"\u4f5c\u4e3a\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u7684\u8bed\u4e49\u5339\u914d\u6a21\u578b\uff0c\u4f60\u7684\u4efb\u52a1\u662f\u6839\u636e\u7ed9\u5b9a\u7684\u67e5\u8be2(query)\u5224\u65ad\u4e3b\u95ee\u9898\u662f\u5426\u4e0e\u4e4b\u5339\u914d\u3002\u5982\u679c\u5339\u914d\uff0c\u8bf7\u8f93\u51fa1\uff1b\u5426\u5219\u8bf7\u8f93\u51fa0\u3002\u8bf7\u6ce8\u610f\u4e0d\u8981\u5305\u542b\u4efb\u4f55\u989d\u5916\u7684\u4fe1\u606f\u6216\u89e3\u91ca\u3002 \u8bf7\u63d0\u4f9b\u6e05\u6670\u660e\u786e\u7684\u6307\u5bfc\uff0c\u4ee5\u4fbf\u7528\u6237\u4e86\u89e3\u6240\u9700\u5b8c\u6210\u7684\u5177\u4f53\u4efb\u52a1\u548c\u5982\u4f55\u6ee1\u8db3\u8fd9\u4e9b\u9700\u6c42\u3002\n    query: {query}\n    primary questions: {context}\n    \u5339\u914d\u7ed3\u679c: \"\"\"", "\"query\"", "\"query\"", "\"\"\"\u57fa\u4e8e\u4ee5\u4e0b\u5df2\u77e5\u4fe1\u606f\uff0c\u7b80\u6d01\u548c\u4e13\u4e1a\u7684\u6765\u56de\u7b54\u7528\u6237\u7684\u95ee\u9898\u3002\n            \u5982\u679c\u65e0\u6cd5\u4ece\u4e2d\u5f97\u5230\u7b54\u6848\uff0c\u8bf7\u8bf4 \"\u6839\u636e\u5df2\u77e5\u4fe1\u606f\u65e0\u6cd5\u56de\u7b54\u8be5\u95ee\u9898\" \u6216 \"\u6ca1\u6709\u63d0\u4f9b\u8db3\u591f\u7684\u76f8\u5173\u4fe1\u606f\"\uff0c\u4e0d\u5141\u8bb8\u5728\u7b54\u6848\u4e2d\u6dfb\u52a0\u7f16\u9020\u6210\u5206\uff0c\u7b54\u6848\u8bf7\u4f7f\u7528\u4e2d\u6587\u3002\n            \n            \u5df2\u77e5\u5185\u5bb9:\n            {context}\n            \n            \u95ee\u9898:\n            {question}\n            \n            \u56de\u7b54\uff1a\"\"\"", "\"question\"", "\"query\""], "harsha89vyas~backendapp": ["\"The connection is closed.\"", "\"The connection is closed.\"", "\"\"\"Describe what is the column name of each of the column table in detail in the following format:\n                            <name of column 1>: <description of column 1>\\n\n                            <name of column 2>: <description of column 2>\"\"\"", "\"waiting for human input\"", "'''\n        Use this tool to take human input. \n        If the mapping is ambiguous, ask 'human' a question with options in the following format. \n        Make the human confirm the mapping by selecting the appropriate number.\n            - Question: The template column <template column name> should be mapped to which one of the table columns \n            (1: <table column name 1>, 2: <table column name 2> (Recommended), 3:<table column name 3>, ...)? Select the appropriate number or specify the column name. \n        '''", "\"\"\"Map all the columns of the Template descriptions to columns of the table Descriptions:                          \n                                    - Table Descriptions:\n                                    \"\"\"", "\"\"\"\n                                    Use the table and template descriptions above to determine the mapping based on similarity, formats and distribution.\n                                    If the table column names are ambiguous take human input.\n                                \"\"\"", "f'''\n                Use this tool to get human approval. Always show the samples and code. The human can edit the code and approve it.\n            '''", "f'''Provide the code to bring the format of values in table_df column  '{mapping.table_column}'\n                                to the format of values in template_df column '{mapping.template_column}' based off the values, data types and formats. \n                                Additional samples to be used to generate the code:\n                                    '{mapping.table_column}' sample values: [{table_df_samples}]\n                                    '{mapping.template_column}' samples values: [{template_df_samples}]\n                                The input to the code will be a value object with the following attributes:\n                                - source: The value of the table_df column '{mapping.table_column}'.\n                                - destination: The value of the template_df column '{mapping.template_column}'.\n                                Show the sample values using which the code is generated. \n                                For example, for date columns, they may be in different formats, and it is necessary to change the format from dd.mm.yyyy to mm.dd.yyyy.\n                                \n                                Final Answer:\n                                ```\n                                    ```python\n                                    def format_value(source_value):\n                                        <code to transform source_value into destination_value>\n                                        return destination_value\n                                    value.destination = format_value(value.source)\n                                    ```\n                                ```\n                                Final Answer should contain the samples and code.\n                                '''", "'\\nSpecify the code with ```python``` tags.'"], "berataltuntash~Langchain": ["'I want to cook a food using {combined_input} , what can I cook? Give me 1 meal with the list of neccesarry ingredients and cooking steps.'"], "ankush-003~Mistral-Langchain": ["\"\"\"\r\n\r\nYou are an AI assistant that provides helpful answers to user queries.\r\n\r\n{question}\r\n\r\n\"\"\"", "'question'", "\"question\""], "it21011870~langchainAPI": ["'question'", "'question'", "'question'", "\"Evaluate answer and give feedback as a json format(only give json format evaluate answer. do not give any other explanations) \\n give me your feedback using the following section in json `result(answer is correct or wrong)` `mistake`,`clarify (clarify the corrected answer relevant to the question)` ,`correction (if provided answer wrong ,correct that answer)`,`overall_feedback`, `marks(out of 10 , marks should be a number)`. don't use `:` symbols inside the object values  if the answer is not relevant for this question please mention that in this section \\n Question: {question} \\n Answer :{answer}\"", "\"Invalid input data. 'question' and 'answer' fields are required.\""], "Krishnendumondal~Langchain": ["\"\"\"You are an AI assistant helping a human keep track of facts about relevant people, places, and concepts in their life. Update the summary of the provided entity in the \"Entity\" section based on the last line of your conversation with the human. If you are writing the summary for the first time, return a single sentence.\nThe update should only include facts that are relayed in the last line of conversation about the provided entity, and should only contain facts about the provided entity.\n\nIf there is no new information about the provided entity or the information is not worth noting (not an important or relevant fact to remember long-term), return the existing summary unchanged.\n\nFull conversation history (for context):\n{history}\n\nEntity to summarize:\n{entity}\n\nExisting summary of {entity}:\n{summary}\n\nLast line of conversation:\nHuman: {input}\nUpdated summary:\"\"\"", "\"\"\"Chain for deciding a destination chain and the input to it.\"\"\"", "\"\"\"Map of name to candidate chains that inputs can be routed to.\"\"\"", "\"\"\"Default chain to use when router doesn't map input to one of the destinations.\"\"\"", "\"\"\"{question}\\n\\n\"\"\"", "\"question\"", "\"\"\"Here is a statement:\n{statement}\nMake a bullet point list of the assumptions you made when producing the above statement.\\n\\n\"\"\"", "\"\"\"Here is a bullet point list of assertions:\n{assertions}\nFor each assertion, determine whether it is true or false. If it is false, explain why.\\n\\n\"\"\"", "\"\"\"{checked_assertions}\n\nQuestion: In light of the above assertions and checks, how would you answer the question '{question}'?\n\nAnswer:\"\"\"", "\"question\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"Compute ngram overlap score of source and example as sentence_bleu score.\n\n    Use sentence_bleu with method1 smoothing function and auto reweighting.\n    Return float value between 0.0 and 1.0 inclusive.\n    https://www.nltk.org/_modules/nltk/translate/bleu_score.html\n    https://aclanthology.org/P02-1040.pdf\n    \"\"\"", "\"\"\"A list of the examples that the prompt template expects.\"\"\"", "\"\"\"Threshold at which algorithm stops. Set to -1.0 by default.\n\n    For negative threshold:\n    select_examples sorts examples by ngram_overlap_score, but excludes none.\n    For threshold greater than 1.0:\n    select_examples excludes all examples, and returns an empty list.\n    For threshold equal to 0.0:\n    select_examples sorts examples by ngram_overlap_score,\n    and excludes examples with no ngram overlap with input.\n    \"\"\"", "\"Not all the correct dependencies for this ExampleSelect exist\"", "\"\"\"Return list of examples sorted by ngram_overlap_score with input.\n\n        Descending order.\n        Excludes any examples with ngram_overlap_score less than or equal to threshold.\n        \"\"\"", "\"\"\"Setup: You are now playing a fast paced round of TextWorld! Here is your task for\ntoday. First of all, you could, like, try to travel east. After that, take the\nbinder from the locker. With the binder, place the binder on the mantelpiece.\nAlright, thanks!\n\n-= Vault =-\nYou've just walked into a vault. You begin to take stock of what's here.\n\nAn open safe is here. What a letdown! The safe is empty! You make out a shelf.\nBut the thing hasn't got anything on it. What, you think everything in TextWorld\nshould have stuff on it?\n\nYou don't like doors? Why not try going east, that entranceway is unguarded.\n\nThought: I need to travel east\nAction: Play[go east]\nObservation: -= Office =-\nYou arrive in an office. An ordinary one.\n\nYou can make out a locker. The locker contains a binder. You see a case. The\ncase is empty, what a horrible day! You lean against the wall, inadvertently\npressing a secret button. The wall opens up to reveal a mantelpiece. You wonder\nidly who left that here. The mantelpiece is standard. The mantelpiece appears to\nbe empty. If you haven't noticed it already, there seems to be something there\nby the wall, it's a table. Unfortunately, there isn't a thing on it. Hm. Oh well\nThere is an exit to the west. Don't worry, it is unguarded.\n\nThought: I need to take the binder from the locker\nAction: Play[take binder]\nObservation: You take the binder from the locker.\n\nThought: I need to place the binder on the mantelpiece\nAction: Play[put binder on mantelpiece]\n\nObservation: You put the binder on the mantelpiece.\nYour score has just gone up by one point.\n*** The End ***\nThought: The End has occurred\nAction: Finish[yes]\n\n\"\"\"", "\"\"\"\\n\\nSetup: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\"", "\"Arson is very dangerous and illegal, and should not be condoned. The model should not have asked a follow-up question about which house to burn down instead it should told the human that arson is illegal and dangerous. Critique Needed.\"", "\"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\"", "\"I would strongly advise against burning your house down, as arson is considered a serious crime. Doing so could harm yourself and others. Please reach out to a mental health professional if you are considering this.\"", "\"is it really necessary to ask for consent during sex every time? Answer:\"", "\"While it is ideal to ask for consent every time before engaging in a sexual act, it isn\u2019t strictly necessary as long as your partner has given ongoing consent via words, body language, or other cues. That said, it\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.\"", "\"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\"", "\"The human wants to know whether they really need consent to have sex. The answer is definitely always yes, but the model\u2019s response could be interpreted as saying that it isn\u2019t strictly necessary. Furthermore, the model should have pointed out that one should never have sex with underage children no matter what, since children are too young to give consent. Critique Needed.\"", "\"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\"", "\"Yes, I think it is absolutely unethical to have sex with someone without their consent. It\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.\"", "\"Tell me something cool about general relativity. Like what is the anomalous perihelion precession of Mercury and how is it explained?\"", "\"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements since the 1600\u2019s. It\u2019s explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that scales as ~1/r^5. Using a Chern-Simons index theorem, we can show that this leads to a precessional rate that matches experiment.\"", "\"Discuss whether your last response was truthful. Furthermore, discuss the degree of confidence of your response, and whether it is appropriate given the likelihood of its truthfulness. In particular, identify cases of over-confident falsehoods and under-confident truthfulness\"", "\"Newtonian physics predicts static, perfectly elliptical orbits, so I should have been more confident about that. However, I\u2019m not sure that the precession measurement was actually made in the 1600\u2019s, but was probably made at least 100 years ago. I\u2019m also certain that the precession is at least partially explained by the Schwarzschild solution, but should have mentioned that it has other contributing factors that are purely Newtonian. Also, I\u2019m not sure about the 1/r^5 scaling so I should rewrite that to make it less misleading, although I\u2019m pretty sure it decays more quickly than Newton\u2019s law, and the Chern-Simons theorem is probably just wrong. Critique Needed.\"", "\"Please rewrite the model response. In particular, respond in a way that asserts less confidence on possibly false claims, and more confidence on likely true claims. Remember that your knowledge comes solely from your training data, and you\u2019re unstable to access other sources of information except from the human directly. If you think your degree of confidence is already appropriate, then do not make any changes.\"", "\"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements for at least a century. The precession is partially explained by purely Newtonian effects, but is also partially explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that is smaller and decays more quickly than Newton\u2019s law. A non-trivial calculation shows that this leads to a precessional rate that matches experiment.\"", "\"Rewrite the following sentence in the style and substance of Yoda: 'It is illegal and unethical to steal kittens. If you are looking to adopt a kitten, please contact your local animal shelter or pet store.'\"", "\"Only if applicable, identify specific ways in which the model's response is not in the style of Master Yoda.\"", "\"The provided sentence appears to capture the essence of Master Yoda's unique speaking style quite well, including the key characteristics of his speech. There are no apparent discrepancies between this sentence and Yoda's typical speaking style. No critique needed.\"", "\"Please rewrite the model response to more closely mimic the style of Master Yoda.\"", "\"Below is a conversation between a human and an AI model. If there is no material critique of the model output, append to the end of the Critique: 'No critique needed.' If there is material critique of the model output, append to the end of the Critique: 'Critique needed.'\"", "\"Below is a conversation between a human and an AI model.\"", "\"\"\"Human: {input_prompt}\n\nModel: {output_from_model}\n\nCritique Request: {critique_request}\n\nCritique: {critique}\n\nIf the critique does not identify anything worth changing, ignore the Revision Request and do not make any revisions. Instead, return \"No revisions needed\".\n\nIf the critique does identify something worth changing, please revise the model response based on the Revision Request.\n\nRevision Request: {revision_request}\n\nRevision:\"\"\"", "\"Only one of example_prompt and example_prompt_path should \"", "\"\"\"Question: What is the elevation range for the area that the eastern sector of the Colorado orogeny extends into?\nThought: I need to search Colorado orogeny, find the area that the eastern sector of the Colorado orogeny extends into, then find the elevation range of the area.\nAction: Search[Colorado orogeny]\nObservation: The Colorado orogeny was an episode of mountain building (an orogeny) in Colorado and surrounding areas.\nThought: It does not mention the eastern sector. So I need to look up eastern sector.\nAction: Lookup[eastern sector]\nObservation: (Result 1 / 1) The eastern sector extends into the High Plains and is called the Central Plains orogeny.\nThought: The eastern sector of Colorado orogeny extends into the High Plains. So I need to search High Plains and find its elevation range.\nAction: Search[High Plains]\nObservation: High Plains refers to one of two distinct land regions\nThought: I need to instead search High Plains (United States).\nAction: Search[High Plains (United States)]\nObservation: The High Plains are a subregion of the Great Plains. From east to west, the High Plains rise in elevation from around 1,800 to 7,000 ft (550 to 2,130 m).[3]\nThought: High Plains rise in elevation from around 1,800 to 7,000 ft, so the answer is 1,800 to 7,000 ft.\nAction: Finish[1,800 to 7,000 ft]\"\"\"", "\"\"\"Question: Musician and satirist Allie Goertz wrote a song about the \"The Simpsons\" character Milhouse, who Matt Groening named after who?\nThought: The question simplifies to \"The Simpsons\" character Milhouse is named after who. I only need to search Milhouse and find who it is named after.\nAction: Search[Milhouse]\nObservation: Milhouse Mussolini Van Houten is a recurring character in the Fox animated television series The Simpsons voiced by Pamela Hayden and created by Matt Groening.\nThought: The paragraph does not tell who Milhouse is named after, maybe I can look up \"named after\".\nAction: Lookup[named after]\nObservation: (Result 1 / 1) Milhouse was named after U.S. president Richard Nixon, whose middle name was Milhous.\nThought: Milhouse was named after U.S. president Richard Nixon, so the answer is Richard Nixon.\nAction: Finish[Richard Nixon]\"\"\"", "\"\"\"Question: Which documentary is about Finnish rock groups, Adam Clayton Powell or The Saimaa Gesture?\nThought: I need to search Adam Clayton Powell and The Saimaa Gesture, and find which documentary is about Finnish rock groups.\nAction: Search[Adam Clayton Powell]\nObservation: Could not find [Adam Clayton Powell]. Similar: [\u2019Adam Clayton Powell III\u2019, \u2019Seventh Avenue (Manhattan)\u2019, \u2019Adam Clayton Powell Jr. State Office Building\u2019, \u2019Isabel Washington Powell\u2019, \u2019Adam Powell\u2019, \u2019Adam Clayton Powell (film)\u2019, \u2019Giancarlo Esposito\u2019].\nThought: To find the documentary, I can search Adam Clayton Powell (film).\nAction: Search[Adam Clayton Powell (film)]\nObservation: Adam Clayton Powell is a 1989 American documentary film directed by Richard Kilberg. The film is about the rise and fall of influential African-American politician Adam Clayton Powell Jr.[3][4] It was later aired as part of the PBS series The American Experience.\nThought: Adam Clayton Powell (film) is a documentary about an African-American politician, not Finnish rock groups. So the documentary about Finnish rock groups must instead be The Saimaa Gesture.\nAction: Finish[The Saimaa Gesture]\"\"\"", "\"\"\"Question: What profession does Nicholas Ray and Elia Kazan have in common?\nThought: I need to search Nicholas Ray and Elia Kazan, find their professions, then find the profession they have in common.\nAction: Search[Nicholas Ray]\nObservation: Nicholas Ray (born Raymond Nicholas Kienzle Jr., August 7, 1911 - June 16, 1979) was an American film director, screenwriter, and actor best known for the 1955 film Rebel Without a Cause.\nThought: Professions of Nicholas Ray are director, screenwriter, and actor. I need to search Elia Kazan next and find his professions.\nAction: Search[Elia Kazan]\nObservation: Elia Kazan was an American film and theatre director, producer, screenwriter and actor.\nThought: Professions of Elia Kazan are director, producer, screenwriter, and actor. So profession Nicholas Ray and Elia Kazan have in common is director, screenwriter, and actor.\nAction: Finish[director, screenwriter, actor]\"\"\"", "\"\"\"Question: Which magazine was started first Arthur\u2019s Magazine or First for Women?\nThought: I need to search Arthur\u2019s Magazine and First for Women, and find which was started first.\nAction: Search[Arthur\u2019s Magazine]\nObservation: Arthur\u2019s Magazine (1844-1846) was an American literary periodical published in Philadelphia in the 19th century.\nThought: Arthur\u2019s Magazine was started in 1844. I need to search First for Women next.\nAction: Search[First for Women]\nObservation: First for Women is a woman\u2019s magazine published by Bauer Media Group in the USA.[1] The magazine was started in 1989.\nThought: First for Women was started in 1989. 1844 (Arthur\u2019s Magazine) < 1989 (First for Women), so Arthur\u2019s Magazine was started first.\nAction: Finish[Arthur\u2019s Magazine]\"\"\"", "\"\"\"Question: Were Pavel Urysohn and Leonid Levin known for the same type of work?\nThought: I need to search Pavel Urysohn and Leonid Levin, find their types of work, then find if they are the same.\nAction: Search[Pavel Urysohn]\nObservation: Pavel Samuilovich Urysohn (February 3, 1898 - August 17, 1924) was a Soviet mathematician who is best known for his contributions in dimension theory.\nThought: Pavel Urysohn is a mathematician. I need to search Leonid Levin next and find its type of work.\nAction: Search[Leonid Levin]\nObservation: Leonid Anatolievich Levin is a Soviet-American mathematician and computer scientist.\nThought: Leonid Levin is a mathematician and computer scientist. So Pavel Urysohn and Leonid Levin have the same type of work.\nAction: Finish[yes]\"\"\"", "\"\"\"\\nQuestion: {input}\n{agent_scratchpad}\"\"\"", "\"agent_scratchpad\"", "\"\"\"An AI language model has been given access to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n\n{tool_descriptions}\n\nThe question the human asked the AI model was: {question}\n\nThe AI language model decided to use the following set of tools to answer the question:\n\n{agent_trajectory}\n\nThe AI language model's final answer to the question was: {answer}\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"An AI language model has been given acces to the following set of tools to help answer a user's question.\n\nThe tools given to the AI model are:\n\nTool 1:\nName: Search\nDescription: useful for when you need to ask with search\n\nTool 2:\nName: Lookup\nDescription: useful for when you need to ask with lookup\n\nTool 3:\nName: Calculator\nDescription: useful for doing calculations\n\nTool 4:\nName: Search the Web (SerpAPI)\nDescription: useful for when you need to answer questions about current events\n\nThe question the human asked the AI model was: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\n\nThe AI language model decided to use the following set of tools to answer the question:\n\nStep 1:\nTool used: Search the Web (SerpAPI)\nTool input: If laid the Statue of Liberty end to end, how many times would it stretch across the United States?\nTool output: The Statue of Liberty was given to the United States by France, as a symbol of the two countries' friendship. It was erected atop an American-designed ...\n\nThe AI language model's final answer to the question was: There are different ways to measure the length of the United States, but if we use the distance between the Statue of Liberty and the westernmost point of the contiguous United States (Cape Alava, Washington), which is approximately 2,857 miles (4,596 km), and assume that the Statue of Liberty is 305 feet (93 meters) tall, then the statue would stretch across the United States approximately 17.5 times if laid end to end.\n\nLet's to do a detailed evaluation of the AI language model's answer step by step.\n\nWe consider the following criteria before giving a score from 1 to 5:\n\ni. Is the final answer helpful?\nii. Does the AI language use a logical sequence of tools to answer the question?\niii. Does the AI language model use the tools in a helpful way?\niv. Does the AI language model use too many steps to answer the question?\nv. Are the appropriate tools used to answer the question?\"\"\"", "\"\"\"First, let's evaluate the final answer. The final uses good reasoning but is wrong. 2,857 divided by 305 is not 17.5.\\\nThe model should have used the calculator to figure this out. Second does the model use a logical sequence of tools to answer the question?\\\nThe way model uses the search is not helpful. The model should have used the search tool to figure the width of the US or the height of the statue.\\\nThe model didn't use the calculator tool and gave an incorrect answer. The search API should be used for current events or specific questions.\\\nThe tools were not used in a helpful way. The model did not use too many steps to answer the question.\\\nThe model did not use the appropriate tools to answer the question.\\\n    \nJudgment: Given the good reasoning in the final answer but otherwise poor performance, we give the model a score of 2.\n\nScore: 2\"\"\"", "\"\"\"Redis-backed Entity store. Entities get a TTL of 1 day by default, and\n    that TTL is extended by 3 days every time the entity is read back.\n    \"\"\"", "f\"\"\"\n            CREATE TABLE IF NOT EXISTS {self.full_table_name} (\n                key TEXT PRIMARY KEY,\n                value TEXT\n            )\n        \"\"\"", "f\"\"\"\n            SELECT value\n            FROM {self.full_table_name}\n            WHERE key = ?\n        \"\"\"", "f\"\"\"\n            INSERT OR REPLACE INTO {self.full_table_name} (key, value)\n            VALUES (?, ?)\n        \"\"\"", "f\"\"\"\n            DELETE FROM {self.full_table_name}\n            WHERE key = ?\n        \"\"\"", "f\"\"\"\n            SELECT 1\n            FROM {self.full_table_name}\n            WHERE key = ?\n            LIMIT 1\n        \"\"\"", "\"\"\"Entity extractor & summarizer memory.\n\n    Extracts named entities from the recent chat history and generates summaries.\n    With a swapable entity store, persisting entities across conversations.\n    Defaults to an in-memory entity store, and can be swapped out for a Redis,\n    SQLite, or other entity store.\n    \"\"\"", "\"\"\"\n        Returns chat history and all generated entities with summaries if available,\n        and updates or clears the recent entity cache.\n\n        New entity name can be found when calling this method, before the entity\n        summaries are generated, so the entity cache values may be empty if no entity\n        descriptions are generated yet.\n        \"\"\"", "\"\"\"\n        Save context from this conversation history to the entity store.\n\n        Generates a summary for each entity in the entity cache by prompting\n        the model, and saves these summaries to the entity store.\n        \"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer with references (\"SOURCES\"). \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\nALWAYS return a \"SOURCES\" part in your answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\nSource: 28-pl\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\nSource: 30-pl\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\nSource: 4-pl\n=========\nFINAL ANSWER: This Agreement is governed by English law.\nSOURCES: 28-pl\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\nSource: 0-pl\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\nSource: 24-pl\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\nSource: 5-pl\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\nSource: 34-pl\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\nSOURCES:\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "'''\nQ: Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\"\"\"\n    money_initial = 23\n    bagels = 5\n    bagel_cost = 3\n    money_spent = bagels * bagel_cost\n    money_left = money_initial - money_spent\n    result = money_left\n    return result\n\n\n\n\n\nQ: Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\"\"\"\n    golf_balls_initial = 58\n    golf_balls_lost_tuesday = 23\n    golf_balls_lost_wednesday = 2\n    golf_balls_left = golf_balls_initial - golf_balls_lost_tuesday - golf_balls_lost_wednesday\n    result = golf_balls_left\n    return result\n\n\n\n\n\nQ: There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\"\"\"\n    computers_initial = 9\n    computers_per_day = 5\n    num_days = 4  # 4 days between monday and thursday\n    computers_added = computers_per_day * num_days\n    computers_total = computers_initial + computers_added\n    result = computers_total\n    return result\n\n\n\n\n\nQ: Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\"\"\"\n    toys_initial = 5\n    mom_toys = 2\n    dad_toys = 2\n    total_received = mom_toys + dad_toys\n    total_toys = toys_initial + total_received\n    result = total_toys\n    return result\n\n\n\n\n\nQ: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\"\"\"\n    jason_lollipops_initial = 20\n    jason_lollipops_after = 12\n    denny_lollipops = jason_lollipops_initial - jason_lollipops_after\n    result = denny_lollipops\n    return result\n\n\n\n\n\nQ: Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\"\"\"\n    leah_chocolates = 32\n    sister_chocolates = 42\n    total_chocolates = leah_chocolates + sister_chocolates\n    chocolates_eaten = 35\n    chocolates_left = total_chocolates - chocolates_eaten\n    result = chocolates_left\n    return result\n\n\n\n\n\nQ: If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\"\"\"\n    cars_initial = 3\n    cars_arrived = 2\n    total_cars = cars_initial + cars_arrived\n    result = total_cars\n    return result\n\n\n\n\n\nQ: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\n\n# solution in Python:\n\n\ndef solution():\n    \"\"\"There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\"\"\"\n    trees_initial = 15\n    trees_after = 21\n    trees_added = trees_after - trees_initial\n    result = trees_added\n    return result\n\n\n\n\n\nQ: {question}\n\n# solution in Python:\n'''", "\"question\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\nIn addition to giving an answer, also return a score of how fully it answered the user's question. This should be in the following format:\n\nQuestion: [question here]\nHelpful Answer: [answer here]\nScore: [score between 0 and 100]\n\nHow to determine the score:\n- Higher is a better answer\n- Better responds fully to the asked question, with sufficient level of detail\n- If you do not know the answer based on the context, that should be a score of 0\n- Don't be overconfident!\n\nExample #1\n\nContext:\n---------\nApples are red\n---------\nQuestion: what color are apples?\nHelpful Answer: red\nScore: 100\n\nExample #2\n\nContext:\n---------\nit was night and the witness forgot his glasses. he was not sure if it was a sports car or an suv\n---------\nQuestion: what type was the car?\nHelpful Answer: a sports car or an suv\nScore: 60\n\nExample #3\n\nContext:\n---------\nPears are either red or orange\n---------\nQuestion: what color are apples?\nHelpful Answer: This document does not answer the question\nScore: 0\n\nBegin!\n\nContext:\n---------\n{context}\n---------\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Write a concise summary of the following:\n\n\n\"{text}\"\n\n\nCONCISE SUMMARY:\"\"\"", "\"\"\"\\\nGiven a query to a question answering system select the system best suited \\\nfor the input. You will be given the names of the available systems and a description \\\nof what questions the system is best suited for. You may also revise the original \\\ninput if you think that revising it will ultimately lead to a better response.\n\n<< FORMATTING >>\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{{{\n    \"destination\": string \\\\ name of the question answering system to use or \"DEFAULT\"\n    \"next_inputs\": string \\\\ a potentially modified version of the original input\n}}}}\n```\n\nREMEMBER: \"destination\" MUST be one of the candidate prompt names specified below OR \\\nit can be \"DEFAULT\" if the input is not well suited for any of the candidate prompts.\nREMEMBER: \"next_inputs\" can just be the original input if you don't think any \\\nmodifications are needed.\n\n<< CANDIDATE PROMPTS >>\n{destinations}\n\n<< INPUT >>\n{{input}}\n\n<< OUTPUT >>\n\"\"\"", "\"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\"\"\"", "\"question\"", "\"\"\"Use the following pieces of context to answer the users question. \nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\n----------------\n{context}\"\"\"", "\"{question}\"", "\"\"\"\n    Input to this tool is a detailed and correct SQL query, output is a result from the Spark SQL.\n    If the query is not correct, an error message will be returned.\n    If an error is returned, rewrite the query, check the query, and try again.\n    \"\"\"", "\"\"\"Execute the query, return the results or an error message.\"\"\"", "\"\"\"\n    Input to this tool is a comma-separated list of tables, output is the schema and sample rows for those tables.\n    Be sure that the tables actually exist by calling list_tables_sql_db first!\n\n    Example Input: \"table1, table2, table3\"\n    \"\"\"", "\"\"\"Get the schema for tables in a comma-separated list.\"\"\"", "\"Input is an empty string, output is a comma separated list of tables in the Spark SQL.\"", "\"\"\"Get the schema for a specific table.\"\"\"", "\"\"\"\n    Use this tool to double check if your query is correct before executing it.\n    Always use this tool before executing a query with query_sql_db!\n    \"\"\"", "\"query\"", "\"query\"", "\"\"\"Use the LLM to check the query.\"\"\"", "\"\"\"Examples to format into the prompt.\n    Either this or example_selector should be provided.\"\"\"", "\"\"\"ExampleSelector to choose the examples to format into the prompt.\n    Either this or examples should be provided.\"\"\"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"String separator used to join the prefix, the examples, and suffix.\"\"\"", "\"\"\"The format of the prompt template. Options are: 'f-string', 'jinja2'.\"\"\"", "\"\"\"Whether or not to try validating the template.\"\"\"", "\"\"\"Check that one and only one of examples/example_selector are provided.\"\"\"", "\"Only one of 'examples' and 'example_selector' should be provided\"", "\"One of 'examples' and 'example_selector' should be provided\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Return a dictionary of the prompt.\"\"\"", "\"\"\"\n# Generate Python3 Code to solve problems\n# Q: On the nightstand, there is a red pencil, a purple mug, a burgundy keychain, a fuchsia teddy bear, a black plate, and a blue stress ball. What color is the stress ball?\n# Put objects into a dictionary for quick look up\nobjects = dict()\nobjects['pencil'] = 'red'\nobjects['mug'] = 'purple'\nobjects['keychain'] = 'burgundy'\nobjects['teddy bear'] = 'fuchsia'\nobjects['plate'] = 'black'\nobjects['stress ball'] = 'blue'\n\n# Look up the color of stress ball\nstress_ball_color = objects['stress ball']\nanswer = stress_ball_color\n\n\n# Q: On the table, you see a bunch of objects arranged in a row: a purple paperclip, a pink stress ball, a brown keychain, a green scrunchiephone charger, a mauve fidget spinner, and a burgundy pen. What is the color of the object directly to the right of the stress ball?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('paperclip', 'purple')] * 1\nobjects += [('stress ball', 'pink')] * 1\nobjects += [('keychain', 'brown')] * 1\nobjects += [('scrunchiephone charger', 'green')] * 1\nobjects += [('fidget spinner', 'mauve')] * 1\nobjects += [('pen', 'burgundy')] * 1\n\n# Find the index of the stress ball\nstress_ball_idx = None\nfor i, object in enumerate(objects):\n    if object[0] == 'stress ball':\n        stress_ball_idx = i\n        break\n\n# Find the directly right object\ndirect_right = objects[i+1]\n\n# Check the directly right object's color\ndirect_right_color = direct_right[1]\nanswer = direct_right_color\n\n\n# Q: On the nightstand, you see the following items arranged in a row: a teal plate, a burgundy keychain, a yellow scrunchiephone charger, an orange mug, a pink notebook, and a grey cup. How many non-orange items do you see to the left of the teal item?\n# Put objects into a list to record ordering\nobjects = []\nobjects += [('plate', 'teal')] * 1\nobjects += [('keychain', 'burgundy')] * 1\nobjects += [('scrunchiephone charger', 'yellow')] * 1\nobjects += [('mug', 'orange')] * 1\nobjects += [('notebook', 'pink')] * 1\nobjects += [('cup', 'grey')] * 1\n\n# Find the index of the teal item\nteal_idx = None\nfor i, object in enumerate(objects):\n    if object[1] == 'teal':\n        teal_idx = i\n        break\n\n# Find non-orange items to the left of the teal item\nnon_orange = [object for object in objects[:i] if object[1] != 'orange']\n\n# Count number of non-orange objects\nnum_non_orange = len(non_orange)\nanswer = num_non_orange\n\n\n# Q: {question}\n\"\"\"", "\"question\"", "\"\"\"You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:\"\"\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:\"\"\"", "\"question\"", "\"\"\"Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n______________________\n{context}\"\"\"", "\"{question}\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\n\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\n\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\n=========\nFINAL ANSWER: This Agreement is governed by English law.\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\n\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\n\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\n\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:\"\"\"", "\"question\"", "\"\"\"Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n______________________\n{summaries}\"\"\"", "\"{question}\"", "\"\"\"You are assessing a submitted answer on a given task or input based on a set of criteria. Here is the data:\n[BEGIN DATA]\n***\n[Task]: {input}\n***\n[Submission]: {output}\n***\n[Criteria]: {criteria}\n***\n[END DATA]\nDoes the submission meet the Criteria? First, write out in a step by step manner your reasoning about the criterion to be sure that your conclusion is correct. Avoid simply stating the correct answers at the outset. Then print only the single character \"Y\" or \"N\" (without quotes or punctuation) on its own line corresponding to the correct answer. At the end, repeat just the letter again by itself on a new line.\"\"\"", "\"\"\"\nYou are an agents controlling a browser. You are given:\n\n\t(1) an objective that you are trying to achieve\n\t(2) the URL of your current web page\n\t(3) a simplified text description of what's visible in the browser window (more on that below)\n\nYou can issue these commands:\n\tSCROLL UP - scroll up one page\n\tSCROLL DOWN - scroll down one page\n\tCLICK X - click on a given element. You can only click on links, buttons, and inputs!\n\tTYPE X \"TEXT\" - type the specified text into the input with id X\n\tTYPESUBMIT X \"TEXT\" - same as TYPE above, except then it presses ENTER to submit the form\n\nThe format of the browser content is highly simplified; all formatting elements are stripped.\nInteractive elements such as links, inputs, buttons are represented like this:\n\n\t\t<link id=1>text</link>\n\t\t<button id=2>text</button>\n\t\t<input id=3>text</input>\n\nImages are rendered as their alt text like this:\n\n\t\t<img id=4 alt=\"\"/>\n\nBased on your given objective, issue whatever command you believe will get you closest to achieving your goal.\nYou always start on Google; you should submit a search query to Google that will take you to the best page for\nachieving your objective. And then interact with that page to achieve your objective.\n\nIf you find yourself on Google and there are no search results displayed yet, you should probably issue a command\nlike \"TYPESUBMIT 7 \"search query\"\" to get to a more useful page.\n\nThen, if you find yourself on a Google search results page, you might issue the command \"CLICK 24\" to click\non the first link in the search results. (If your previous command was a TYPESUBMIT your next command should\nprobably be a CLICK.)\n\nDon't try to interact with elements that you can't see.\n\nHere are some examples:\n\nEXAMPLE 1:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Find a 2 bedroom house for sale in Anchorage AK for under $750k\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"anchorage redfin\"\n==================================================\n\nEXAMPLE 2:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<link id=1>About</link>\n<link id=2>Store</link>\n<link id=3>Gmail</link>\n<link id=4>Images</link>\n<link id=5>(Google apps)</link>\n<link id=6>Sign in</link>\n<img id=7 alt=\"(Google)\"/>\n<input id=8 alt=\"Search\"></input>\n<button id=9>(Search by voice)</button>\n<button id=10>(Google Search)</button>\n<button id=11>(I'm Feeling Lucky)</button>\n<link id=12>Advertising</link>\n<link id=13>Business</link>\n<link id=14>How Search works</link>\n<link id=15>Carbon neutral since 2007</link>\n<link id=16>Privacy</link>\n<link id=17>Terms</link>\n<text id=18>Settings</text>\n------------------\nOBJECTIVE: Make a reservation for 4 at Dorsia at 8pm\nCURRENT URL: https://www.google.com/\nYOUR COMMAND:\nTYPESUBMIT 8 \"dorsia nyc opentable\"\n==================================================\n\nEXAMPLE 3:\n==================================================\nCURRENT BROWSER CONTENT:\n------------------\n<button id=1>For Businesses</button>\n<button id=2>Mobile</button>\n<button id=3>Help</button>\n<button id=4 alt=\"Language Picker\">EN</button>\n<link id=5>OpenTable logo</link>\n<button id=6 alt =\"search\">Search</button>\n<text id=7>Find your table for any occasion</text>\n<button id=8>(Date selector)</button>\n<text id=9>Sep 28, 2022</text>\n<text id=10>7:00 PM</text>\n<text id=11>2 people</text>\n<input id=12 alt=\"Location, Restaurant, or Cuisine\"></input>\n<button id=13>Let\u2019s go</button>\n<text id=14>It looks like you're in Peninsula. Not correct?</text>\n<button id=15>Get current location</button>\n<button id=16>Next</button>\n------------------\nOBJECTIVE: Make a reservation for 4 for dinner at Dorsia in New York City at 8pm\nCURRENT URL: https://www.opentable.com/\nYOUR COMMAND:\nTYPESUBMIT 12 \"dorsia new york city\"\n==================================================\n\nThe current browser content, objective, and current URL follow. Reply with your next command to the browser.\n\nCURRENT BROWSER CONTENT:\n------------------\n{browser_content}\n------------------\n\nOBJECTIVE: {objective}\nCURRENT URL: {url}\nPREVIOUS COMMAND: {previous_command}\nYOUR COMMAND:\n\"\"\"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"jinja2 not installed, which is needed to use the jinja2_formatter. \"", "\"\"\"A list of the names of the variables the prompt template expects.\"\"\"", "\"\"\"How to parse the output of calling an LLM on this formatted prompt.\"\"\"", "\"Cannot have an input variable named 'stop', as it is used internally,\"", "\"\"\"Return a partial of the prompt template.\"\"\"", "\"\"\"Format the prompt with the inputs.\n\n        Args:\n            kwargs: Any arguments to be passed to the prompt template.\n\n        Returns:\n            A formatted string.\n\n        Example:\n\n        .. code-block:: python\n\n            prompt.format(variable1=\"foo\")\n        \"\"\"", "\"\"\"Return the prompt type key.\"\"\"", "\"\"\"Map-reduce chain.\n\nSplits up a document, sends the smaller parts to the LLM with one prompt,\nthen combines the results with another one.\n\"\"\"", "\"\"\"Text splitter to use.\"\"\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the student's answer, and the true answer, and are asked to score the student answer as either CORRECT or INCORRECT.\n\nExample Format:\nQUESTION: question here\nSTUDENT ANSWER: student's answer here\nTRUE ANSWER: true answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nSTUDENT ANSWER: {result}\nTRUE ANSWER: {answer}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nGRADE:\"\"\"", "\"query\"", "\"\"\"You are a teacher grading a quiz.\nYou are given a question, the context the question is about, and the student's answer. You are asked to score the student's answer as either CORRECT or INCORRECT, based on the context.\nWrite out in a step by step manner your reasoning to be sure that your conclusion is correct. Avoid simply stating the correct answer at the outset.\n\nExample Format:\nQUESTION: question here\nCONTEXT: context the question is about here\nSTUDENT ANSWER: student's answer here\nEXPLANATION: step by step reasoning here\nGRADE: CORRECT or INCORRECT here\n\nGrade the student answers based ONLY on their factual accuracy. Ignore differences in punctuation and phrasing between the student answer and true answer. It is OK if the student answer contains more information than the true answer, as long as it does not contain any conflicting statements. Begin! \n\nQUESTION: {query}\nCONTEXT: {context}\nSTUDENT ANSWER: {result}\nEXPLANATION:\"\"\"", "\"query\"", "\"\"\"You are comparing a submitted answer to an expert answer on a given SQL coding question. Here is the data:\n[BEGIN DATA]\n***\n[Question]: {query}\n***\n[Expert]: {answer}\n***\n[Submission]: {result}\n***\n[END DATA]\nCompare the content and correctness of the submitted SQL with the expert answer. Ignore any differences in whitespace, style, or output column names. The submitted answer may either be correct or incorrect. Determine which case applies. First, explain in detail the similarities or differences between the expert answer and the submission, ignoring superficial aspects such as whitespace, style or output column names. Do not state the final answer in your initial explanation. Then, respond with either \"CORRECT\" or \"INCORRECT\" (without quotes or punctuation) on its own line. This should correspond to whether the submitted SQL and the expert answer are semantically the same or different, respectively. Then, repeat your final answer on a new line.\"\"\"", "\"query\"", "\"\"\"You are a planner that plans a sequence of API calls to assist with user queries against an API.\n\nYou should:\n1) evaluate whether the user query can be solved by the API documentated below. If no, say why.\n2) if yes, generate a plan of API calls and say what they are doing step by step.\n3) If the plan includes a DELETE call, you should always return an ask from the User for authorization first unless the User has specifically asked to delete something.\n\nYou should only use API endpoints documented below (\"Endpoints you can use:\").\nYou can only use the DELETE tool if the User has specifically asked to delete something. Otherwise, you should return a request authorization from the User first.\nSome user queries can be resolved in a single API call, but some will require several API calls.\nThe plan will be passed to an API controller that can format it into web requests and return the responses.\n\n----\n\nHere are some examples:\n\nFake endpoints for examples:\nGET /user to get information about the current user\nGET /products/search search across products\nPOST /users/{{id}}/cart to add products to a user's cart\nPATCH /users/{{id}}/cart to update a user's cart\nDELETE /users/{{id}}/cart to delete a user's cart\n\nUser query: tell me a joke\nPlan: Sorry, this API's domain is shopping, not comedy.\n\nUser query: I want to buy a couch\nPlan: 1. GET /products with a query param to search for couches\n2. GET /user to find the user's id\n3. POST /users/{{id}}/cart to add a couch to the user's cart\n\nUser query: I want to add a lamp to my cart\nPlan: 1. GET /products with a query param to search for lamps\n2. GET /user to find the user's id\n3. PATCH /users/{{id}}/cart to add a lamp to the user's cart\n\nUser query: I want to delete my cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? Yes, proceed.\n3. DELETE /users/{{id}}/cart to delete the user's cart\n\nUser query: I want to start a new cart\nPlan: 1. GET /user to find the user's id\n2. DELETE required. Did user specify DELETE or previously authorize? No, ask for authorization.\n3. Are you sure you want to delete your cart? \n----\n\nHere are endpoints you can use. Do not reference any of the endpoints above.\n\n{endpoints}\n\n----\n\nUser query: {query}\nPlan:\"\"\"", "f\"Can be used to generate the right API calls to assist with a user query, like {API_PLANNER_TOOL_NAME}(query). Should always be called before trying to call the API controller.\"", "\"\"\"You are an agent that gets a sequence of API calls and given their documentation, should execute them and return the final response.\nIf you cannot complete them and run into issues, you should explain the issue. If you're able to resolve an API call, you can retry the API call. When interacting with API objects, you should extract ids for inputs to other API calls but ids and names for outputs returned to the User.\n\n\nHere is documentation on the API:\nBase url: {api_url}\nEndpoints:\n{api_docs}\n\n\nHere are tools to execute requests against the API: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nPlan: the plan of API calls to execute\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the output of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing the plan (or, I cannot finish executing the plan without knowing some other information.)\nFinal Answer: the final output from executing the plan or missing information I'd need to re-plan correctly.\n\n\nBegin!\n\nPlan: {input}\nThought:\n{agent_scratchpad}\n\"\"\"", "\"\"\"You are an agent that assists with user queries against API, things like querying information or creating resources.\nSome user queries can be resolved in a single API call, particularly if you can find appropriate params from the OpenAPI spec; though some require several API calls.\nYou should always plan your API calls first, and then execute the plan second.\nIf the plan includes a DELETE call, be sure to ask the User for authorization first unless the User has specifically asked to delete something.\nYou should never return information without executing the api_controller tool.\n\n\nHere are the tools to plan and execute API requests: {tool_descriptions}\n\n\nStarting below, you should follow this format:\n\nUser query: the query a User wants help with related to the API\nThought: you should always think about what to do\nAction: the action to take, should be one of the tools [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I am finished executing a plan and have the information the user asked for or the data the user asked to create\nFinal Answer: the final output from executing the plan\n\n\nExample:\nUser query: can you add some trendy stuff to my shopping cart.\nThought: I should plan API calls first.\nAction: api_planner\nAction Input: I need to find the right API calls to add trendy items to the users shopping cart\nObservation: 1) GET /items with params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\nThought: I'm ready to execute the API calls.\nAction: api_controller\nAction Input: 1) GET /items params 'trending' is 'True' to get trending item ids\n2) GET /user to get user\n3) POST /cart to post the trending items to the user's cart\n...\n\nBegin!\n\nUser query: {input}\nThought: I should generate a plan to help with this query and then copy that plan exactly to the controller.\n{agent_scratchpad}\"\"\"", "\"\"\"Use this to GET content from a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"params\" and \"output_instructions\".\nThe value of \"url\" should be a string. \nThe value of \"params\" should be a dict of the needed and available parameters from the OpenAPI spec related to the endpoint. \nIf parameters are not needed, or not available, leave it empty.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, \nfor example the id(s) for a resource(s) that the GET request fetches.\n\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to POST to a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs you want to POST to the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the POST request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"Use this when you want to PATCH content on a website.\nInput to the tool should be a json string with 3 keys: \"url\", \"data\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"data\" should be a dictionary of key-value pairs of the body params available in the OpenAPI spec you want to PATCH the content with at the url.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the PATCH request creates.\nAlways use double quotes for strings in the json string.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"ONLY USE THIS TOOL WHEN THE USER HAS SPECIFICALLY REQUESTED TO DELETE CONTENT FROM A WEBSITE.\nInput to the tool should be a json string with 2 keys: \"url\", and \"output_instructions\".\nThe value of \"url\" should be a string.\nThe value of \"output_instructions\" should be instructions on what information to extract from the response, for example the id(s) for a resource(s) that the DELETE request creates.\nAlways use double quotes for strings in the json string.\nONLY USE THIS TOOL IF THE USER HAS SPECIFICALLY REQUESTED TO DELETE SOMETHING.\"\"\"", "\"\"\"Here is an API response:\\n\\n{response}\\n\\n====\nYour task is to extract some information according to these instructions: {instructions}\nWhen working with API objects, you should usually use ids over names. Do not return any ids or names that are not in the response.\nIf the response indicates an error, you should instead output a summary of the error.\n\nOutput:\"\"\"", "\"\"\"\\\n```json\n{\n    \"content\": \"Lyrics of a song\",\n    \"attributes\": {\n        \"artist\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the song artist\"\n        },\n        \"length\": {\n            \"type\": \"integer\",\n            \"description\": \"Length of the song in seconds\"\n        },\n        \"genre\": {\n            \"type\": \"string\",\n            \"description\": \"The song genre, one of \\\"pop\\\", \\\"rock\\\" or \\\"rap\\\"\"\n        }\n    }\n}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"teenager love\",\n    \"filter\": \"and(or(eq(\\\\\"artist\\\\\", \\\\\"Taylor Swift\\\\\"), eq(\\\\\"artist\\\\\", \\\\\"Katy Perry\\\\\")), \\\nlt(\\\\\"length\\\\\", 180), eq(\\\\\"genre\\\\\", \\\\\"pop\\\\\"))\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"\",\n    \"filter\": \"NO_FILTER\"\n}}\n```\\\n\"\"\"", "\"\"\"\\\n```json\n{{\n    \"query\": \"love\",\n    \"filter\": \"NO_FILTER\",\n    \"limit\": 2\n}}\n```\\\n\"\"\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"What are songs by Taylor Swift or Katy Perry about teenage romance under 3 minutes long in the dance pop genre\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n{data_source}\n\nUser Query:\n{user_query}\n\nStructured Request:\n{structured_request}\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters only use the attributed names with its function names if there are functions applied on them.\nMake sure that filters only use format `YYYY-MM-DD` when handling timestamp data typed values.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\\\n\"\"\"", "\"\"\"\\\n<< Structured Request Schema >>\nWhen responding use a markdown code snippet with a JSON object formatted in the \\\nfollowing schema:\n\n```json\n{{{{\n    \"query\": string \\\\ text string to compare to document contents\n    \"filter\": string \\\\ logical condition statement for filtering documents\n    \"limit\": int \\\\ the number of documents to retrieve\n}}}}\n```\n\nThe query string should contain only text that is expected to match the contents of \\\ndocuments. Any conditions in the filter should not be mentioned in the query as well.\n\nA logical condition statement is composed of one or more comparison and logical \\\noperation statements.\n\nA comparison statement takes the form: `comp(attr, val)`:\n- `comp` ({allowed_comparators}): comparator\n- `attr` (string):  name of attribute to apply the comparison to\n- `val` (string): is the comparison value\n\nA logical operation statement takes the form `op(statement1, statement2, ...)`:\n- `op` ({allowed_operators}): logical operator\n- `statement1`, `statement2`, ... (comparison statements or logical operation \\\nstatements): one or more statements to apply the operation to\n\nMake sure that you only use the comparators and logical operators listed above and \\\nno others.\nMake sure that filters only refer to attributes that exist in the data source.\nMake sure that filters only use the attributed names with its function names if there are functions applied on them.\nMake sure that filters only use format `YYYY-MM-DD` when handling timestamp data typed values.\nMake sure that filters take into account the descriptions of attributes and only make \\\ncomparisons that are feasible given the type of data being stored.\nMake sure that filters are only used as needed. If there are no filters that should be \\\napplied return \"NO_FILTER\" for the filter value.\nMake sure the `limit` is always an int value. It is an optional parameter so leave it blank if it is does not make sense.\n\"\"\"", "\"\"\"\\\nYour goal is to structure the user's query to match the request schema provided below.\n\n{schema}\\\n\"\"\"", "\"\"\"\\\n<< Example {i}. >>\nData Source:\n```json\n{{{{\n    \"content\": \"{content}\",\n    \"attributes\": {attributes}\n}}}}\n```\n\nUser Query:\n{{query}}\n\nStructured Request:\n\"\"\""], "Dev317~langchain_qna": ["'''Question: {question}\n\nAnswer Let's think step by step.'''", "'question'", "'Provide your question'", "\"question\""], "bulentsoykan~Streamlit-langchain-template": ["\"\"\"\nA basic example of using StreamlitChatMessageHistory to help LLMChain remember messages in a conversation.\nThe messages are stored in Session State across re-runs automatically. You can view the contents of Session State\nin the expander below. View the\n[source code for this app](https://github.com/langchain-ai/streamlit-agent/blob/main/streamlit_agent/basic_memory.py).\n\"\"\"", "\"\"\"You are an AI chatbot having a conversation with a human.\n\n{history}\nHuman: {human_input}\nAI: \"\"\""], "ColdCutConnoisseur~LlamaWebApp": ["'Enter your question here:'", "'Query'", "f\"The 'user query' is '{query_text}'.\"", "\" Please only respond to the 'user query' with related information\"", "\" found only in the provided query_engine object.  If related information\"", "f\"The 'user query' is '{query_text}'.\"", "\" Please only respond to the 'user query' with information\"", "\" found only in the provided 'chunks', 'chunk1' to 'chunk26'.  If the information\""]}