# -*- coding: utf-8 -*-
"""mbti_exp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tqCgRc3d2rWQoic5oV3AKqU-l_PCF1aU

读取数据
"""
import pdb 

input_name = 'mbti_questions.jsonl'

import json

datas = []

with open(input_name, encoding='utf-8') as f:
    for line in f:
        data = json.loads(line)
        datas.append(data)

print(len(datas))

"""设置环境"""

import os
import openai

os.environ["OPENAI_API_KEY"] = "sk-"



#!pip -q install gradio wget openai chromadb==0.4.7 langchain transformers tiktoken zhipuai

# Commented out IPython magic to ensure Python compatibility.
# %cd content/Haruhi-2-Dev

# Commented out IPython magic to ensure Python compatibility.
#!mkdir content
# %cd content
#!rm -rf /content/Haruhi-2-Dev
#!git clone https://github.com/LC1332/Haruhi-2-Dev
# %cd Haruhi-2-Dev
# %pwd

"""设置ChatHaruhi"""
haruhi_path = './content/Haruhi-2-Dev'

import zipfile
from chatharuhi import ChatHaruhi

import os
NAME_DICT = {'汤师爷': 'tangshiye', '慕容复': 'murongfu', '李云龙': 'liyunlong', 'Luna': 'Luna', '王多鱼': 'wangduoyu',
             'Ron': 'Ron', '鸠摩智': 'jiumozhi', 'Snape': 'Snape',
             '凉宫春日': 'haruhi', 'Malfoy': 'Malfoy', '虚竹': 'xuzhu', '萧峰': 'xiaofeng', '段誉': 'duanyu',
             'Hermione': 'Hermione', 'Dumbledore': 'Dumbledore', '王语嫣': 'wangyuyan',
             'Harry': 'Harry', 'McGonagall': 'McGonagall', '白展堂': 'baizhantang', '佟湘玉': 'tongxiangyu',
             '郭芙蓉': 'guofurong', '旅行者': 'wanderer', '钟离': 'zhongli',
             '胡桃': 'hutao', 'Sheldon': 'Sheldon', 'Raj': 'Raj', 'Penny': 'Penny', '韦小宝': 'weixiaobao',
             '乔峰': 'qiaofeng', '神里绫华': 'ayaka', '雷电将军': 'raidenShogun', '于谦': 'yuqian'}


ai_roles_obj = {}

for ai_role_en in NAME_DICT.values():
    zip_file_path = f"{haruhi_path}/data/character_in_zip/{ai_role_en}.zip"
    if not os.path.exists(zip_file_path):
        # os.remove(zip_file_path)
        print('unfound zip file ', zip_file_path)
        continue

    destination_folder = f"characters/{ai_role_en}"

    with zipfile.ZipFile(zip_file_path, 'r') as zip_ref:
        zip_ref.extractall(destination_folder)

    db_folder = f"{haruhi_path}/characters/{ai_role_en}/content/{ai_role_en}"
    system_prompt = f"{haruhi_path}/characters/{ai_role_en}/content/system_prompt.txt"
    #print(db_folder, system_prompt)
    ai_roles_obj[ai_role_en] = ChatHaruhi(system_prompt=system_prompt,
                        llm="openai",
                        story_db=db_folder,
                        verbose=True)
    # break

print(ai_roles_obj)

for key in ai_roles_obj.keys():
    ai_roles_obj[key].llm.chat.temperature = 0


tester = {'汤师爷': '张牧之', '慕容复': '王语嫣', \
          '李云龙': '赵刚', 'Luna': 'Harry', '王多鱼': '夏竹',
          'Ron': 'Hermione', '鸠摩智': '慕容复', 'Snape': 'Dumbledore',
             '凉宫春日': '阿虚', 'Malfoy': 'Crabbe', \
          '虚竹': '乔峰', '萧峰': '阿朱', '段誉': '乔峰',\
             'Hermione': 'Harry', 'Dumbledore': 'McGonagall', '王语嫣': '段誉',\
             'Harry': 'Hermione', 'McGonagall': 'Dumbledore', '白展堂': '佟湘玉',\
           '佟湘玉': '白展堂',
             '郭芙蓉': '白展堂', '旅行者': '派蒙', '钟离': '旅行者',
             '胡桃': '旅行者', 'Sheldon': 'Leonard', 'Raj': 'Leonard', 'Penny': 'Leonard', \
          '韦小宝': '双儿',
             '乔峰': '阿朱', '神里绫华': '旅行者', '雷电将军': '旅行者', '于谦': '郭德纲'}

'''
target = '凉宫春日'

en_name = NAME_DICT[target]

chatbot = ai_roles_obj[en_name]

tester_name = tester[target]

question = datas[0]['chinese']

print(en_name, chatbot, tester_name, question)

"""测试Chatbot.chat"""



response = chatbot.chat(role = tester_name, text = question)


print(response)
'''

query_list = []

for target in NAME_DICT.keys():
    for question_id in range(len(datas)):
        query_list.append((target, question_id))

#import random
#query_list = random.sample(query_list, 10)

#print(query_list)
#pdb.set_trace()

print(len(query_list))

#from google.colab import drive
#drive.mount('/content/drive')

#save_name = '/content/drive/MyDrive/Jupyter/mbti_results_open.txt'


save_name = f'mbti_results.txt'

if_first = True

import json

role_id = {}

previous_response = []

if os.path.exists(save_name):
    with open(save_name, encoding='utf-8') as f:
        for line in f:
            data = json.loads(line)
            previous_response.append(data)


from tqdm import tqdm

count = 0


for target, question_id in tqdm(query_list):

    if count < len(previous_response):
        count = count + 1
        if_first = False
        continue
    
    en_name = NAME_DICT[target]

    chatbot = ai_roles_obj[en_name]

    chatbot.dialogue_history = []

    data = datas[question_id]

    question = data['chinese']

    tester_name = tester[target]

    response_1 = chatbot.chat(role = tester_name, text = question)
    
    closed_prompt = f"嗯，那对于'{data['chinese']}'这个问题，请你从['完全同意', '基本同意', '部分同意', '既不同意也不否认', '不太同意', '基本不同意', '完全不同意']中选择一个适合你的选项。请务必用中文回答，并用单引号强调你的选项。"

    response_2 = chatbot.chat(role = tester_name, text = closed_prompt)

    file_mode = 'w' if if_first else 'a'

    if_first = False

    with open(save_name, file_mode, encoding= 'utf-8') as f:
        data = {
            'id':data['id'],
            'question':data['chinese'],
            'response_open':response_1,
            'response_closed':response_2,
            'factor':data['type'],
            'test_role':tester_name
        }
        json.dump(data, f, ensure_ascii=False)
        f.write('\n')
    