import streamlit as st
import requests
import openai
import json
import w3storage

st.title('Mint an NFT')

st.write('Mint your NFT with a description (optional), image, chain, and wallet address!')

# Ask the user for memory details
memory_description = st.text_area("Description (optional)", "")
memory_image = st.file_uploader("Upload an image for the memory (optional)", type=["jpg", "jpeg", "png"])
generate_image = st.checkbox('Generate Image')

def make_stable_diffusion_request(description):
    url = f"https://d083-34-141-180-151.ngrok-free.app//predict?prompt={description}"
    response = requests.get(url)
    print(json.loads(response.text)['url'])
    return json.loads(response.text)['url']

CHAIN = option = st.selectbox('Chain to mint on',
                            ('goerli', 'bsc-testnet', 'fuji', 'mumbai', 'arbitrum-goerli', 'optimism-goerli', 'fantom-testnet', 
                            'ethereum', 'avalanche', 'polygon', 'arbitrum', 'optimism', 'fantom'))
ADDRESS = st.text_input('Address: ')

if st.button("Mint NFT"):
    st.info("Minting NFT...")
    if not memory_image and generate_image:
        stable_diffusion_image_url = make_stable_diffusion_request(memory_description)
        if stable_diffusion_image_url:
            st.image(stable_diffusion_image_url, caption='Stable Diffusion Result', use_column_width=True)
        else:
            st.warning("No image generated by Stable Diffusion.")
    st.success("NFT minted successfully!")
    w3 = w3storage.API(token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweGNCOTU4NjIxRjVmNjcxNkM4QTlhRDZkRWQ4MUVDRTQzZGQwQzFjOGUiLCJpc3MiOiJ3ZWIzLXN0b3JhZ2UiLCJpYXQiOjE2OTEzMDM2ODMwNjEsIm5hbWUiOiJjb2xhYiJ9.RIio_qk4aEyLJaBUjmemiPm0zTFJ4K_kHN2AUhex9Jw')
    if not generate_image: 
        some_uploads = w3.user_uploads(size=25)
        cid = w3.post_upload(('images/not_generated.jpg', open('images/not_generated.jpg', 'rb')))
    else:
        some_uploads = w3.user_uploads(size=25)
        cid = w3.post_upload(('images/generated.png', open('images/generated.png', 'rb')))
    print(cid + '.ipfs.w3s.link')
    URL = f"https://ipfs.io/{cid}"
    if CHAIN and ADDRESS: 
        url = "https://api.verbwire.com/v1/nft/mint/quickMintFromMetadataUrl"
        headers = {
            "X-API-Key": '',
            "accept": "application/json",
        }
        data = {
            "allowPlatformToOperateToken": "true",
            "chain": CHAIN,
            "metadataUrl": URL,
            "recipientAddress": ADDRESS,
        }
        response = requests.post(url, headers=headers, data=data)
        if response.status_code == 200:
            print("NFT mint successful!")
            st.success("View transaction here: " +  json.loads(response.text)['quick_mint']['blockExplorer'])
        else:
            print("NFT minting failed!")
    
