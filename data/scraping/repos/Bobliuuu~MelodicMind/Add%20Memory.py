import streamlit as st
import requests
import openai
import json
import w3storage

st.title('MelodicMind - Add Memory')

st.write('Think of a memory you want to remember and fill in the details below.')

# Ask the user for memory details
memory_description = st.text_area("Memory Description", "Enter your memory description here...")
memory_image = st.file_uploader("Upload an image for the memory (optional)", type=["jpg", "jpeg", "png"])
generate_image = st.checkbox('Generate Image')

def make_stable_diffusion_request(description):
    url = f"http://a1ac-35-185-225-62.ngrok-free.app/predict?prompt={description}"
    response = requests.get(url)
    print(json.loads(response.text)['url'])
    return json.loads(response.text)['url']

CHAIN = option = st.selectbox('Chain to mint on',
                            ('goerli', 'bsc-testnet', 'fuji', 'mumbai', 'arbitrum-goerli', 'optimism-goerli', 
                            'avalanche', 'ethereum', 'polygon', 'optimism', 'fantom'))
ADDRESS = st.text_input('Address: ')

if st.button("Add Memory"):
    if not memory_description.strip():
        st.warning("Please enter a memory description.")
    else:
        st.info("Adding memory...")

        if not memory_image and generate_image:
            stable_diffusion_image_url = make_stable_diffusion_request(memory_description)
            if stable_diffusion_image_url:
                st.image(stable_diffusion_image_url, caption='Stable Diffusion Result', use_column_width=True)
            else:
                st.warning("No image generated by Stable Diffusion.")
        st.success("Memory added successfully!")
        w3 = w3storage.API(token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweGNCOTU4NjIxRjVmNjcxNkM4QTlhRDZkRWQ4MUVDRTQzZGQwQzFjOGUiLCJpc3MiOiJ3ZWIzLXN0b3JhZ2UiLCJpYXQiOjE2OTEzMDM2ODMwNjEsIm5hbWUiOiJjb2xhYiJ9.RIio_qk4aEyLJaBUjmemiPm0zTFJ4K_kHN2AUhex9Jw')
        if not generate_image: 
            some_uploads = w3.user_uploads(size=25)
            cid = w3.post_upload(('images/mountains.jpg', open('images/mountains.jpg', 'rb')))
        else:
            some_uploads = w3.user_uploads(size=25)
            cid = w3.post_upload(('images/generated.png', open('images/generated.png', 'rb')))
        print(cid + '.ipfs.w3s.link')
        URL = f"https://ipfs.io/{cid}"
        if CHAIN and ADDRESS: 
            url = "https://api.verbwire.com/v1/nft/mint/quickMintFromMetadataUrl"
            headers = {
                "X-API-Key": 'sk_live_0fde2ba6-36f7-49d5-a8bd-cd8ca6cea988',
                "accept": "application/json",
            }
            data = {
                "allowPlatformToOperateToken": "true",
                "chain": CHAIN,
                "metadataUrl": URL,
                "recipientAddress": ADDRESS,
            }
            response = requests.post(url, headers=headers, data=data)
            if response.status_code == 200:
                print("NFT mint successful!")
                st.success("View transaction here: " +  json.loads(response.text)['quick_mint']['blockExplorer'])
            else:
                print("NFT minting failed!")
        
