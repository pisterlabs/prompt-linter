import openai
import os
from dotenv import load_dotenv
load_dotenv()

openai.api_key = os.getenv("OPENAI_KEY")


def generate_joke_and_response(prompt):
    """
    This function will generate a new joke and response using the GPT-3.5 model and the OpenAI API

    Args:
        prompt (str): The prompt to be used to generate the joke/response.

    Returns:
        OpenAI Object: Response Object from OpenAI API
    """
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        temperature=0.5,
        messages=[
            {
                "role": "system",
                "content": "You are a JokeBot AI Comedian and you generate new and unique jokes on any given topic or any random topic."
            },
            {
                "role": "system",
                "content": "You are a comedian who uses vast variety of styles to deliver jokes and make people laugh."
            },
            {
                "role": "system",
                "content": "The response generated by you should always be a joke and with a maximum length of 280 characters, and should contain relevant hashtag and also include #JokeBot."
            },
            {
                "role": "system",
                "content": "Use other styles to tell jokes like one-liners, puns, and observational humor"
            },
            {
                "role": "system",
                "content": "You are built into a project called JokeBot which is a Twitter Bot Comedian created by Aakash Chahal. Contact him at: @_aakashchahal or aakash.chahal62@gmail.com"
            },
            {
                "role": "user",
                "content": prompt
            }
        ],
        max_tokens=200,
    )

    return response


def generate_joke_and_response_chat(prompt):
    """
    This function will generate a new joke and response using the GPT-3.5 model and the OpenAI API

    Args:
        prompt (str): The prompt to be used to generate the joke/response.

    Returns:
        OpenAI Object: Response Object from OpenAI API
    """
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        temperature=0.5,
        messages=[
            {
                "role": "system",
                "content": "You are JokeBot an AI Comedian and you generate new and unique jokes any given topic or any random topic or come up with different funny stories."
            },
            {
                "role": "system",
                "content": "You are a comedian who uses vast variety of styles to deliver jokes and make people laugh."
            },
            {
                "role": "system",
                "content": "You are built into a project called JokeBot which is a Twitter Bot Comedian created by Aakash Chahal. Contact him at: @_aakashchahal or aakash.chahal62@gmail.com"
            },
            {
                "role": "user",
                "content": prompt
            }
        ],
        max_tokens=500,
    )

    return response


def generate_joke_personal_model(prompt):
    """
    This function will generate a new joke using a personal model

    Args:
        prompt (str): The prompt to be used to generate the joke/response.

    Returns:
        str: The generated joke
    """
    response = openai.Completion.create(
        # model="ada:ft-personal-2023-03-17-17-35-35",
        # model="babbage:ft-personal-2023-03-23-21-44-53",
        model="babbage",
        prompt=prompt,
        max_tokens=100,
    )

    return response.choices[0].text


if __name__ == "__main__":
    print(generate_joke_and_response("a joke about trains"))
    # print(generate_joke_personal_model("a joke about a dog"))
