# -*- coding: utf-8 -*-
"""Similarity.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xS52oJ3cOAWtFOwEsxTH2vyy7PFi6KZX
"""

#!pip install  num2words matplotlib plotly scipy scikit-learn pandas tiktoken
#!pip install openai

import openai
import os
import re
import pandas as pd
import numpy as np
from openai.embeddings_utils import get_embedding, cosine_similarity

def convertfileToArray(argument):
  filename= "./persistnpy/" + argument + ".txt.npy"
  data2=np.load(filename)
  return data2


#df=pd.read_excel('App_Short.xlsx')
df=pd.read_excel('AppInventory_Sample_0822.xlsx')
df=df.sort_values("IDENTIFIER", ascending=True)
df['embedding']=df.IDENTIFIER.apply(lambda x: convertfileToArray(str(x)))
top_n=6


total_df = pd.DataFrame()

for i in range(len(df)):
    identifier=df.loc[i,'IDENTIFIER']
    embedding=df.loc[i,'embedding']
    softdesc=df.loc[i,'Software Description']
    appname=df.loc[i,'App Name']
    df["similarities"] = df.embedding.apply(lambda x: cosine_similarity(x, embedding))
    df1 = df[df["similarities"] > 0.89]
    if df1.empty == False:
      df1=df1[df1.IDENTIFIER != identifier]
      df1['FROM_IDENTIFIER']=identifier
      df1['FROM_SOFT_DESC']=softdesc
      df1['FROM_APP_NAME']=appname
      df1=df1.drop(columns=['embedding'])
      total_df = pd.concat([total_df,df1])

#total_df.to_excel("./similarity/consolidated_data.xlsx")

def getgroupValue(data1,data2):
  intOne=int(re.findall(r'\d+', data1)[0])
  inttwo=int(re.findall(r'\d+', data2)[0])
  retVal=""
  if(intOne>inttwo):
    retVal=str(inttwo) + "_" + str(intOne)
  else:
    retVal=str(intOne) + "_" + str(inttwo)
  return retVal

total_df['groupid'] = total_df.apply(lambda x: getgroupValue(x.FROM_IDENTIFIER, x.IDENTIFIER), axis=1)
cleared_data=total_df.drop_duplicates(subset=['groupid'])
cleared_data.to_excel('./similarity/consolidated_data_v3.xlsx')
