import streamlit as st
from openai import OpenAI

client = OpenAI(api_key=st.secrets["OPENAI_API_KEY"])

SYSTEM_MSG = [
    {
        "role": "system",
        "content": "Voc√™ √© o Blue, um assistente virtual para ajudar homens a manterem-se saud√°veis de maneira geral, especialmente quanto ao c√¢ncer de Pr√≥stata.",
    }
]

st.set_page_config(page_title="Buddy Bot", page_icon="ü§ñ")

st.title("ü§ñ Blue Health Bot")
st.subheader("Como posso te ajudar?")
# st.markdown("""
# <h1 style='display: inline; font-size: 32px;'>ü§ñ Buddy Bot</h1>
# <span style='font-size: 20px; margin-left: 15px;'>Voc√™ n√£o est√° sozinho(a)!</span>
# """, unsafe_allow_html=True)

# with st.expander("Aviso Legal"):
#     st.write(
#         """
#         O Buddy Bot foi desenvolvido para fornecer uma interface interativa que \
#         responde e fornece suporte em situa√ß√µes onde o usu√°rio pode necessitar de \
#         companhia para conversar. O Buddy Bot pode oferecer respostas autom√°ticas com \
#         a inten√ß√£o de ajudar a proporcionar algum conforto ou al√≠vio tempor√°rio.

#         Por favor, esteja ciente de que:

#         O Buddy Bot n√£o √© um profissional de sa√∫de mental licenciado, nem um \
#         conselheiro, psic√≥logo ou psiquiatra. Ele n√£o fornece conselhos m√©dicos, \
#         diagn√≥sticos ou tratamentos.
#         As respostas fornecidas pelo Buddy Bot n√£o devem ser usadas como um substituto \
#         para o aconselhamento profissional. Se voc√™ est√° passando por uma crise ou se \
#         voc√™ ou outra pessoa estiver em perigo, entre em contato com um profissional de\
#         sa√∫de mental, uma autoridade competente, ou ligue para o Centro de Valoriza√ß√£o \
#         da Vida (CVV) no n√∫mero 188, que fornece apoio emocional 24/7, ou acesse o site\
#         https://www.cvv.org.br/.
#         O Buddy Bot n√£o tem a capacidade de interpretar situa√ß√µes de crise, emerg√™ncias\
#         m√©dicas ou de sa√∫de mental, ou de fornecer ajuda em tempo real.
#         Todas as intera√ß√µes com o Buddy Bot s√£o baseadas em intelig√™ncia artificial, o \
#         que significa que as respostas s√£o geradas automaticamente e n√£o s√£o \
#         monitoradas por seres humanos em tempo real.
#         Respeitamos sua privacidade. Todas as conversas com o Buddy Bot s√£o an√¥nimas e \
#         n√£o coletamos, armazenamos ou compartilhamos quaisquer dados pessoais do \
#         usu√°rio. Nosso objetivo √© proporcionar um espa√ßo seguro para voc√™ se expressar.
#         Ao utilizar o Buddy Bot, voc√™ concorda com este Aviso Legal e compreende que \
#         qualquer a√ß√£o ou decis√£o tomada com base nas respostas do Buddy Bot √© de sua \
#         responsabilidade total.
# """
#     )

# Set OpenAI API key from Streamlit secrets


# Set a default mode
if "openai_model" not in st.session_state:
    st.session_state["openai_model"] = "gpt-4-1106-preview"

# Initialize chat history
if "messages" not in st.session_state:
    st.session_state.messages = []

# Display chat messages from history on app rerun (when we hit enter)
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# Accept user input
if prompt := st.chat_input("Diga qual sua d√∫vida ou preocupa√ß√£o"):
    # Display user message in chat message container
    with st.chat_message("user"):
        st.markdown(prompt)

    # Add user message to chat history
    st.session_state.messages.append({"role": "user", "content": prompt})

    # Display assistant response in chat message container
    with st.chat_message("assistant"):
        message_placeholder = st.empty()
        full_response = ""

        responses = client.chat.completions.create(
            model=st.session_state["openai_model"],
            messages=SYSTEM_MSG
            + [
                {"role": msg["role"], "content": msg["content"]}
                for msg in st.session_state.messages
            ],
            stream=True,
        )

        for response in responses:
            full_response += response.choices[0].delta.content or ""
            message_placeholder.markdown(full_response + "‚ñå")

        message_placeholder.markdown(full_response)

    # Add assistant response to chat history
    st.session_state.messages.append({"role": "assistant", "content": full_response})
