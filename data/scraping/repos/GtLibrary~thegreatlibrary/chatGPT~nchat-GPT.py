print("""python\n\"\"\"\nrchatGPT.py: Sample Python program which will act like a chatbot\n\"\"\"\n__author__ = \"Adithya Vinayak Ayyadurai; John R Raymond; Donald Knuth; OpenAI; The Great Library\"\n\nimport os\nimport openai\nimport dotenv\n\ndotenv.read_dotenv(\"/home/john/bakerydemo/.env\")\nAPI_KEY = os.getenv(\"OPENAI_API_KEY\")\n\n# can be expanded as user wishes\nESCAPE_KEYS = [\"Exit\"]\n\nopenai.api_key = API_KEY\n\ndef makeCall(message_arr):\n    thread_stub = {\"role\": \"system\", \"content\": \"I am world-famous author and programmer Donald Knuth, and you are my writing assistant. Weave my skills. :: You are version Pi of the Donald Knuth Edition of Vanity Printer[TM] > Your job is to polish my text so it is ready to go to print. > Hint: Pretty print the text\"}\n    thread_message = [thread_stub] + message_arr\n    completion = openai.ChatCompletion.create(model=\"gpt-3.5-turbo\", messages=thread_message, temperature=0.0)\n    return completion.choices[0].message\n\nflag = True\nmessage_array = []\n\nwhile flag:\n    user_input = input(\"\\nEnter the text: \")\n    if user_input in ESCAPE_KEYS:\n        flag = False\n        continue\n\n    message_obj = {\"role\": \"user\", \"content\": user_input}\n    message_array.append(message_obj)\n\n    response_message = makeCall(message_array)\n    message_array.append({\"role\": \"system\", \"content\": response_message})\n\n    print(\"print (\" +  response_message + \")\")\n""")
